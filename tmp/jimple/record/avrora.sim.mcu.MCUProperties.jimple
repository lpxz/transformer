public class avrora.sim.mcu.MCUProperties extends java.lang.Object
{
    protected static final int BASE_ADDRESS;
    protected final java.util.HashMap pinAssignments;
    protected final avrora.sim.mcu.RegisterLayout layout;
    protected final java.util.HashMap interruptAssignments;
    protected final java.lang.String[] ioreg_name;
    protected final java.lang.String[] interrupt_name;
    public final int num_interrupts;

    protected void <init>(java.util.HashMap, avrora.sim.mcu.RegisterLayout, java.util.HashMap, int)
    {
        avrora.sim.mcu.MCUProperties this;
        java.util.HashMap pa, inta;
        avrora.sim.mcu.RegisterLayout rl;
        int ni;
        java.lang.String[] $r0;

        this := @this: avrora.sim.mcu.MCUProperties;
        pa := @parameter0: java.util.HashMap;
        rl := @parameter1: avrora.sim.mcu.RegisterLayout;
        inta := @parameter2: java.util.HashMap;
        ni := @parameter3: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<avrora.sim.mcu.MCUProperties: java.util.HashMap pinAssignments> = pa;
        this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout> = rl;
        this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments> = inta;
        $r0 = virtualinvoke this.<avrora.sim.mcu.MCUProperties: java.lang.String[] initIORNames()>();
        this.<avrora.sim.mcu.MCUProperties: java.lang.String[] ioreg_name> = $r0;
        $r0 = virtualinvoke this.<avrora.sim.mcu.MCUProperties: java.lang.String[] initInterruptNames()>();
        this.<avrora.sim.mcu.MCUProperties: java.lang.String[] interrupt_name> = $r0;
        this.<avrora.sim.mcu.MCUProperties: int num_interrupts> = ni;
        return;
    }

    public avrora.sim.mcu.RegisterLayout getRegisterLayout()
    {
        avrora.sim.mcu.MCUProperties this;
        avrora.sim.mcu.RegisterLayout $r0;

        this := @this: avrora.sim.mcu.MCUProperties;
        $r0 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        return $r0;
    }

    protected java.lang.String[] initInterruptNames()
    {
        avrora.sim.mcu.MCUProperties this;
        int max, $i0, $i1;
        java.lang.String[] interrupt_name;
        java.util.Iterator i;
        java.lang.String s;
        java.lang.Integer iv;
        java.util.HashMap $r0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2;
        long tid_initInterruptNames;
        java.lang.Thread thread_initInterruptNames;

        this := @this: avrora.sim.mcu.MCUProperties;
        thread_initInterruptNames = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_initInterruptNames = virtualinvoke thread_initInterruptNames.<java.lang.Thread: long getId()>();
        max = specialinvoke this.<avrora.sim.mcu.MCUProperties: int getMax()>();
        $i0 = max + 1;
        interrupt_name = newarray (java.lang.String)[$i0];
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;
        $r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Set keySet()>();
        i = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        s = (java.lang.String) $r2;
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;
        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(s);
        iv = (java.lang.Integer) $r2;
        $i1 = virtualinvoke iv.<java.lang.Integer: int intValue()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>(interrupt_name, 18, tid_initInterruptNames, "avrora.sim.mcu.MCUProperties", 76, $i1, s);
        interrupt_name[$i1] = s;
        goto label0;

     label1:
        return interrupt_name;
    }

    private int getMax()
    {
        avrora.sim.mcu.MCUProperties this;
        int max, v;
        java.util.Iterator i;
        java.lang.String s;
        java.util.HashMap $r0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        this := @this: avrora.sim.mcu.MCUProperties;
        max = 0;
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;
        $r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Set keySet()>();
        i = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        s = (java.lang.String) $r2;
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;
        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(s);
        $r3 = (java.lang.Integer) $r2;
        v = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        if max >= v goto label1;

        max = v;

     label1:
        goto label0;

     label2:
        return max;
    }

    protected java.lang.String[] initIORNames()
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String[] ioreg_name;
        int cntr, $i0, $i1;
        avrora.sim.mcu.RegisterLayout$RegisterInfo registerInfo;
        avrora.sim.mcu.RegisterLayout $r0, $r1;
        avrora.sim.mcu.RegisterLayout$RegisterInfo[] $r2;
        java.lang.String $r3;
        long tid_initIORNames;
        java.lang.Thread thread_initIORNames;

        this := @this: avrora.sim.mcu.MCUProperties;
        thread_initIORNames = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_initIORNames = virtualinvoke thread_initIORNames.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        $i0 = $r0.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;
        ioreg_name = newarray (java.lang.String)[$i0];
        cntr = 0;

     label0:
        $r1 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        $i1 = $r1.<avrora.sim.mcu.RegisterLayout: int ioreg_size>;
        if cntr >= $i1 goto label2;

        $r0 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        $r2 = $r0.<avrora.sim.mcu.RegisterLayout: avrora.sim.mcu.RegisterLayout$RegisterInfo[] info>;
        registerInfo = $r2[cntr];
        if registerInfo == null goto label1;

        $r3 = registerInfo.<avrora.sim.mcu.RegisterLayout$RegisterInfo: java.lang.String name>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>(ioreg_name, 18, tid_initIORNames, "avrora.sim.mcu.MCUProperties", 97, cntr, $r3);
        ioreg_name[cntr] = $r3;

     label1:
        cntr = cntr + 1;
        goto label0;

     label2:
        return ioreg_name;
    }

    public int getPin(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String n, $r4, $r5;
        java.lang.Integer i;
        java.lang.StringBuilder $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        int $i0;

        this := @this: avrora.sim.mcu.MCUProperties;
        n := @parameter0: java.lang.String;
        $r1 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap pinAssignments>;
        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(n);
        i = (java.lang.Integer) $r2;
        if i != null goto label0;

        $r3 = new java.util.NoSuchElementException;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(n);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pin not found");
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        $i0 = virtualinvoke i.<java.lang.Integer: int intValue()>();
        return $i0;
    }

    public int getIOReg(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String n;
        avrora.sim.mcu.RegisterLayout $r0;
        int $i0;

        this := @this: avrora.sim.mcu.MCUProperties;
        n := @parameter0: java.lang.String;
        $r0 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        $i0 = virtualinvoke $r0.<avrora.sim.mcu.RegisterLayout: int getIOReg(java.lang.String)>(n);
        return $i0;
    }

    public int getIORegAddr(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String n;
        int $i0;

        this := @this: avrora.sim.mcu.MCUProperties;
        n := @parameter0: java.lang.String;
        $i0 = virtualinvoke this.<avrora.sim.mcu.MCUProperties: int getIOReg(java.lang.String)>(n);
        $i0 = $i0 + 32;
        return $i0;
    }

    public boolean hasIOReg(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String n;
        avrora.sim.mcu.RegisterLayout $r0;
        boolean $z0;

        this := @this: avrora.sim.mcu.MCUProperties;
        n := @parameter0: java.lang.String;
        $r0 = this.<avrora.sim.mcu.MCUProperties: avrora.sim.mcu.RegisterLayout layout>;
        $z0 = virtualinvoke $r0.<avrora.sim.mcu.RegisterLayout: boolean hasIOReg(java.lang.String)>(n);
        return $z0;
    }

    public int getInterrupt(java.lang.String)
    {
        avrora.sim.mcu.MCUProperties this;
        java.lang.String n, $r4, $r5;
        java.lang.Integer i;
        java.lang.StringBuilder $r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        int $i0;

        this := @this: avrora.sim.mcu.MCUProperties;
        n := @parameter0: java.lang.String;
        $r1 = this.<avrora.sim.mcu.MCUProperties: java.util.HashMap interruptAssignments>;
        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(n);
        i = (java.lang.Integer) $r2;
        if i != null goto label0;

        $r3 = new java.util.NoSuchElementException;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <cck.text.StringUtil: java.lang.String quote(java.lang.Object)>(n);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interrupt not found");
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        $i0 = virtualinvoke i.<java.lang.Integer: int intValue()>();
        return $i0;
    }

    public java.lang.String getIORegName(int)
    {
        avrora.sim.mcu.MCUProperties this;
        int ioreg;
        java.lang.String[] $r0;
        java.lang.String $r1;
        long tid_getIORegName;
        java.lang.Thread thread_getIORegName;

        this := @this: avrora.sim.mcu.MCUProperties;
        ioreg := @parameter0: int;
        thread_getIORegName = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getIORegName = virtualinvoke thread_getIORegName.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.lang.String[] ioreg_name>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r0, 18, tid_getIORegName, "avrora.sim.mcu.MCUProperties", 168, ioreg, $r1);
        $r1 = $r0[ioreg];
        return $r1;
    }

    public java.lang.String getInterruptName(int)
    {
        avrora.sim.mcu.MCUProperties this;
        int inum;
        java.lang.String[] $r0;
        java.lang.String $r1;
        long tid_getInterruptName;
        java.lang.Thread thread_getInterruptName;

        this := @this: avrora.sim.mcu.MCUProperties;
        inum := @parameter0: int;
        thread_getInterruptName = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getInterruptName = virtualinvoke thread_getInterruptName.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.mcu.MCUProperties: java.lang.String[] interrupt_name>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r0, 18, tid_getInterruptName, "avrora.sim.mcu.MCUProperties", 178, inum, $r1);
        $r1 = $r0[inum];
        return $r1;
    }
}
