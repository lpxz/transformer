public class spec.jbb.Item extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    private java.lang.String name;
    private java.lang.String brandInformation;
    private java.math.BigDecimal price;
    private int id;

    public void <init>()
    {
        spec.jbb.Item this;

        this := @this: spec.jbb.Item;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public int getId()
    {
        spec.jbb.Item this;
        int $i0;
        long tid_getId;
        java.lang.Thread thread_getId;

        this := @this: spec.jbb.Item;
        thread_getId = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getId = virtualinvoke thread_getId.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 105, tid_getId, "spec.jbb.Item", 33, $i0);
        $i0 = this.<spec.jbb.Item: int id>;
        return $i0;
    }

    public java.lang.String getName()
    {
        spec.jbb.Item this;
        java.lang.String $r0;
        long tid_getName;
        java.lang.Thread thread_getName;

        this := @this: spec.jbb.Item;
        thread_getName = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getName = virtualinvoke thread_getName.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 106, tid_getName, "spec.jbb.Item", 37, $r0);
        $r0 = this.<spec.jbb.Item: java.lang.String name>;
        return $r0;
    }

    public java.lang.String getBrandInfo()
    {
        spec.jbb.Item this;
        java.lang.String $r0;
        long tid_getBrandInfo;
        java.lang.Thread thread_getBrandInfo;

        this := @this: spec.jbb.Item;
        thread_getBrandInfo = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getBrandInfo = virtualinvoke thread_getBrandInfo.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 107, tid_getBrandInfo, "spec.jbb.Item", 41, $r0);
        $r0 = this.<spec.jbb.Item: java.lang.String brandInformation>;
        return $r0;
    }

    public java.math.BigDecimal getPrice()
    {
        spec.jbb.Item this;
        java.math.BigDecimal $r0;
        long tid_getPrice;
        java.lang.Thread thread_getPrice;

        this := @this: spec.jbb.Item;
        thread_getPrice = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getPrice = virtualinvoke thread_getPrice.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 108, tid_getPrice, "spec.jbb.Item", 45, $r0);
        $r0 = this.<spec.jbb.Item: java.math.BigDecimal price>;
        return $r0;
    }

    public void setUsingRandom(int)
    {
        spec.jbb.Item this;
        int inId;
        float temp;
        java.lang.String $r0;
        char[] $r1;
        java.math.BigDecimal $r2;
        double $d0;
        java.lang.Object localthislocksetUsingRandom;
        java.lang.Throwable throwableLocal11;
        long tid_setUsingRandom;
        java.lang.Thread thread_setUsingRandom;

        this := @this: spec.jbb.Item;
        inId := @parameter0: int;
        thread_setUsingRandom = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setUsingRandom = virtualinvoke thread_setUsingRandom.<java.lang.Thread: long getId()>();
        localthislocksetUsingRandom = this;

     label0:
        entermonitor localthislocksetUsingRandom;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>(localthislocksetUsingRandom, 0, tid_setUsingRandom);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 105, tid_setUsingRandom, "spec.jbb.Item", 49, inId);
        this.<spec.jbb.Item: int id> = inId;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int)>(14, 24);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 106, tid_setUsingRandom, "spec.jbb.Item", 50, $r0);
        this.<spec.jbb.Item: java.lang.String name> = $r0;
        temp = staticinvoke <spec.jbb.JBButil: float create_random_float_val_return(float,float,float)>(1.0F, 100.0F, 0.01F);
        $r2 = new java.math.BigDecimal;
        $d0 = (double) temp;
        specialinvoke $r2.<java.math.BigDecimal: void <init>(double)>($d0);
        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 108, tid_setUsingRandom, "spec.jbb.Item", 53, $r2);
        this.<spec.jbb.Item: java.math.BigDecimal price> = $r2;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_a_string_with_original(int,int,float,java.lang.Integer)>(26, 50, 10.0F, null);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 107, tid_setUsingRandom, "spec.jbb.Item", 54, $r0);
        this.<spec.jbb.Item: java.lang.String brandInformation> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(localthislocksetUsingRandom, 0, tid_setUsingRandom);
        exitmonitor localthislocksetUsingRandom;
        goto label1;

     label1:
        return;

     label2:
        throwableLocal11 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(localthislocksetUsingRandom, 0, tid_setUsingRandom);
        exitmonitor localthislocksetUsingRandom;

     label4:
        throw throwableLocal11;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
