public class spec.reporter.ReportProps extends java.util.Properties
{
    private static final long serialVersionUID;
    static final java.lang.String COPYRIGHT;

    public void <init>()
    {
        spec.reporter.ReportProps this;

        this := @this: spec.reporter.ReportProps;
        specialinvoke this.<java.util.Properties: void <init>()>();
        return;
    }

    public java.lang.String get(java.lang.String)
    {
        spec.reporter.ReportProps this;
        java.lang.String key, $r0;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.String;
        $r0 = specialinvoke this.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);
        return $r0;
    }

    public java.lang.String get(java.lang.String, java.lang.String)
    {
        spec.reporter.ReportProps this;
        java.lang.String key, def, s;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.String;
        def := @parameter1: java.lang.String;
        s = specialinvoke this.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);
        if s != null goto label0;

        return def;

     label0:
        return s;
    }

    public double getDouble(java.lang.Object)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key;
        double $d0;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        $d0 = virtualinvoke this.<spec.reporter.ReportProps: double getDouble(java.lang.Object,double)>(key, 0.0);
        return $d0;
    }

    public double getDouble(java.lang.Object, double)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key, $r0;
        double def, $d0;
        java.lang.String s;
        java.lang.Exception l4, $r2;
        java.lang.Double $r1;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        def := @parameter1: double;

     label0:
        $r0 = specialinvoke this.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);
        s = (java.lang.String) $r0;
        if s == null goto label3;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(s);
        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

     label1:
        return $d0;

     label2:
        $r2 := @caughtexception;
        l4 = $r2;

     label3:
        return def;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public int getInt(java.lang.Object)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key;
        int $i0;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        $i0 = virtualinvoke this.<spec.reporter.ReportProps: int getInt(java.lang.Object,int)>(key, 0);
        return $i0;
    }

    public int getInt(java.lang.Object, int)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key, $r0;
        int def, $i0;
        java.lang.String s, $r1;
        java.lang.Exception l3, $r2;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        def := @parameter1: int;

     label0:
        $r0 = specialinvoke this.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);
        s = (java.lang.String) $r0;
        if s == null goto label3;

        $r1 = virtualinvoke s.<java.lang.String: java.lang.String trim()>();
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label1:
        return $i0;

     label2:
        $r2 := @caughtexception;
        l3 = $r2;

     label3:
        return def;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public long getLong(java.lang.Object)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key;
        long $l0;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        $l0 = virtualinvoke this.<spec.reporter.ReportProps: long getLong(java.lang.Object,int)>(key, 0);
        return $l0;
    }

    public long getLong(java.lang.Object, int)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key, $r0;
        int def;
        java.lang.String s;
        java.lang.Exception l3, $r1;
        long $l0;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        def := @parameter1: int;

     label0:
        $r0 = specialinvoke this.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);
        s = (java.lang.String) $r0;
        if s == null goto label3;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(s);

     label1:
        return $l0;

     label2:
        $r1 := @caughtexception;
        l3 = $r1;

     label3:
        $l0 = (long) def;
        return $l0;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public java.lang.String getString(java.lang.Object)
    {
        spec.reporter.ReportProps this;
        java.lang.Object key, $r0;
        java.lang.String $r1;

        this := @this: spec.reporter.ReportProps;
        key := @parameter0: java.lang.Object;
        $r0 = specialinvoke this.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);
        $r1 = (java.lang.String) $r0;
        return $r1;
    }

    public void load(java.lang.String) throws java.io.IOException
    {
        spec.reporter.ReportProps this;
        java.lang.String name;
        java.io.FileReader $r0;

        this := @this: spec.reporter.ReportProps;
        name := @parameter0: java.lang.String;
        $r0 = new java.io.FileReader;
        specialinvoke $r0.<java.io.FileReader: void <init>(java.lang.String)>(name);
        virtualinvoke this.<spec.reporter.ReportProps: void load(java.io.Reader)>($r0);
        return;
    }

    public void load(java.io.Reader) throws java.io.IOException
    {
        spec.reporter.ReportProps this;
        java.io.Reader readstream;
        java.io.BufferedReader $r0, in;
        java.lang.String line, key, value, $r2;
        int i, $i0;
        boolean $z0;

        this := @this: spec.reporter.ReportProps;
        readstream := @parameter0: java.io.Reader;
        $r0 = new java.io.BufferedReader;
        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(readstream);
        in = $r0;
        goto label3;

     label0:
        $z0 = virtualinvoke line.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 == 0 goto label1;

        goto label3;

     label1:
        i = virtualinvoke line.<java.lang.String: int indexOf(int)>(61);
        if i >= 0 goto label2;

        goto label3;

     label2:
        key = virtualinvoke line.<java.lang.String: java.lang.String substring(int,int)>(0, i);
        $i0 = i + 1;
        value = virtualinvoke line.<java.lang.String: java.lang.String substring(int)>($i0);
        virtualinvoke this.<spec.reporter.ReportProps: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

     label3:
        $r2 = virtualinvoke in.<java.io.BufferedReader: java.lang.String readLine()>();
        line = $r2;
        if $r2 != null goto label0;

        return;
    }
}
