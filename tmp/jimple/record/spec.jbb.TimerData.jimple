public class spec.jbb.TimerData extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    private static byte menu;
    private static byte typing;
    private static byte thinking;
    private static byte maxWaitTypes;
    private spec.jbb.infra.Util.TransactionLogBuffer timerLog;
    private long[] wait_times_menu;
    private long[] wait_times_typing;
    private long[] wait_times_thinking;
    private long[] transactionCount;
    private long[] totalTime;
    private long[] minimumTime;
    private long[] maximumTime;
    private float[] averageTime;
    private long[] totalTimeSquare;
    private double[] standardDeviationTime;
    private double[] coefficientOfVariationTime;
    private long min_transaction_count;
    private long max_transaction_count;
    private long rampup_time;
    private long measurement_time;
    private double tpmc;
    private double btps;
    private short timer_flag;
    private boolean useWaits;

    static void <clinit>()
    {
        <spec.jbb.TimerData: byte menu> = 0;
        <spec.jbb.TimerData: byte typing> = 1;
        <spec.jbb.TimerData: byte thinking> = 2;
        <spec.jbb.TimerData: byte maxWaitTypes> = 3;
        return;
    }

    public void <init>()
    {
        spec.jbb.TimerData this;
        int i;
        byte $b0;
        long[] $r0, $r3;
        float[] $r1, $r4;
        double[] $r2, $r5;

        this := @this: spec.jbb.TimerData;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<spec.jbb.TimerData: long min_transaction_count> = 9223372036854775807L;
        this.<spec.jbb.TimerData: long max_transaction_count> = -9223372036854775808L;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_menu> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_typing> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_thinking> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] transactionCount> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] totalTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] minimumTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] maximumTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r1 = newarray (float)[$b0];
        this.<spec.jbb.TimerData: float[] averageTime> = $r1;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] totalTimeSquare> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r2 = newarray (double)[$b0];
        this.<spec.jbb.TimerData: double[] standardDeviationTime> = $r2;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r2 = newarray (double)[$b0];
        this.<spec.jbb.TimerData: double[] coefficientOfVariationTime> = $r2;
        this.<spec.jbb.TimerData: long rampup_time> = 0L;
        this.<spec.jbb.TimerData: long measurement_time> = 0L;
        this.<spec.jbb.TimerData: boolean useWaits> = 0;
        this.<spec.jbb.TimerData: double tpmc> = 0.0;
        this.<spec.jbb.TimerData: double btps> = 0.0;
        i = 0;
        goto label1;

     label0:
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_menu>;
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] transactionCount>;
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] totalTime>;
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] minimumTime>;
        $r3[i] = 9223372036854775807L;
        $r3 = this.<spec.jbb.TimerData: long[] maximumTime>;
        $r3[i] = 0L;
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        $r4[i] = 0.0F;
        $r3 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        $r3[i] = 0L;
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        $r5[i] = 0.0;
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        $r5[i] = 0.0;
        i = i + 1;

     label1:
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b0 goto label0;

        this.<spec.jbb.TimerData: long min_transaction_count> = 9223372036854775807L;
        this.<spec.jbb.TimerData: long max_transaction_count> = -9223372036854775808L;
        specialinvoke this.<spec.jbb.TimerData: void buildDisplay()>();
        return;
    }

    public void initialize()
    {
        spec.jbb.TimerData this;
        byte $b0;
        int i;
        long[] $r0, $r3;
        float[] $r1, $r4;
        double[] $r2, $r5;
        long tid_initialize;
        java.lang.Thread thread_initialize;

        this := @this: spec.jbb.TimerData;
        thread_initialize = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_initialize = virtualinvoke thread_initialize.<java.lang.Thread: long getId()>();
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_menu> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_typing> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] wait_times_thinking> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] transactionCount> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] totalTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] minimumTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] maximumTime> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r1 = newarray (float)[$b0];
        this.<spec.jbb.TimerData: float[] averageTime> = $r1;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r0 = newarray (long)[$b0];
        this.<spec.jbb.TimerData: long[] totalTimeSquare> = $r0;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r2 = newarray (double)[$b0];
        this.<spec.jbb.TimerData: double[] standardDeviationTime> = $r2;
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        $r2 = newarray (double)[$b0];
        this.<spec.jbb.TimerData: double[] coefficientOfVariationTime> = $r2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 64, tid_initialize, "spec.jbb.TimerData", 140, 0L);
        this.<spec.jbb.TimerData: long rampup_time> = 0L;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 65, tid_initialize, "spec.jbb.TimerData", 141, 0L);
        this.<spec.jbb.TimerData: long measurement_time> = 0L;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 66, tid_initialize, "spec.jbb.TimerData", 142, 0);
        this.<spec.jbb.TimerData: boolean useWaits> = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_initialize, "spec.jbb.TimerData", 143, 0.0);
        this.<spec.jbb.TimerData: double tpmc> = 0.0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_initialize, "spec.jbb.TimerData", 144, 0.0);
        this.<spec.jbb.TimerData: double btps> = 0.0;
        i = 0;
        goto label1;

     label0:
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_menu>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 146, i, 0L);
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 147, i, 0L);
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 148, i, 0L);
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 149, i, 0L);
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 150, i, 0L);
        $r3[i] = 0L;
        $r3 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 151, i, 9223372036854775807L);
        $r3[i] = 9223372036854775807L;
        $r3 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 152, i, 0L);
        $r3[i] = 0L;
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_initialize, "spec.jbb.TimerData", 153, i, 0.0F);
        $r4[i] = 0.0F;
        $r3 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_initialize, "spec.jbb.TimerData", 154, i, 0L);
        $r3[i] = 0L;
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_initialize, "spec.jbb.TimerData", 155, i, 0.0);
        $r5[i] = 0.0;
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_initialize, "spec.jbb.TimerData", 156, i, 0.0);
        $r5[i] = 0.0;
        i = i + 1;

     label1:
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b0 goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_initialize, "spec.jbb.TimerData", 158, 9223372036854775807L);
        this.<spec.jbb.TimerData: long min_transaction_count> = 9223372036854775807L;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_initialize, "spec.jbb.TimerData", 159, -9223372036854775808L);
        this.<spec.jbb.TimerData: long max_transaction_count> = -9223372036854775808L;
        specialinvoke this.<spec.jbb.TimerData: void buildDisplay()>();
        return;
    }

    public void zeroTimerData()
    {
        spec.jbb.TimerData this;
        int i;
        long[] $r0;
        float[] $r1;
        double[] $r2;
        byte $b0;
        long tid_zeroTimerData;
        java.lang.Thread thread_zeroTimerData;

        this := @this: spec.jbb.TimerData;
        thread_zeroTimerData = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_zeroTimerData = virtualinvoke thread_zeroTimerData.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_zeroTimerData, "spec.jbb.TimerData", 164, 0.0);
        this.<spec.jbb.TimerData: double tpmc> = 0.0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_zeroTimerData, "spec.jbb.TimerData", 165, 0.0);
        this.<spec.jbb.TimerData: double btps> = 0.0;
        i = 0;
        goto label1;

     label0:
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_zeroTimerData, "spec.jbb.TimerData", 167, i, 0L);
        $r0[i] = 0L;
        $r0 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_zeroTimerData, "spec.jbb.TimerData", 168, i, 0L);
        $r0[i] = 0L;
        $r0 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_zeroTimerData, "spec.jbb.TimerData", 169, i, 9223372036854775807L);
        $r0[i] = 9223372036854775807L;
        $r0 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_zeroTimerData, "spec.jbb.TimerData", 170, i, 0L);
        $r0[i] = 0L;
        $r1 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r1, 70, tid_zeroTimerData, "spec.jbb.TimerData", 171, i, 0.0F);
        $r1[i] = 0.0F;
        $r0 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_zeroTimerData, "spec.jbb.TimerData", 172, i, 0L);
        $r0[i] = 0L;
        $r2 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r2, 71, tid_zeroTimerData, "spec.jbb.TimerData", 173, i, 0.0);
        $r2[i] = 0.0;
        $r2 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r2, 71, tid_zeroTimerData, "spec.jbb.TimerData", 174, i, 0.0);
        $r2[i] = 0.0;
        i = i + 1;

     label1:
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b0 goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_zeroTimerData, "spec.jbb.TimerData", 176, 9223372036854775807L);
        this.<spec.jbb.TimerData: long min_transaction_count> = 9223372036854775807L;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_zeroTimerData, "spec.jbb.TimerData", 177, -9223372036854775808L);
        this.<spec.jbb.TimerData: long max_transaction_count> = -9223372036854775808L;
        specialinvoke this.<spec.jbb.TimerData: void buildDisplay()>();
        return;
    }

    public void useWaitTimesPercentage(int)
    {
        spec.jbb.TimerData this;
        int percent, $i0;
        long[] $r0;
        long $l1, tid_useWaitTimesPercentage;
        java.lang.Thread thread_useWaitTimesPercentage;

        this := @this: spec.jbb.TimerData;
        percent := @parameter0: int;
        thread_useWaitTimesPercentage = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_useWaitTimesPercentage = virtualinvoke thread_useWaitTimesPercentage.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 66, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 182, 1);
        this.<spec.jbb.TimerData: boolean useWaits> = 1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 18000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 184, 0, $l1);
        $r0[0] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 3000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 185, 1, $l1);
        $r0[1] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 2000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 186, 2, $l1);
        $r0[2] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 2000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 187, 3, $l1);
        $r0[3] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 2000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 188, 4, $l1);
        $r0[4] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $i0 = 2000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 189, 5, $l1);
        $r0[5] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 12000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 190, 0, $l1);
        $r0[0] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 12000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 191, 1, $l1);
        $r0[1] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 10000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 192, 2, $l1);
        $r0[2] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 5000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 193, 3, $l1);
        $r0[3] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 5000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 194, 4, $l1);
        $r0[4] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $i0 = 5000 * percent;
        $i0 = $i0 / 100;
        $l1 = (long) $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_useWaitTimesPercentage, "spec.jbb.TimerData", 195, 5, $l1);
        $r0[5] = $l1;
        return;
    }

    public void setRampUpTime(long)
    {
        spec.jbb.TimerData this;
        long in_rampup_time, tid_setRampUpTime;
        java.lang.Thread thread_setRampUpTime;

        this := @this: spec.jbb.TimerData;
        in_rampup_time := @parameter0: long;
        thread_setRampUpTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setRampUpTime = virtualinvoke thread_setRampUpTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 64, tid_setRampUpTime, "spec.jbb.TimerData", 200, in_rampup_time);
        this.<spec.jbb.TimerData: long rampup_time> = in_rampup_time;
        return;
    }

    public void setMeasurementTime(long)
    {
        spec.jbb.TimerData this;
        long in_measurement_time, tid_setMeasurementTime;
        java.lang.Thread thread_setMeasurementTime;

        this := @this: spec.jbb.TimerData;
        in_measurement_time := @parameter0: long;
        thread_setMeasurementTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setMeasurementTime = virtualinvoke thread_setMeasurementTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 65, tid_setMeasurementTime, "spec.jbb.TimerData", 205, in_measurement_time);
        this.<spec.jbb.TimerData: long measurement_time> = in_measurement_time;
        return;
    }

    public long getRampUpTime()
    {
        spec.jbb.TimerData this;
        long temp, tid_getRampUpTime;
        java.lang.Thread thread_getRampUpTime;

        this := @this: spec.jbb.TimerData;
        thread_getRampUpTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getRampUpTime = virtualinvoke thread_getRampUpTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 64, tid_getRampUpTime, "spec.jbb.TimerData", 209, temp);
        temp = this.<spec.jbb.TimerData: long rampup_time>;
        return temp;
    }

    public long getMeasurementTime()
    {
        spec.jbb.TimerData this;
        long temp, tid_getMeasurementTime;
        java.lang.Thread thread_getMeasurementTime;

        this := @this: spec.jbb.TimerData;
        thread_getMeasurementTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMeasurementTime = virtualinvoke thread_getMeasurementTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 65, tid_getMeasurementTime, "spec.jbb.TimerData", 214, temp);
        temp = this.<spec.jbb.TimerData: long measurement_time>;
        return temp;
    }

    public long[][] getWaitTimes()
    {
        spec.jbb.TimerData this;
        byte $b0, $b1;
        long[][] temp;
        long[] $r0;

        this := @this: spec.jbb.TimerData;
        $b0 = <spec.jbb.TimerData: byte maxWaitTypes>;
        temp = newarray (long[])[$b0];
        $b1 = <spec.jbb.TimerData: byte menu>;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_menu>;
        temp[$b1] = $r0;
        $b1 = <spec.jbb.TimerData: byte typing>;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        temp[$b1] = $r0;
        $b1 = <spec.jbb.TimerData: byte thinking>;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        temp[$b1] = $r0;
        return temp;
    }

    public void setWaitTimes(long[][])
    {
        spec.jbb.TimerData this;
        long[][] in_wait_times;
        int i;
        byte $b0, $b2;
        long[] $r0, $r1;
        long $l1, tid_setWaitTimes;
        java.lang.Thread thread_setWaitTimes;

        this := @this: spec.jbb.TimerData;
        in_wait_times := @parameter0: long[][];
        thread_setWaitTimes = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setWaitTimes = virtualinvoke thread_setWaitTimes.<java.lang.Thread: long getId()>();
        i = 0;
        goto label1;

     label0:
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_menu>;
        $b0 = <spec.jbb.TimerData: byte menu>;
        $r1 = in_wait_times[$b0];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_setWaitTimes, "spec.jbb.TimerData", 229, i, $l1);
        $l1 = $r1[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_setWaitTimes, "spec.jbb.TimerData", 229, i, $l1);
        $r0[i] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        $b0 = <spec.jbb.TimerData: byte typing>;
        $r1 = in_wait_times[$b0];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_setWaitTimes, "spec.jbb.TimerData", 230, i, $l1);
        $l1 = $r1[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_setWaitTimes, "spec.jbb.TimerData", 230, i, $l1);
        $r0[i] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        $b0 = <spec.jbb.TimerData: byte thinking>;
        $r1 = in_wait_times[$b0];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_setWaitTimes, "spec.jbb.TimerData", 231, i, $l1);
        $l1 = $r1[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_setWaitTimes, "spec.jbb.TimerData", 231, i, $l1);
        $r0[i] = $l1;
        i = i + 1;

     label1:
        $b2 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b2 goto label0;

        return;
    }

    public long getMenuWaitTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getMenuWaitTime;
        long[] $r0;
        java.lang.Thread thread_getMenuWaitTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getMenuWaitTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMenuWaitTime = virtualinvoke thread_getMenuWaitTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_menu>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getMenuWaitTime, "spec.jbb.TimerData", 237, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getTypingWaitTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getTypingWaitTime;
        long[] $r0;
        java.lang.Thread thread_getTypingWaitTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getTypingWaitTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTypingWaitTime = virtualinvoke thread_getTypingWaitTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_typing>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getTypingWaitTime, "spec.jbb.TimerData", 242, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getThinkingWaitTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getThinkingWaitTime;
        long[] $r0;
        java.lang.Thread thread_getThinkingWaitTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getThinkingWaitTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getThinkingWaitTime = virtualinvoke thread_getThinkingWaitTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] wait_times_thinking>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getThinkingWaitTime, "spec.jbb.TimerData", 247, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public void updateTimerData(int, long)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long transaction_time, $l1, $l2, tid_updateTimerData;
        long[] $r0, $r1;
        byte $b3;
        java.lang.Thread thread_updateTimerData;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        transaction_time := @parameter1: long;
        thread_updateTimerData = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_updateTimerData = virtualinvoke thread_updateTimerData.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 253, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l1 = $l1 + 1L;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 253, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 254, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l1 = $l1 + transaction_time;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 254, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 255, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l2 = transaction_time * transaction_time;
        $l1 = $l1 + $l2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 255, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_updateTimerData, "spec.jbb.TimerData", 257, transaction_type, $l1);
        $l1 = $r1[transaction_type];
        $b3 = transaction_time cmp $l1;
        if $b3 >= 0 goto label0;

        $r0 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 258, transaction_type, transaction_time);
        $r0[transaction_type] = transaction_time;

     label0:
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_updateTimerData, "spec.jbb.TimerData", 260, transaction_type, $l1);
        $l1 = $r1[transaction_type];
        $b3 = transaction_time cmp $l1;
        if $b3 <= 0 goto label1;

        $r0 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateTimerData, "spec.jbb.TimerData", 261, transaction_type, transaction_time);
        $r0[transaction_type] = transaction_time;

     label1:
        return;
    }

    public void calculateResponseTimeStats()
    {
        spec.jbb.TimerData this;
        int i;
        long[] $r0, $r2, $r3, $r5, $r6;
        long $l0, $l2, $l3, $l4, $l5, tid_calculateResponseTimeStats;
        byte $b1, $b6;
        float[] $r1;
        float $f0, $f1;
        double[] $r4, $r7;
        double $d0, $d1, $d2;
        java.lang.Thread thread_calculateResponseTimeStats;

        this := @this: spec.jbb.TimerData;
        thread_calculateResponseTimeStats = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_calculateResponseTimeStats = virtualinvoke thread_calculateResponseTimeStats.<java.lang.Thread: long getId()>();
        i = 0;
        goto label3;

     label0:
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 267, i, $l0);
        $l0 = $r0[i];
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label1;

        $r1 = this.<spec.jbb.TimerData: float[] averageTime>;
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 268, i, $l2);
        $l2 = $r2[i];
        $f0 = (float) $l2;
        $r3 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r3, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 269, i, $l3);
        $l3 = $r3[i];
        $f1 = (float) $l3;
        $f0 = $f0 / $f1;
        $f0 = $f0 / 1000.0F;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r1, 70, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 268, i, $f0);
        $r1[i] = $f0;
        $r4 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 271, i, $l2);
        $l2 = $r2[i];
        $d0 = (double) $l2;
        $r5 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r5, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 272, i, $l4);
        $l4 = $r5[i];
        $d1 = (double) $l4;
        $d0 = $d0 * $d1;
        $r5 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r5, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 272, i, $l4);
        $l4 = $r5[i];
        $d1 = (double) $l4;
        $r6 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r6, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 273, i, $l5);
        $l5 = $r6[i];
        $d2 = (double) $l5;
        $d1 = $d1 * $d2;
        $d0 = $d0 - $d1;
        $r5 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r5, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 274, i, $l4);
        $l4 = $r5[i];
        $d1 = (double) $l4;
        $r6 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r6, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 274, i, $l5);
        $l5 = $r6[i];
        $d2 = (double) $l5;
        $d2 = $d2 - 1.0;
        $d1 = $d1 * $d2;
        $d0 = $d0 / $d1;
        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r4, 71, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 270, i, $d0);
        $r4[i] = $d0;
        $r4 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        $r7 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r7, 71, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 276, i, $d1);
        $d1 = $r7[i];
        $d0 = 100.0 * $d1;
        $r5 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r5, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 277, i, $l4);
        $l4 = $r5[i];
        $d1 = (double) $l4;
        $r6 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r6, 69, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 277, i, $l5);
        $l5 = $r6[i];
        $d2 = (double) $l5;
        $d1 = $d1 / $d2;
        $d0 = $d0 / $d1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r4, 71, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 275, i, $d0);
        $r4[i] = $d0;
        goto label2;

     label1:
        $r1 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r1, 70, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 280, i, 0.0F);
        $r1[i] = 0.0F;
        $r4 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r4, 71, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 281, i, 0.0);
        $r4[i] = 0.0;
        $r4 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r4, 71, tid_calculateResponseTimeStats, "spec.jbb.TimerData", 282, i, 0.0);
        $r4[i] = 0.0;

     label2:
        i = i + 1;

     label3:
        $b6 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b6 goto label0;

        return;
    }

    public long getTransactionCount(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getTransactionCount;
        long[] $r0;
        java.lang.Thread thread_getTransactionCount;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getTransactionCount = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTransactionCount = virtualinvoke thread_getTransactionCount.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getTransactionCount, "spec.jbb.TimerData", 288, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getTotalTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getTotalTime;
        long[] $r0;
        java.lang.Thread thread_getTotalTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getTotalTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTotalTime = virtualinvoke thread_getTotalTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getTotalTime, "spec.jbb.TimerData", 293, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getTotalTimeSquare(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getTotalTimeSquare;
        long[] $r0;
        java.lang.Thread thread_getTotalTimeSquare;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getTotalTimeSquare = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTotalTimeSquare = virtualinvoke thread_getTotalTimeSquare.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getTotalTimeSquare, "spec.jbb.TimerData", 298, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getMinimumTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getMinimumTime;
        long[] $r0;
        java.lang.Thread thread_getMinimumTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getMinimumTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMinimumTime = virtualinvoke thread_getMinimumTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getMinimumTime, "spec.jbb.TimerData", 303, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public long getMaximumTime(int)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long temp, tid_getMaximumTime;
        long[] $r0;
        java.lang.Thread thread_getMaximumTime;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        thread_getMaximumTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMaximumTime = virtualinvoke thread_getMaximumTime.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_getMaximumTime, "spec.jbb.TimerData", 308, transaction_type, temp);
        temp = $r0[transaction_type];
        return temp;
    }

    public void rollupTimerData(int, long, long, long, long, long)
    {
        spec.jbb.TimerData this;
        int transaction_type;
        long transaction_count, transaction_time, transaction_time_square, minimum_transaction_time, maximum_transaction_time, $l1, $l3, tid_rollupTimerData;
        long[] $r0, $r1;
        byte $b2;
        java.lang.Thread thread_rollupTimerData;

        this := @this: spec.jbb.TimerData;
        transaction_type := @parameter0: int;
        transaction_count := @parameter1: long;
        transaction_time := @parameter2: long;
        transaction_time_square := @parameter3: long;
        minimum_transaction_time := @parameter4: long;
        maximum_transaction_time := @parameter5: long;
        thread_rollupTimerData = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_rollupTimerData = virtualinvoke thread_rollupTimerData.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 316, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l1 = $l1 + transaction_count;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 316, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 317, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l1 = $l1 + transaction_time;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 317, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r0 = this.<spec.jbb.TimerData: long[] totalTimeSquare>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 318, transaction_type, $l1);
        $l1 = $r0[transaction_type];
        $l1 = $l1 + transaction_time_square;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 318, transaction_type, $l1);
        $r0[transaction_type] = $l1;
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_rollupTimerData, "spec.jbb.TimerData", 319, transaction_type, $l1);
        $l1 = $r1[transaction_type];
        $b2 = minimum_transaction_time cmp $l1;
        if $b2 < 0 goto label0;

        $r0 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 320, transaction_type, $l3);
        $l3 = $r0[transaction_type];
        $b2 = $l3 cmp 0L;
        if $b2 != 0 goto label1;

     label0:
        $r0 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 321, transaction_type, minimum_transaction_time);
        $r0[transaction_type] = minimum_transaction_time;

     label1:
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_rollupTimerData, "spec.jbb.TimerData", 323, transaction_type, $l1);
        $l1 = $r1[transaction_type];
        $b2 = maximum_transaction_time cmp $l1;
        if $b2 <= 0 goto label2;

        $r0 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_rollupTimerData, "spec.jbb.TimerData", 324, transaction_type, maximum_transaction_time);
        $r0[transaction_type] = maximum_transaction_time;

     label2:
        return;
    }

    public void accumulateTransactionStats(long)
    {
        spec.jbb.TimerData this;
        long transaction_count, $l0, tid_accumulateTransactionStats;
        byte $b1;
        java.lang.Thread thread_accumulateTransactionStats;

        this := @this: spec.jbb.TimerData;
        transaction_count := @parameter0: long;
        thread_accumulateTransactionStats = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_accumulateTransactionStats = virtualinvoke thread_accumulateTransactionStats.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_accumulateTransactionStats, "spec.jbb.TimerData", 330, $l0);
        $l0 = this.<spec.jbb.TimerData: long min_transaction_count>;
        $b1 = transaction_count cmp $l0;
        if $b1 >= 0 goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_accumulateTransactionStats, "spec.jbb.TimerData", 331, transaction_count);
        this.<spec.jbb.TimerData: long min_transaction_count> = transaction_count;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_accumulateTransactionStats, "spec.jbb.TimerData", 333, $l0);
        $l0 = this.<spec.jbb.TimerData: long max_transaction_count>;
        $b1 = transaction_count cmp $l0;
        if $b1 <= 0 goto label1;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_accumulateTransactionStats, "spec.jbb.TimerData", 334, transaction_count);
        this.<spec.jbb.TimerData: long max_transaction_count> = transaction_count;

     label1:
        return;
    }

    public double getTPMC()
    {
        spec.jbb.TimerData this;
        double temp;
        long tid_getTPMC;
        java.lang.Thread thread_getTPMC;

        this := @this: spec.jbb.TimerData;
        thread_getTPMC = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTPMC = virtualinvoke thread_getTPMC.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_getTPMC, "spec.jbb.TimerData", 339, temp);
        temp = this.<spec.jbb.TimerData: double tpmc>;
        return temp;
    }

    public double updateTPMC(double)
    {
        spec.jbb.TimerData this;
        double in_tpmc, $d0, $d1;
        long tid_updateTPMC;
        java.lang.Thread thread_updateTPMC;

        this := @this: spec.jbb.TimerData;
        in_tpmc := @parameter0: double;
        thread_updateTPMC = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_updateTPMC = virtualinvoke thread_updateTPMC.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 344, $d0);
        $d0 = this.<spec.jbb.TimerData: double tpmc>;
        $d0 = $d0 + in_tpmc;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 344, $d0);
        this.<spec.jbb.TimerData: double tpmc> = $d0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 345, $d1);
        $d1 = this.<spec.jbb.TimerData: double tpmc>;
        return $d1;
    }

    public double updateTPMC(long)
    {
        spec.jbb.TimerData this;
        long elapsed_time, $l0, tid_updateTPMC;
        double temp, $d0, $d1, $d2;
        java.lang.Thread thread_updateTPMC;

        this := @this: spec.jbb.TimerData;
        elapsed_time := @parameter0: long;
        thread_updateTPMC = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_updateTPMC = virtualinvoke thread_updateTPMC.<java.lang.Thread: long getId()>();
        $l0 = virtualinvoke this.<spec.jbb.TimerData: long getTransactionCount(int)>(0);
        $d0 = (double) $l0;
        $d1 = (double) elapsed_time;
        $d1 = $d1 / 1000.0;
        $d0 = $d0 / $d1;
        temp = $d0 * 60.0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 352, $d2);
        $d2 = this.<spec.jbb.TimerData: double tpmc>;
        $d2 = $d2 + temp;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 352, $d2);
        this.<spec.jbb.TimerData: double tpmc> = $d2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 67, tid_updateTPMC, "spec.jbb.TimerData", 353, $d0);
        $d0 = this.<spec.jbb.TimerData: double tpmc>;
        return $d0;
    }

    public double getBTPS()
    {
        spec.jbb.TimerData this;
        double temp;
        long tid_getBTPS;
        java.lang.Thread thread_getBTPS;

        this := @this: spec.jbb.TimerData;
        thread_getBTPS = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getBTPS = virtualinvoke thread_getBTPS.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_getBTPS, "spec.jbb.TimerData", 357, temp);
        temp = this.<spec.jbb.TimerData: double btps>;
        return temp;
    }

    public double updateBTPS(double)
    {
        spec.jbb.TimerData this;
        double in_btps, $d0, $d1;
        long tid_updateBTPS;
        java.lang.Thread thread_updateBTPS;

        this := @this: spec.jbb.TimerData;
        in_btps := @parameter0: double;
        thread_updateBTPS = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_updateBTPS = virtualinvoke thread_updateBTPS.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 362, $d0);
        $d0 = this.<spec.jbb.TimerData: double btps>;
        $d0 = $d0 + in_btps;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 362, $d0);
        this.<spec.jbb.TimerData: double btps> = $d0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 363, $d1);
        $d1 = this.<spec.jbb.TimerData: double btps>;
        return $d1;
    }

    public double updateBTPS(long)
    {
        spec.jbb.TimerData this;
        long elapsed_time, $l1, $l2, tid_updateBTPS;
        int transCount, i;
        byte $b0;
        double temp, $d0, $d1, $d2;
        long[] $r0;
        java.lang.Thread thread_updateBTPS;

        this := @this: spec.jbb.TimerData;
        elapsed_time := @parameter0: long;
        thread_updateBTPS = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_updateBTPS = virtualinvoke thread_updateBTPS.<java.lang.Thread: long getId()>();
        transCount = 0;
        i = 0;
        goto label1;

     label0:
        $l1 = (long) transCount;
        $r0 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r0, 69, tid_updateBTPS, "spec.jbb.TimerData", 370, i, $l2);
        $l2 = $r0[i];
        $l1 = $l1 + $l2;
        transCount = (int) $l1;
        i = i + 1;

     label1:
        $b0 = <spec.jbb.Transaction: byte maxTxnTypes>;
        if i < $b0 goto label0;

        $d0 = (double) transCount;
        $d1 = (double) elapsed_time;
        $d1 = $d1 / 1000.0;
        temp = $d0 / $d1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 373, $d2);
        $d2 = this.<spec.jbb.TimerData: double btps>;
        $d2 = $d2 + temp;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 373, $d2);
        this.<spec.jbb.TimerData: double btps> = $d2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_updateBTPS, "spec.jbb.TimerData", 374, $d0);
        $d0 = this.<spec.jbb.TimerData: double btps>;
        return $d0;
    }

    private void buildDisplay()
    {
        spec.jbb.TimerData this;
        spec.jbb.infra.Util.TransactionLogBuffer $r0, $r1;
        int version_length, text_length, fill_length, $i0, $i1;
        java.lang.String $r2;
        long tid_buildDisplay;
        java.lang.Thread thread_buildDisplay;

        this := @this: spec.jbb.TimerData;
        thread_buildDisplay = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_buildDisplay = virtualinvoke thread_buildDisplay.<java.lang.Thread: long getId()>();
        $r0 = new spec.jbb.infra.Util.TransactionLogBuffer;
        specialinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void <init>(int,int)>(12, 80);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 399, $r0);
        this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 400, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putCharFill(char,int,int,int)>(61, 0, 0, 79);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 401, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("TOTALS FOR:", 0, 1, 12);
        $r2 = "SPECjbb2005 1.07";
        version_length = virtualinvoke $r2.<java.lang.String: int length()>();
        $i0 = 1 + version_length;
        $i0 = $i0 + 1;
        $i0 = $i0 + 25;
        text_length = $i0 + 1;
        $i0 = 79 - text_length;
        fill_length = $i0 / 2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 405, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putCharFill(char,int,int,int)>(46, 0, 2, fill_length);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 406, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        $i1 = fill_length + 1;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("SPECjbb2005 1.07", $i1, 2, version_length);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 407, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        $i1 = fill_length + 1;
        $i1 = $i1 + version_length;
        $i1 = $i1 + 1;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Results (time in seconds)", $i1, 2, 25);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 409, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        $i1 = fill_length + 1;
        $i1 = $i1 + version_length;
        $i1 = $i1 + 1;
        $i1 = $i1 + 25;
        $i1 = $i1 + 1;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putCharFill(char,int,int,int)>(46, $i1, 2, fill_length);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 411, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Count", 19, 3, 5);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 412, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Total", 29, 3, 5);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 413, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Min", 38, 3, 3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 414, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Max", 46, 3, 3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 415, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Avg", 54, 3, 3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 416, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("New Order:", 0, 4, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 418, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("Payment:", 0, 5, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 419, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("OrderStatus:", 0, 6, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 421, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("Delivery:", 0, 7, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 423, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("Stock Level:", 0, 8, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 425, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int,short)>("Cust Report:", 0, 9, 14, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 427, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("throughput =", 11, 11, 12);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_buildDisplay, "spec.jbb.TimerData", 428, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r1.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("SPECjbb2005 bops", 38, 11, 17);
        return;
    }

    public void formatResults(spec.jbb.infra.Util.TransactionLogBuffer)
    {
        spec.jbb.TimerData this;
        spec.jbb.infra.Util.TransactionLogBuffer timerLog;
        java.lang.Object $r0, tmpObject, l3;
        long[] $r1;
        long $l0, tid_formatResults;
        double $d0;
        float[] $r2;
        float $f0;
        java.lang.Throwable $r3;
        java.lang.Thread thread_formatResults;

        this := @this: spec.jbb.TimerData;
        timerLog := @parameter0: spec.jbb.infra.Util.TransactionLogBuffer;
        thread_formatResults = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_formatResults = virtualinvoke thread_formatResults.<java.lang.Thread: long getId()>();
        $r0 = new java.lang.Object;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        tmpObject = $r0;
        l3 = tmpObject;
        entermonitor tmpObject;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>(tmpObject, 0, tid_formatResults);

     label0:
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 455, 0, $l0);
        $l0 = $r1[0];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 4, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 456, 0, $l0);
        $l0 = $r1[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 4, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 458, 0, $l0);
        $l0 = $r1[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 4, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 460, 0, $l0);
        $l0 = $r1[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 4, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 462, 0, $f0);
        $f0 = $r2[0];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 4, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 463, 1, $l0);
        $l0 = $r1[1];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 5, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 464, 1, $l0);
        $l0 = $r1[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 5, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 466, 1, $l0);
        $l0 = $r1[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 5, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 468, 1, $l0);
        $l0 = $r1[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 5, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 470, 1, $f0);
        $f0 = $r2[1];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 5, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 471, 2, $l0);
        $l0 = $r1[2];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 6, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 472, 2, $l0);
        $l0 = $r1[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 6, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 474, 2, $l0);
        $l0 = $r1[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 6, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 476, 2, $l0);
        $l0 = $r1[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 6, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 478, 2, $f0);
        $f0 = $r2[2];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 6, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 479, 3, $l0);
        $l0 = $r1[3];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 7, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 480, 3, $l0);
        $l0 = $r1[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 7, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 482, 3, $l0);
        $l0 = $r1[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 7, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 484, 3, $l0);
        $l0 = $r1[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 7, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 486, 3, $f0);
        $f0 = $r2[3];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 7, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 487, 4, $l0);
        $l0 = $r1[4];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 8, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 488, 4, $l0);
        $l0 = $r1[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 8, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 490, 4, $l0);
        $l0 = $r1[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 8, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 492, 4, $l0);
        $l0 = $r1[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 8, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 494, 4, $f0);
        $f0 = $r2[4];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 8, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 495, 5, $l0);
        $l0 = $r1[5];
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putLong(long,int,int,int)>($l0, 16, 9, 8);
        $r1 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 496, 5, $l0);
        $l0 = $r1[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 26, 9, 8, 2);
        $r1 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 498, 5, $l0);
        $l0 = $r1[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 36, 9, 6, 3);
        $r1 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r1, 69, tid_formatResults, "spec.jbb.TimerData", 500, 5, $l0);
        $l0 = $r1[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 44, 9, 6, 3);
        $r2 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r2, 70, tid_formatResults, "spec.jbb.TimerData", 502, 5, $f0);
        $f0 = $r2[5];
        $d0 = (double) $f0;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 52, 9, 6, 3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_formatResults, "spec.jbb.TimerData", 506, $d0);
        $d0 = this.<spec.jbb.TimerData: double btps>;
        virtualinvoke timerLog.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>($d0, 25, 11, 12, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l3, 0, tid_formatResults);
        exitmonitor l3;

     label1:
        goto label5;

     label2:
        $r3 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l3, 0, tid_formatResults);
        exitmonitor l3;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void displayResults(java.lang.String, long, long)
    {
        spec.jbb.TimerData this;
        java.lang.String title;
        long totalMem, freeMem, usedMem, tid_displayResults;
        double totalMB, usedMB, $d0;
        spec.jbb.infra.Util.TransactionLogBuffer $r0, $r1;
        java.io.PrintStream $r2;
        java.lang.Object localthislockdisplayResults;
        java.lang.Throwable throwableLocal4;
        java.lang.Thread thread_displayResults;

        this := @this: spec.jbb.TimerData;
        title := @parameter0: java.lang.String;
        totalMem := @parameter1: long;
        freeMem := @parameter2: long;
        thread_displayResults = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_displayResults = virtualinvoke thread_displayResults.<java.lang.Thread: long getId()>();
        localthislockdisplayResults = this;

     label0:
        entermonitor localthislockdisplayResults;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>(localthislockdisplayResults, 0, tid_displayResults);
        usedMem = totalMem - freeMem;
        $d0 = (double) totalMem;
        totalMB = $d0 / 1048576.0;
        $d0 = (double) usedMem;
        usedMB = $d0 / 1048576.0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 534, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>(title, 12, 1, 60);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 535, $r1);
        $r1 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke this.<spec.jbb.TimerData: void formatResults(spec.jbb.infra.Util.TransactionLogBuffer)>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 536, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("Heap Space", 61, 3, 10);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 537, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>(totalMB, 66, 4, 11, 1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 538, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("total", 61, 4, 5);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 539, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("MB", 77, 4, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 540, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putDouble(double,int,int,int,int)>(usedMB, 66, 5, 11, 1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 541, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>(" used", 61, 5, 5);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 542, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void putText(java.lang.String,int,int,int)>("MB", 77, 5, 2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 74, tid_displayResults, "spec.jbb.TimerData", 544, $r0);
        $r0 = this.<spec.jbb.TimerData: spec.jbb.infra.Util.TransactionLogBuffer timerLog>;
        $r2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<spec.jbb.infra.Util.TransactionLogBuffer: void display(java.io.PrintStream)>($r2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(localthislockdisplayResults, 0, tid_displayResults);
        exitmonitor localthislockdisplayResults;
        goto label1;

     label1:
        return;

     label2:
        throwableLocal4 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(localthislockdisplayResults, 0, tid_displayResults);
        exitmonitor localthislockdisplayResults;

     label4:
        throw throwableLocal4;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void propResults(java.lang.String, java.io.PrintStream)
    {
        spec.jbb.TimerData this;
        java.lang.String prefix, $r1, $r3;
        java.io.PrintStream out;
        java.lang.StringBuilder $r0;
        long[] $r2;
        long $l0, tid_propResults;
        double $d0;
        float[] $r4;
        float $f0;
        double[] $r5;
        java.lang.Thread thread_propResults;

        this := @this: spec.jbb.TimerData;
        prefix := @parameter0: java.lang.String;
        out := @parameter1: java.io.PrintStream;
        thread_propResults = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_propResults = virtualinvoke thread_propResults.<java.lang.Thread: long getId()>();
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 553, 0, $l0);
        $l0 = $r2[0];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 555, 0, $l0);
        $l0 = $r2[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 557, 0, $l0);
        $l0 = $r2[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 559, 0, $l0);
        $l0 = $r2[0];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 561, 0, $f0);
        $f0 = $r4[0];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 563, 0, $d0);
        $d0 = $r5[0];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new_order.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 565, 0, $d0);
        $d0 = $r5[0];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 567, 1, $l0);
        $l0 = $r2[1];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 569, 1, $l0);
        $l0 = $r2[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 571, 1, $l0);
        $l0 = $r2[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 573, 1, $l0);
        $l0 = $r2[1];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 575, 1, $f0);
        $f0 = $r4[1];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 577, 1, $d0);
        $d0 = $r5[1];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payment.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 579, 1, $d0);
        $d0 = $r5[1];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 581, 2, $l0);
        $l0 = $r2[2];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 583, 2, $l0);
        $l0 = $r2[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 585, 2, $l0);
        $l0 = $r2[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 587, 2, $l0);
        $l0 = $r2[2];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 589, 2, $f0);
        $f0 = $r4[2];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 591, 2, $d0);
        $d0 = $r5[2];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("order_status.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 593, 2, $d0);
        $d0 = $r5[2];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 595, 3, $l0);
        $l0 = $r2[3];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 597, 3, $l0);
        $l0 = $r2[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 599, 3, $l0);
        $l0 = $r2[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 601, 3, $l0);
        $l0 = $r2[3];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 603, 3, $f0);
        $f0 = $r4[3];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 605, 3, $d0);
        $d0 = $r5[3];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delivery.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 607, 3, $d0);
        $d0 = $r5[3];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 609, 4, $l0);
        $l0 = $r2[4];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 611, 4, $l0);
        $l0 = $r2[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 613, 4, $l0);
        $l0 = $r2[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 615, 4, $l0);
        $l0 = $r2[4];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 617, 4, $f0);
        $f0 = $r4[4];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 619, 4, $d0);
        $d0 = $r5[4];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stock_level.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 621, 4, $d0);
        $d0 = $r5[4];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.count=");
        $r2 = this.<spec.jbb.TimerData: long[] transactionCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 623, 5, $l0);
        $l0 = $r2[5];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.totaltime=");
        $r2 = this.<spec.jbb.TimerData: long[] totalTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 625, 5, $l0);
        $l0 = $r2[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.minimumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] minimumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 627, 5, $l0);
        $l0 = $r2[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.maximumtime=");
        $r2 = this.<spec.jbb.TimerData: long[] maximumTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,long)>($r2, 69, tid_propResults, "spec.jbb.TimerData", 629, 5, $l0);
        $l0 = $r2[5];
        $d0 = (double) $l0;
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.averagetime=");
        $r4 = this.<spec.jbb.TimerData: float[] averageTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,float)>($r4, 70, tid_propResults, "spec.jbb.TimerData", 631, 5, $f0);
        $f0 = $r4[5];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.stddevtime=");
        $r5 = this.<spec.jbb.TimerData: double[] standardDeviationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 633, 5, $d0);
        $d0 = $r5[5];
        $d0 = $d0 / 1000.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cust_report.coeffvartime=");
        $r5 = this.<spec.jbb.TimerData: double[] coefficientOfVariationTime>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,double)>($r5, 71, tid_propResults, "spec.jbb.TimerData", 635, 5, $d0);
        $d0 = $r5[5];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("score=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,double)>(this, 68, tid_propResults, "spec.jbb.TimerData", 636, $d0);
        $d0 = this.<spec.jbb.TimerData: double btps>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        return;
    }

    public void propResults(java.lang.String, java.io.PrintStream, long, long)
    {
        spec.jbb.TimerData this;
        java.lang.String prefix, $r1, $r2;
        java.io.PrintStream out;
        long totalMem, freeMem, usedMem;
        double totalMB, usedMB, $d0;
        java.lang.StringBuilder $r0;

        this := @this: spec.jbb.TimerData;
        prefix := @parameter0: java.lang.String;
        out := @parameter1: java.io.PrintStream;
        totalMem := @parameter2: long;
        freeMem := @parameter3: long;
        virtualinvoke this.<spec.jbb.TimerData: void propResults(java.lang.String,java.io.PrintStream)>(prefix, out);
        usedMem = totalMem - freeMem;
        $d0 = (double) totalMem;
        totalMB = $d0 / 1048576.0;
        $d0 = (double) usedMem;
        usedMB = $d0 / 1048576.0;
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heapsize=");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(totalMB);
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r2);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heapused=");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(usedMB);
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r2);
        return;
    }

    public void displayThreadResults()
    {
        spec.jbb.TimerData this;
        long diff, $l0, $l1, $l2, tid_displayThreadResults;
        float diff_pct, $f0, $f1;
        java.lang.Thread thread_displayThreadResults;

        this := @this: spec.jbb.TimerData;
        thread_displayThreadResults = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_displayThreadResults = virtualinvoke thread_displayThreadResults.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_displayThreadResults, "spec.jbb.TimerData", 650, $l0);
        $l0 = this.<spec.jbb.TimerData: long max_transaction_count>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_displayThreadResults, "spec.jbb.TimerData", 650, $l1);
        $l1 = this.<spec.jbb.TimerData: long min_transaction_count>;
        diff = $l0 - $l1;
        $f0 = (float) diff;
        $f1 = 100.0F * $f0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_displayThreadResults, "spec.jbb.TimerData", 651, $l2);
        $l2 = this.<spec.jbb.TimerData: long min_transaction_count>;
        $f0 = (float) $l2;
        diff_pct = $f1 / $f0;
        return;
    }

    public void propThreadResults(java.lang.String, java.io.PrintStream)
    {
        spec.jbb.TimerData this;
        java.lang.String prefix, $r1, $r2;
        java.io.PrintStream out;
        java.lang.StringBuilder $r0;
        long $l0, tid_propThreadResults;
        java.lang.Thread thread_propThreadResults;

        this := @this: spec.jbb.TimerData;
        prefix := @parameter0: java.lang.String;
        out := @parameter1: java.io.PrintStream;
        thread_propThreadResults = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_propThreadResults = virtualinvoke thread_propThreadResults.<java.lang.Thread: long getId()>();
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("min_thread_transactions=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 72, tid_propThreadResults, "spec.jbb.TimerData", 664, $l0);
        $l0 = this.<spec.jbb.TimerData: long min_transaction_count>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r2);
        $r0 = new java.lang.StringBuilder;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(prefix);
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max_thread_transactions=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,long)>(this, 73, tid_propThreadResults, "spec.jbb.TimerData", 667, $l0);
        $l0 = this.<spec.jbb.TimerData: long max_transaction_count>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r2);
        return;
    }
}
