public class avrora.sim.radio.noise extends java.lang.Object
{
    private static java.util.List noise;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        avrora.sim.radio.noise this;
        java.lang.String fileName;
        java.io.BufferedReader $r0;
        java.io.FileReader $r1;

        this := @this: avrora.sim.radio.noise;
        fileName := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.io.BufferedReader;
        $r1 = new java.io.FileReader;
        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>(fileName);
        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);
        specialinvoke this.<avrora.sim.radio.noise: void parse(java.io.BufferedReader)>($r0);
        return;
    }

    public void <init>()
    {
        avrora.sim.radio.noise this;
        java.lang.Integer $r0;
        java.util.List $r1;

        this := @this: avrora.sim.radio.noise;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r1 = <avrora.sim.radio.noise: java.util.List noise>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(-95);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);
        return;
    }

    private void parse(java.io.BufferedReader) throws java.io.IOException
    {
        avrora.sim.radio.noise this;
        java.io.BufferedReader f;
        java.lang.String line, $r0;

        this := @this: avrora.sim.radio.noise;
        f := @parameter0: java.io.BufferedReader;

     label0:
        $r0 = virtualinvoke f.<java.io.BufferedReader: java.lang.String readLine()>();
        line = $r0;
        if $r0 == null goto label1;

        specialinvoke this.<avrora.sim.radio.noise: void parseLine(java.lang.String)>(line);
        goto label0;

     label1:
        virtualinvoke f.<java.io.BufferedReader: void close()>();
        return;
    }

    private void parseLine(java.lang.String)
    {
        avrora.sim.radio.noise this;
        java.lang.String line, $r1;
        int noise_value, count;
        java.util.StringTokenizer tokenizer, $r0;
        java.util.NoSuchElementException e, $r2;
        boolean $z0;
        cck.util.Util$InternalError $r3;
        java.util.List $r4;
        java.lang.Integer $r5;

        this := @this: avrora.sim.radio.noise;
        line := @parameter0: java.lang.String;
        noise_value = 0;
        $z0 = virtualinvoke line.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 != 0 goto label6;

        $r0 = new java.util.StringTokenizer;
        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(line, " ");
        tokenizer = $r0;
        count = 0;

     label0:
        $z0 = virtualinvoke tokenizer.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label5;

     label1:
        if count != 0 goto label2;

        $r1 = virtualinvoke tokenizer.<java.util.StringTokenizer: java.lang.String nextToken()>();
        noise_value = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        count = count + 1;

     label3:
        goto label0;

     label4:
        $r2 := @caughtexception;
        e = $r2;
        $r3 = staticinvoke <cck.util.Util: cck.util.Util$InternalError failure(java.lang.String)>("Error reading Noise file");
        throw $r3;

     label5:
        if count != 1 goto label6;

        $r4 = <avrora.sim.radio.noise: java.util.List noise>;
        $r5 = new java.lang.Integer;
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(noise_value);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label6:
        return;

        catch java.util.NoSuchElementException from label1 to label3 with label4;
    }

    public static int getNoise(int)
    {
        int index, $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;

        index := @parameter0: int;
        $r0 = <avrora.sim.radio.noise: java.util.List noise>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(index);
        $r2 = (java.lang.Integer) $r1;
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();
        return $i0;
    }

    public static int sizeNoise()
    {
        java.util.List $r0;
        int $i0;

        nop;
        $r0 = <avrora.sim.radio.noise: java.util.List noise>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        return $i0;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        <avrora.sim.radio.noise: java.util.List noise> = $r0;
        return;
    }
}
