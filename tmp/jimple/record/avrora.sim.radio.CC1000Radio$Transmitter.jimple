class avrora.sim.radio.CC1000Radio$Transmitter extends avrora.sim.radio.Medium$Transmitter
{
    final avrora.sim.radio.CC1000Radio this$0;

    void <init>(avrora.sim.radio.CC1000Radio, avrora.sim.radio.Medium)
    {
        avrora.sim.radio.CC1000Radio$Transmitter this;
        avrora.sim.radio.CC1000Radio l1;
        avrora.sim.radio.Medium m;
        avrora.sim.Simulator $r0;
        avrora.sim.clock.MainClock $r1;

        this := @this: avrora.sim.radio.CC1000Radio$Transmitter;
        l1 := @parameter0: avrora.sim.radio.CC1000Radio;
        m := @parameter1: avrora.sim.radio.Medium;
        this.<avrora.sim.radio.CC1000Radio$Transmitter: avrora.sim.radio.CC1000Radio this$0> = l1;
        $r0 = l1.<avrora.sim.radio.CC1000Radio: avrora.sim.Simulator sim>;
        $r1 = virtualinvoke $r0.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();
        specialinvoke this.<avrora.sim.radio.Medium$Transmitter: void <init>(avrora.sim.radio.Medium,avrora.sim.clock.Clock)>(m, $r1);
        return;
    }

    public byte nextByte()
    {
        avrora.sim.radio.CC1000Radio$Transmitter this;
        java.lang.StringBuilder $r0;
        avrora.sim.radio.CC1000Radio $r1, $r3;
        avrora.sim.output.SimPrinter $r2;
        byte $b0, $b2;
        long $l1, tid_nextByte;
        java.lang.String $r4, $r5;
        java.lang.Thread thread_nextByte;

        this := @this: avrora.sim.radio.CC1000Radio$Transmitter;
        thread_nextByte = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_nextByte = virtualinvoke thread_nextByte.<java.lang.Thread: long getId()>();
        $r1 = this.<avrora.sim.radio.CC1000Radio$Transmitter: avrora.sim.radio.CC1000Radio this$0>;
        $r2 = $r1.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;
        if $r2 == null goto label0;

        $r1 = this.<avrora.sim.radio.CC1000Radio$Transmitter: avrora.sim.radio.CC1000Radio this$0>;
        $r2 = $r1.<avrora.sim.radio.CC1000Radio: avrora.sim.output.SimPrinter radioPrinter>;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CC1000 ");
        $r3 = this.<avrora.sim.radio.CC1000Radio$Transmitter: avrora.sim.radio.CC1000Radio this$0>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>($r3, 170, tid_nextByte, "avrora.sim.radio.CC1000Radio$Transmitter", 1055, $b0);
        $b0 = $r3.<avrora.sim.radio.CC1000Radio: byte txBuffer>;
        $l1 = (long) $b0;
        $r4 = staticinvoke <cck.text.StringUtil: java.lang.String to0xHex(long,int)>($l1, 2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --------> ");
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<avrora.sim.output.SimPrinter: void println(java.lang.String)>($r5);

     label0:
        $r1 = this.<avrora.sim.radio.CC1000Radio$Transmitter: avrora.sim.radio.CC1000Radio this$0>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>($r1, 170, tid_nextByte, "avrora.sim.radio.CC1000Radio$Transmitter", 1057, $b2);
        $b2 = $r1.<avrora.sim.radio.CC1000Radio: byte txBuffer>;
        return $b2;
    }
}
