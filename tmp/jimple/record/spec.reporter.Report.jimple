public class spec.reporter.Report extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    private static java.lang.String logo;
    private static final java.lang.String version;
    public java.lang.String graphTable;
    public java.lang.String hardware;
    public java.lang.String metric;
    public java.lang.String name;
    public java.lang.String software;
    public java.lang.String base;
    private java.lang.String category;
    public boolean SPECInternalUse;
    public boolean echoRaw;
    public java.lang.String issue;
    private java.lang.String memory;
    private java.lang.String memoryDescription;
    public spec.reporter.Metrics metrics;
    public spec.reporter.Metrics metrics_2;
    public spec.reporter.ReportProps results;
    public spec.reporter.ReportProps results_2;
    public spec.reporter.Template template;
    public spec.reporter.ReportProps titles;
    public boolean useJavaGraph;
    public boolean useHtml;
    public boolean verbose;
    public java.lang.String label;
    public java.lang.String output_directory;

    static void <clinit>()
    {
        <spec.reporter.Report: java.lang.String logo> = "<IMG SRC=\"spec-sm.gif\" WIDTH=\"57\" HEIGHT=\"72\"\nALT=\"[SPEC logo]\" ALIGN=MIDDLE>";
        return;
    }

    public void <init>(boolean, boolean, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        spec.reporter.Report this;
        boolean echoRaw, SPECInternalUse, verbose, useHtml, $z0;
        java.lang.String newsletter, resultFile, resultFile_2, label, output_directory, $r3, $r16, $r19, $r21;
        spec.reporter.ReportProps $r0, $r4, $r13, $r20;
        java.io.StringReader tis, $r1;
        java.io.IOException e, $r5, $r10, $r14;
        spec.reporter.Title $r2;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        java.io.InputStreamReader $r8;
        java.io.InputStream $r9;
        java.lang.StringBuilder $r11, $r18;
        spec.reporter.Metrics $r12, $r15, $r17;
        java.lang.StringBuffer $r22;

        this := @this: spec.reporter.Report;
        echoRaw := @parameter0: boolean;
        SPECInternalUse := @parameter1: boolean;
        newsletter := @parameter2: java.lang.String;
        resultFile := @parameter3: java.lang.String;
        verbose := @parameter4: boolean;
        resultFile_2 := @parameter5: java.lang.String;
        label := @parameter6: java.lang.String;
        useHtml := @parameter7: boolean;
        output_directory := @parameter8: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new spec.reporter.ReportProps;
        specialinvoke $r0.<spec.reporter.ReportProps: void <init>()>();
        this.<spec.reporter.Report: spec.reporter.ReportProps results> = $r0;
        $r0 = new spec.reporter.ReportProps;
        specialinvoke $r0.<spec.reporter.ReportProps: void <init>()>();
        this.<spec.reporter.Report: spec.reporter.ReportProps results_2> = $r0;
        $r0 = new spec.reporter.ReportProps;
        specialinvoke $r0.<spec.reporter.ReportProps: void <init>()>();
        this.<spec.reporter.Report: spec.reporter.ReportProps titles> = $r0;
        this.<spec.reporter.Report: boolean echoRaw> = echoRaw;
        this.<spec.reporter.Report: boolean SPECInternalUse> = SPECInternalUse;
        this.<spec.reporter.Report: java.lang.String issue> = newsletter;
        this.<spec.reporter.Report: boolean verbose> = verbose;
        this.<spec.reporter.Report: java.lang.String label> = label;
        this.<spec.reporter.Report: java.lang.String output_directory> = output_directory;

     label0:
        $r1 = new java.io.StringReader;
        $r2 = new spec.reporter.Title;
        specialinvoke $r2.<spec.reporter.Title: void <init>()>();
        $r3 = virtualinvoke $r2.<spec.reporter.Title: java.lang.String getTitleString()>();
        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>($r3);
        tis = $r1;
        $r4 = this.<spec.reporter.Report: spec.reporter.ReportProps titles>;
        virtualinvoke $r4.<spec.reporter.ReportProps: void load(java.io.Reader)>(tis);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        e = $r5;
        $r6 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, "Error loading titles for report\n", e);
        staticinvoke <java.lang.System: void exit(int)>(1);

     label3:
        if resultFile != null goto label4;

        $r4 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r8 = new java.io.InputStreamReader;
        $r9 = <java.lang.System: java.io.InputStream in>;
        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);
        virtualinvoke $r4.<spec.reporter.ReportProps: void load(java.io.Reader)>($r8);
        goto label7;

     label4:
        $r4 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        virtualinvoke $r4.<spec.reporter.ReportProps: void load(java.lang.String)>(resultFile);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;
        e = $r10;
        $r6 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error reading results file ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resultFile);
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);
        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, $r3, e);
        staticinvoke <java.lang.System: void exit(int)>(1);

     label7:
        $r12 = new spec.reporter.Metrics;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        specialinvoke $r12.<spec.reporter.Metrics: void <init>(spec.reporter.ReportProps,boolean)>($r13, SPECInternalUse);
        this.<spec.reporter.Report: spec.reporter.Metrics metrics> = $r12;

     label8:
        if resultFile_2 == null goto label9;

        $r4 = this.<spec.reporter.Report: spec.reporter.ReportProps results_2>;
        virtualinvoke $r4.<spec.reporter.ReportProps: void load(java.lang.String)>(resultFile_2);
        $r12 = new spec.reporter.Metrics;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps results_2>;
        specialinvoke $r12.<spec.reporter.Metrics: void <init>(spec.reporter.ReportProps,boolean)>($r13, SPECInternalUse);
        this.<spec.reporter.Report: spec.reporter.Metrics metrics_2> = $r12;
        goto label12;

     label9:
        this.<spec.reporter.Report: spec.reporter.Metrics metrics_2> = null;

     label10:
        goto label12;

     label11:
        $r14 := @caughtexception;
        e = $r14;
        $r6 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error reading comparison results file ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resultFile_2);
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);
        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, $r3, e);
        staticinvoke <java.lang.System: void exit(int)>(1);

     label12:
        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics_2>;
        if $r15 != null goto label13;

        $r12 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r16 = virtualinvoke $r12.<spec.reporter.Metrics: java.lang.String tableAndGraph(java.lang.String,boolean,java.lang.String)>(label, useHtml, output_directory);
        this.<spec.reporter.Report: java.lang.String graphTable> = $r16;
        goto label14;

     label13:
        $r12 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r17 = this.<spec.reporter.Report: spec.reporter.Metrics metrics_2>;
        $r16 = virtualinvoke $r12.<spec.reporter.Metrics: java.lang.String compareTableAndGraph(spec.reporter.Metrics,java.lang.String,boolean,java.lang.String)>($r17, label, useHtml, output_directory);
        this.<spec.reporter.Report: java.lang.String graphTable> = $r16;

     label14:
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r16 = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("input.suite");
        this.<spec.reporter.Report: java.lang.String name> = $r16;
        $r18 = new java.lang.StringBuilder;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r19 = virtualinvoke $r13.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.hw.vendor");
        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19);
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r20 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r3 = virtualinvoke $r20.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.hw.model");
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        this.<spec.reporter.Report: java.lang.String hardware> = $r16;
        $r21 = this.<spec.reporter.Report: java.lang.String metric>;
        if $r21 != null goto label15;

        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");
        $r17 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r3 = virtualinvoke $r17.<spec.reporter.Metrics: java.lang.String metric()>();
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        this.<spec.reporter.Report: java.lang.String metric> = $r16;

     label15:
        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $z0 = $r15.<spec.reporter.Metrics: boolean valid>;
        if $z0 == 0 goto label16;

        if SPECInternalUse != 0 goto label18;

        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r22 = $r15.<spec.reporter.Metrics: java.lang.StringBuffer results_buf>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("\nValid run, Score is ");
        $r3 = this.<spec.reporter.Report: java.lang.String metric>;
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);
        goto label18;

     label16:
        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $z0 = $r15.<spec.reporter.Metrics: boolean print_score>;
        if $z0 == 0 goto label17;

        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r22 = $r15.<spec.reporter.Metrics: java.lang.StringBuffer results_buf>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("INVALID run; Score is ");
        $r3 = this.<spec.reporter.Report: java.lang.String metric>;
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);
        goto label18;

     label17:
        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r22 = $r15.<spec.reporter.Metrics: java.lang.StringBuffer results_buf>;
        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("INVALID run preventing score calculation.\n");

     label18:
        $r18 = new java.lang.StringBuilder;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r19 = virtualinvoke $r13.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.sw.vendor");
        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19);
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r20 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r3 = virtualinvoke $r20.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.sw.JVM");
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        this.<spec.reporter.Report: java.lang.String software> = $r16;
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r16 = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.hw.memory");
        this.<spec.reporter.Report: java.lang.String memory> = $r16;
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r16 = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>("config.hw.memory_description");
        this.<spec.reporter.Report: java.lang.String memoryDescription> = $r16;
        return;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.io.IOException from label3 to label5 with label6;
        catch java.io.IOException from label8 to label10 with label11;
    }

    public void print(java.lang.String)
    {
        spec.reporter.Report this;
        java.lang.String outFile, $r7;
        java.io.PrintStream $r0;
        java.io.BufferedOutputStream $r1;
        java.io.FileOutputStream $r2;
        java.io.IOException e, $r3;
        java.util.logging.Logger $r4;
        java.util.logging.Level $r5;
        java.lang.StringBuilder $r6;

        this := @this: spec.reporter.Report;
        outFile := @parameter0: java.lang.String;

     label0:
        $r0 = new java.io.PrintStream;
        $r1 = new java.io.BufferedOutputStream;
        $r2 = new java.io.FileOutputStream;
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>(outFile);
        specialinvoke $r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r2);
        specialinvoke $r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r1);
        virtualinvoke this.<spec.reporter.Report: void print(java.io.PrintStream)>($r0);

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        e = $r3;
        $r4 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r5 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error creating output: ");
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, $r7, e);

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void print(java.io.PrintStream)
    {
        spec.reporter.Report this;
        java.io.PrintStream out;
        java.lang.StringBuilder $r0, $r21;
        spec.reporter.TemplateCompare $r1;
        java.io.BufferedReader in, in_2, $r7;
        spec.reporter.TableGroupCompare m, $r10;
        java.lang.Exception e, $r18;
        java.lang.String $r2, $r3, $r6, $r9;
        spec.reporter.Metrics $r4, $r15;
        boolean $z0;
        spec.reporter.ReportProps $r5, $r11, $r12, $r13, $r16, $r17;
        java.io.StringReader $r8;
        spec.reporter.Template $r14;
        java.util.logging.Logger $r19;
        java.util.logging.Level $r20;

        this := @this: spec.reporter.Report;
        out := @parameter0: java.io.PrintStream;

     label0:
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("<HTML><HEAD>\n<META NAME=\"GENERATOR\" CONTENT=\"SPEC Java Reporter\">\n<TITLE> ");
        $r2 = this.<spec.reporter.Report: java.lang.String name>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</TITLE>\n");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</HEAD>");
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("<BODY ");
        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $z0 = $r4.<spec.reporter.Metrics: boolean valid>;
        if $z0 == 0 goto label1;

        $r5 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r3 = virtualinvoke $r5.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("spec.report.bodyAttributes", "");
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>($r3);
        goto label2;

     label1:
        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r2 = this.<spec.reporter.Report: java.lang.String output_directory>;
        virtualinvoke $r4.<spec.reporter.Metrics: void relocateImageResource(java.lang.String,java.lang.String)>("invalid.gif", $r2);
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("BACKGROUND=\"invalid.gif\"");

     label2:
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>(">\n");
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("<TABLE WIDTH=100%>\n<TR><TD COLSPAN=2>");
        $r6 = this.<spec.reporter.Report: java.lang.String issue>;
        if $r6 == null goto label3;

        $r6 = this.<spec.reporter.Report: java.lang.String issue>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label3;

        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r2 = this.<spec.reporter.Report: java.lang.String output_directory>;
        virtualinvoke $r4.<spec.reporter.Metrics: void relocateImageResource(java.lang.String,java.lang.String)>("spec-sm.gif", $r2);
        $r3 = <spec.reporter.Report: java.lang.String logo>;
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>($r3);
        goto label4;

     label3:
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("<FONT SIZE=+2></FONT>&nbsp;");

     label4:
        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $z0 = $r4.<spec.reporter.Metrics: boolean valid>;
        if $z0 != 0 goto label5;

        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("<FONT SIZE=+2> Invalid</FONT>");

     label5:
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("<FONT SIZE=+2>");
        $r2 = this.<spec.reporter.Report: java.lang.String name>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2005</FONT></TD>\n");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<TD COLSPAN=2 ALIGN=RIGHT bgcolor=FFFF00>");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <FONT SIZE=+2 COLOR=000000><B>SPECjbb2005 bops = ");
        $r2 = this.<spec.reporter.Report: java.lang.String metric>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", SPECjbb2005 bops/JVM = ");
        $r2 = this.<spec.reporter.Report: java.lang.String metric>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</B></FONT></TD></TR>\n");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<TR><TD COLSPAN=3><FONT SIZE=+1>");
        $r2 = this.<spec.reporter.Report: java.lang.String hardware>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</FONT></TD></TR>\n");
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>($r3);
        $r6 = this.<spec.reporter.Report: java.lang.String software>;
        if $r6 == null goto label6;

        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("<TR><TD COLSPAN=3><FONT SIZE=+1>");
        $r2 = this.<spec.reporter.Report: java.lang.String software>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</FONT></TD></TR>\n");
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>($r3);

     label6:
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("</TABLE>");
        $r3 = this.<spec.reporter.Report: java.lang.String graphTable>;
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        virtualinvoke this.<spec.reporter.Report: void testBar(java.io.PrintStream)>(out);
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("<P>\n");
        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics_2>;
        if $r4 == null goto label7;

        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.StringReader;
        $r1 = new spec.reporter.TemplateCompare;
        specialinvoke $r1.<spec.reporter.TemplateCompare: void <init>()>();
        $r9 = virtualinvoke $r1.<spec.reporter.TemplateCompare: java.lang.String getTemplateString()>();
        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r9);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);
        in = $r7;
        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.StringReader;
        $r1 = new spec.reporter.TemplateCompare;
        specialinvoke $r1.<spec.reporter.TemplateCompare: void <init>()>();
        $r9 = virtualinvoke $r1.<spec.reporter.TemplateCompare: java.lang.String getTemplateString()>();
        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r9);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);
        in_2 = $r7;
        $r10 = new spec.reporter.TableGroupCompare;
        $r11 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r12 = this.<spec.reporter.Report: spec.reporter.ReportProps results_2>;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps titles>;
        specialinvoke $r10.<spec.reporter.TableGroupCompare: void <init>(java.io.BufferedReader,java.io.BufferedReader,spec.reporter.ReportProps,spec.reporter.ReportProps,spec.reporter.ReportProps)>(in, in_2, $r11, $r12, $r13);
        m = $r10;
        goto label8;

     label7:
        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.StringReader;
        $r14 = new spec.reporter.Template;
        specialinvoke $r14.<spec.reporter.Template: void <init>()>();
        $r9 = virtualinvoke $r14.<spec.reporter.Template: java.lang.String getTemplateString()>();
        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r9);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);
        in = $r7;
        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.StringReader;
        $r14 = new spec.reporter.Template;
        specialinvoke $r14.<spec.reporter.Template: void <init>()>();
        $r9 = virtualinvoke $r14.<spec.reporter.Template: java.lang.String getTemplateString()>();
        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r9);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);
        in_2 = $r7;
        $r10 = new spec.reporter.TableGroupCompare;
        $r11 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r13 = this.<spec.reporter.Report: spec.reporter.ReportProps titles>;
        specialinvoke $r10.<spec.reporter.TableGroupCompare: void <init>(java.io.BufferedReader,java.io.BufferedReader,spec.reporter.ReportProps,spec.reporter.ReportProps,spec.reporter.ReportProps)>(in, in_2, $r11, null, $r13);
        m = $r10;

     label8:
        $r3 = virtualinvoke m.<spec.reporter.TableGroupCompare: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics_2>;
        if $r4 != null goto label9;

        $r15 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r3 = virtualinvoke $r15.<spec.reporter.Metrics: java.lang.String detail()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label9:
        $z0 = this.<spec.reporter.Report: boolean verbose>;
        if $z0 == 0 goto label10;

        specialinvoke this.<spec.reporter.Report: void printOtherProperties(java.io.PrintStream)>(out);

     label10:
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("<HR><FONT SIZE=-1>\n");
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("SPECjbb2005 Version: [");
        $r16 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r2 = virtualinvoke $r16.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("config.benchmark_version", "N/A");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r16 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        $r2 = virtualinvoke $r16.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("config.benchmark_versionDate", "-");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("<BR><I>\n");
        $r6 = this.<spec.reporter.Report: java.lang.String issue>;
        if $r6 == null goto label11;

        $r6 = this.<spec.reporter.Report: java.lang.String issue>;
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 != 0 goto label11;

        $r4 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $z0 = $r4.<spec.reporter.Metrics: boolean valid>;
        if $z0 == 0 goto label11;

        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Published by SPEC ");
        $r2 = this.<spec.reporter.Report: java.lang.String issue>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>");
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label11:
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("Reporting page, Copyright &copy; 2005 SPEC. All rights reserved\n</I></FONT>");
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("<!-- ");
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("Reporting Page Generator @(#)Report.java\t1.18 08/03/98");
        $z0 = this.<spec.reporter.Report: boolean echoRaw>;
        if $z0 == 0 goto label12;

        $r17 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        virtualinvoke $r17.<spec.reporter.ReportProps: void store(java.io.OutputStream,java.lang.String)>(out, "Raw Results");

     label12:
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>(" -->");
        virtualinvoke out.<java.io.PrintStream: void print(java.lang.String)>("</BODY></HTML>\n");
        virtualinvoke out.<java.io.PrintStream: void close()>();

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;
        e = $r18;
        $r19 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r20 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error: ");
        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e);
        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r19.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r20, $r2, e);

     label15:
        return;

        catch java.lang.Exception from label0 to label13 with label14;
    }

    public java.lang.String messages()
    {
        spec.reporter.Report this;
        spec.reporter.Metrics $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        this := @this: spec.reporter.Report;
        $r0 = this.<spec.reporter.Report: spec.reporter.Metrics metrics>;
        $r1 = $r0.<spec.reporter.Metrics: java.lang.StringBuffer results_buf>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    private void printOtherProperties(java.io.PrintStream)
    {
        spec.reporter.Report this;
        java.io.PrintStream out;
        java.util.Enumeration e;
        java.lang.String key, value, $r4;
        spec.reporter.ReportProps $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3;

        this := @this: spec.reporter.Report;
        out := @parameter0: java.io.PrintStream;
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>("<H4>Optional Information</H4>\n<I>This information is for internal documentation purposes\nand is not required for SPEC reporting\n</I><BR>");
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        e = virtualinvoke $r0.<spec.reporter.ReportProps: java.util.Enumeration propertyNames()>();
        goto label4;

     label0:
        $r1 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>();
        key = (java.lang.String) $r1;
        $z0 = virtualinvoke key.<java.lang.String: boolean startsWith(java.lang.String)>("config.testx.");
        if $z0 != 0 goto label1;

        $z0 = virtualinvoke key.<java.lang.String: boolean startsWith(java.lang.String)>("config.initial.");
        if $z0 == 0 goto label4;

     label1:
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        value = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String)>(key);
        $z0 = virtualinvoke key.<java.lang.String: boolean equals(java.lang.Object)>("config.testx.internalReference");
        if $z0 == 0 goto label3;

        $z0 = virtualinvoke value.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        if $z0 != 0 goto label2;

        $z0 = virtualinvoke value.<java.lang.String: boolean startsWith(java.lang.String)>("file:/");
        if $z0 == 0 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("<A HREF=\"");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</A>");
        value = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("<BR>");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label4:
        $z0 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label0;

        return;
    }

    public void testBar(java.io.PrintStream) throws java.io.IOException
    {
        spec.reporter.Report this;
        java.io.PrintStream out;
        java.lang.String license, testedBy, testDate, $r2;
        spec.reporter.ReportProps $r0;
        java.lang.StringBuilder $r1;

        this := @this: spec.reporter.Report;
        out := @parameter0: java.io.PrintStream;
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        license = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("config.test.specLicense", "MISSING");
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        testedBy = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("config.test.testedBy", "MISSING");
        $r0 = this.<spec.reporter.Report: spec.reporter.ReportProps results>;
        testDate = virtualinvoke $r0.<spec.reporter.ReportProps: java.lang.String get(java.lang.String,java.lang.String)>("config.test.date", "MISSING");
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("<TABLE WIDTH=\"100%\" BORDER=1 CELLSPACING=2 CELLPADDING=0><tr>\n<td width=33%><b>SPEC license # </b>");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(license);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>\n");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td width=33%><b>Tested by: </b>");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(testedBy);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>\n");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td><b>Test date: </b>");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(testDate);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>\n");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr></TABLE>");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke out.<java.io.PrintStream: void println(java.lang.String)>($r2);
        return;
    }
}
