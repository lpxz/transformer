public class spec.jbb.infra.Util.XMLTransactionLog extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    static java.io.FileOutputStream fout;
    static org.w3c.dom.Document templateDocument;
    static javax.xml.parsers.DocumentBuilder builder;
    private java.util.ArrayList lineCache;
    org.w3c.dom.Document document;

    static void <clinit>()
    {
        java.io.FileOutputStream $r0;
        java.io.FileDescriptor $r1;
        javax.xml.parsers.DocumentBuilderFactory factory;
        org.xml.sax.SAXException sxe, $r4;
        java.lang.Exception ex, $r6;
        javax.xml.parsers.ParserConfigurationException pce, $r7;
        java.io.IOException ioe, $r8;
        javax.xml.parsers.DocumentBuilder $r2;
        org.w3c.dom.Document $r3;
        java.io.PrintStream $r5;

        $r0 = new java.io.FileOutputStream;
        $r1 = <java.io.FileDescriptor: java.io.FileDescriptor out>;
        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r1);
        <spec.jbb.infra.Util.XMLTransactionLog: java.io.FileOutputStream fout> = $r0;
        factory = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label0:
        $r2 = virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();
        <spec.jbb.infra.Util.XMLTransactionLog: javax.xml.parsers.DocumentBuilder builder> = $r2;
        $r2 = <spec.jbb.infra.Util.XMLTransactionLog: javax.xml.parsers.DocumentBuilder builder>;
        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)>("xml/template-document.xml");
        <spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document templateDocument> = $r3;

     label1:
        goto label6;

     label2:
        $r4 := @caughtexception;
        sxe = $r4;
        $r5 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("SAX Error in template-document initialization.");
        ex = sxe;
        $r6 = virtualinvoke sxe.<org.xml.sax.SAXException: java.lang.Exception getException()>();
        if $r6 == null goto label3;

        ex = virtualinvoke sxe.<org.xml.sax.SAXException: java.lang.Exception getException()>();

     label3:
        virtualinvoke ex.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <java.lang.System: void exit(int)>(1);
        goto label6;

     label4:
        $r7 := @caughtexception;
        pce = $r7;
        $r5 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Parser configuration error in template-document initialization.");
        virtualinvoke pce.<javax.xml.parsers.ParserConfigurationException: void printStackTrace()>();
        staticinvoke <java.lang.System: void exit(int)>(1);
        goto label6;

     label5:
        $r8 := @caughtexception;
        ioe = $r8;
        $r5 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("I/O error in template-document initialization.");
        virtualinvoke ioe.<java.io.IOException: void printStackTrace()>();
        staticinvoke <java.lang.System: void exit(int)>(1);

     label6:
        return;

        catch org.xml.sax.SAXException from label0 to label1 with label2;
        catch javax.xml.parsers.ParserConfigurationException from label0 to label1 with label4;
        catch java.io.IOException from label0 to label1 with label5;
    }

    public void <init>()
    {
        spec.jbb.infra.Util.XMLTransactionLog this;
        java.util.ArrayList $r0;
        org.w3c.dom.Document $r1;

        this := @this: spec.jbb.infra.Util.XMLTransactionLog;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<spec.jbb.infra.Util.XMLTransactionLog: java.util.ArrayList lineCache> = null;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(0);
        this.<spec.jbb.infra.Util.XMLTransactionLog: java.util.ArrayList lineCache> = $r0;
        $r1 = <spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document templateDocument>;
        virtualinvoke this.<spec.jbb.infra.Util.XMLTransactionLog: void copy(org.w3c.dom.Document)>($r1);
        return;
    }

    public void populateXML(spec.jbb.infra.Util.TransactionLogBuffer)
    {
        spec.jbb.infra.Util.XMLTransactionLog this;
        spec.jbb.infra.Util.TransactionLogBuffer log_buffer;
        int i, $i0;
        java.lang.String $r0;

        this := @this: spec.jbb.infra.Util.XMLTransactionLog;
        log_buffer := @parameter0: spec.jbb.infra.Util.TransactionLogBuffer;
        i = 0;
        goto label1;

     label0:
        $r0 = virtualinvoke log_buffer.<spec.jbb.infra.Util.TransactionLogBuffer: java.lang.String getLine(int)>(i);
        specialinvoke this.<spec.jbb.infra.Util.XMLTransactionLog: void putLine(java.lang.String,int)>($r0, i);
        i = i + 1;

     label1:
        $i0 = virtualinvoke log_buffer.<spec.jbb.infra.Util.TransactionLogBuffer: int getLineCount()>();
        if i < $i0 goto label0;

        return;
    }

    public void clear()
    {
        spec.jbb.infra.Util.XMLTransactionLog this;
        org.w3c.dom.Element baseElement;
        org.w3c.dom.Node current_node, lineNode, $r2, next_node;
        null_type next_node;
        org.w3c.dom.Document $r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        this := @this: spec.jbb.infra.Util.XMLTransactionLog;
        $r0 = this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document>;
        baseElement = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();
        current_node = interfaceinvoke baseElement.<org.w3c.dom.Element: org.w3c.dom.Node getLastChild()>();
        next_node = null;
        goto label2;

     label0:
        lineNode = interfaceinvoke baseElement.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(current_node);
        $r1 = interfaceinvoke lineNode.<org.w3c.dom.Node: java.lang.String getNodeName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Line");
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke lineNode.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();
        $r2 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();
        interfaceinvoke $r2.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>("");
        $r3 = this.<spec.jbb.infra.Util.XMLTransactionLog: java.util.ArrayList lineCache>;
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(lineNode);

     label1:
        current_node = next_node;

     label2:
        $r2 = interfaceinvoke current_node.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();
        next_node = $r2;
        if $r2 != null goto label0;

        return;
    }

    public void copy(org.w3c.dom.Document)
    {
        spec.jbb.infra.Util.XMLTransactionLog this;
        org.w3c.dom.Document master, $r1;
        org.w3c.dom.Node $r0;

        this := @this: spec.jbb.infra.Util.XMLTransactionLog;
        master := @parameter0: org.w3c.dom.Document;
        $r0 = interfaceinvoke master.<org.w3c.dom.Document: org.w3c.dom.Node cloneNode(boolean)>(1);
        $r1 = (org.w3c.dom.Document) $r0;
        this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document> = $r1;
        return;
    }

    private final void putLine(java.lang.String, int)
    {
        spec.jbb.infra.Util.XMLTransactionLog this;
        java.lang.String s;
        int n, line_number, cacheLength, $i0;
        org.w3c.dom.Node jbbDocument, lineNode, $r3;
        org.w3c.dom.Element newData, lineNode;
        org.w3c.dom.Text new_node;
        org.w3c.dom.Document $r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;

        this := @this: spec.jbb.infra.Util.XMLTransactionLog;
        s := @parameter0: java.lang.String;
        n := @parameter1: int;
        line_number = n;
        $r0 = this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document>;
        jbbDocument = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Node getLastChild()>();
        $r1 = this.<spec.jbb.infra.Util.XMLTransactionLog: java.util.ArrayList lineCache>;
        cacheLength = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        if cacheLength <= 0 goto label0;

        $r1 = this.<spec.jbb.infra.Util.XMLTransactionLog: java.util.ArrayList lineCache>;
        $i0 = cacheLength - 1;
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);
        lineNode = (org.w3c.dom.Node) $r2;
        interfaceinvoke jbbDocument.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(lineNode);
        $r3 = interfaceinvoke lineNode.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();
        $r3 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();
        interfaceinvoke $r3.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(s);
        goto label1;

     label0:
        $r0 = this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document>;
        lineNode = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("Line");
        interfaceinvoke jbbDocument.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(lineNode);
        $r0 = this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document>;
        newData = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("LineData");
        interfaceinvoke lineNode.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(newData);
        $r0 = this.<spec.jbb.infra.Util.XMLTransactionLog: org.w3c.dom.Document document>;
        new_node = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(s);
        interfaceinvoke newData.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(new_node);

     label1:
        return;
    }
}
