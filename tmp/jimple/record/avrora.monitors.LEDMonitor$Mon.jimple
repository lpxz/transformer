public class avrora.monitors.LEDMonitor$Mon extends java.lang.Object implements avrora.monitors.Monitor, avrora.sim.FiniteStateMachine$Probe
{
    avrora.sim.platform.LED$LEDGroup ledgroup;
    avrora.sim.output.SimPrinter printer;
    final avrora.monitors.LEDMonitor this$0;

    public void <init>(avrora.monitors.LEDMonitor, avrora.sim.Simulator)
    {
        avrora.monitors.LEDMonitor$Mon this;
        avrora.monitors.LEDMonitor l1;
        avrora.sim.Simulator s;
        avrora.sim.platform.Platform platform;
        java.lang.Object dev;
        avrora.sim.platform.LED[] leds;
        int cntr, $i0;
        avrora.sim.mcu.Microcontroller $r0;
        avrora.sim.output.SimPrinter $r1;
        boolean $z0;
        avrora.sim.platform.LED$LEDGroup $r2, $r3;
        avrora.sim.platform.LED $r4;
        avrora.sim.FiniteStateMachine $r5;

        this := @this: avrora.monitors.LEDMonitor$Mon;
        l1 := @parameter0: avrora.monitors.LEDMonitor;
        s := @parameter1: avrora.sim.Simulator;
        this.<avrora.monitors.LEDMonitor$Mon: avrora.monitors.LEDMonitor this$0> = l1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = virtualinvoke s.<avrora.sim.Simulator: avrora.sim.mcu.Microcontroller getMicrocontroller()>();
        platform = interfaceinvoke $r0.<avrora.sim.mcu.Microcontroller: avrora.sim.platform.Platform getPlatform()>();
        $r1 = virtualinvoke s.<avrora.sim.Simulator: avrora.sim.output.SimPrinter getPrinter()>();
        this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.output.SimPrinter printer> = $r1;
        dev = virtualinvoke platform.<avrora.sim.platform.Platform: java.lang.Object getDevice(java.lang.String)>("leds");
        $z0 = dev instanceof avrora.sim.platform.LED$LEDGroup;
        if $z0 == 0 goto label1;

        $r2 = (avrora.sim.platform.LED$LEDGroup) dev;
        this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.platform.LED$LEDGroup ledgroup> = $r2;
        $r3 = this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.platform.LED$LEDGroup ledgroup>;
        leds = $r3.<avrora.sim.platform.LED$LEDGroup: avrora.sim.platform.LED[] leds>;
        cntr = 0;

     label0:
        $i0 = lengthof leds;
        if cntr >= $i0 goto label1;

        $r4 = leds[cntr];
        $r5 = $r4.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        virtualinvoke $r5.<avrora.sim.FiniteStateMachine: void insertProbe(avrora.sim.FiniteStateMachine$Probe)>(this);
        cntr = cntr + 1;
        goto label0;

     label1:
        return;
    }

    public void fireBeforeTransition(int, int)
    {
        avrora.monitors.LEDMonitor$Mon this;
        int beforeState, afterState;

        this := @this: avrora.monitors.LEDMonitor$Mon;
        beforeState := @parameter0: int;
        afterState := @parameter1: int;
        return;
    }

    public void fireAfterTransition(int, int)
    {
        avrora.monitors.LEDMonitor$Mon this;
        int beforeState, afterState, cntr, $i0, $i1;
        java.lang.StringBuffer buf;
        avrora.sim.platform.LED[] leds;
        avrora.sim.output.SimPrinter $r0;
        avrora.sim.platform.LED$LEDGroup $r1;
        avrora.sim.platform.LED $r2;

        this := @this: avrora.monitors.LEDMonitor$Mon;
        beforeState := @parameter0: int;
        afterState := @parameter1: int;
        if beforeState != afterState goto label0;

        return;

     label0:
        $r0 = this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.output.SimPrinter printer>;
        buf = virtualinvoke $r0.<avrora.sim.output.SimPrinter: java.lang.StringBuffer getBuffer(int)>(30);
        $r1 = this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.platform.LED$LEDGroup ledgroup>;
        leds = $r1.<avrora.sim.platform.LED$LEDGroup: avrora.sim.platform.LED[] leds>;
        cntr = 0;

     label1:
        $i0 = lengthof leds;
        if cntr >= $i0 goto label4;

        $r2 = leds[cntr];
        $i1 = virtualinvoke $r2.<avrora.sim.platform.LED: int getState()>();
        if $i1 != 0 goto label2;

        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("off ");
        goto label3;

     label2:
        $r2 = leds[cntr];
        $i1 = $r2.<avrora.sim.platform.LED: int colornum>;
        staticinvoke <cck.text.Terminal: void append(int,java.lang.StringBuffer,java.lang.String)>($i1, buf, "on  ");

     label3:
        cntr = cntr + 1;
        goto label1;

     label4:
        $r0 = this.<avrora.monitors.LEDMonitor$Mon: avrora.sim.output.SimPrinter printer>;
        virtualinvoke $r0.<avrora.sim.output.SimPrinter: void printBuffer(java.lang.StringBuffer)>(buf);
        return;
    }

    public void report()
    {
        avrora.monitors.LEDMonitor$Mon this;

        this := @this: avrora.monitors.LEDMonitor$Mon;
        return;
    }
}
