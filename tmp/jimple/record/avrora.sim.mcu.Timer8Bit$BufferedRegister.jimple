public class avrora.sim.mcu.Timer8Bit$BufferedRegister extends avrora.sim.RWRegister
{
    final avrora.sim.RWRegister register;
    final avrora.sim.mcu.Timer8Bit this$0;

    protected void <init>(avrora.sim.mcu.Timer8Bit)
    {
        avrora.sim.mcu.Timer8Bit$BufferedRegister this;
        avrora.sim.mcu.Timer8Bit l1;
        avrora.sim.RWRegister $r0;

        this := @this: avrora.sim.mcu.Timer8Bit$BufferedRegister;
        l1 := @parameter0: avrora.sim.mcu.Timer8Bit;
        this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.mcu.Timer8Bit this$0> = l1;
        specialinvoke this.<avrora.sim.RWRegister: void <init>()>();
        $r0 = new avrora.sim.RWRegister;
        specialinvoke $r0.<avrora.sim.RWRegister: void <init>()>();
        this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.RWRegister register> = $r0;
        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.Timer8Bit$BufferedRegister this;
        byte val;
        avrora.sim.mcu.Timer8Bit $r0;
        avrora.sim.mcu.Timer8Bit$ControlRegister $r1;
        int $i0;
        long tid_write;
        java.lang.Thread thread_write;

        this := @this: avrora.sim.mcu.Timer8Bit$BufferedRegister;
        val := @parameter0: byte;
        thread_write = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_write = virtualinvoke thread_write.<java.lang.Thread: long getId()>();
        specialinvoke this.<avrora.sim.RWRegister: void write(byte)>(val);
        $r0 = this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.mcu.Timer8Bit this$0>;
        $r1 = $r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$ControlRegister TCCRn_reg>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>($r1, 204, tid_write, "avrora.sim.mcu.Timer8Bit$BufferedRegister", 168, $i0);
        $i0 = $r1.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode>;
        if $i0 == 0 goto label0;

        $r0 = this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.mcu.Timer8Bit this$0>;
        $r1 = $r0.<avrora.sim.mcu.Timer8Bit: avrora.sim.mcu.Timer8Bit$ControlRegister TCCRn_reg>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>($r1, 204, tid_write, "avrora.sim.mcu.Timer8Bit$BufferedRegister", 168, $i0);
        $i0 = $r1.<avrora.sim.mcu.Timer8Bit$ControlRegister: int mode>;
        if $i0 != 2 goto label1;

     label0:
        virtualinvoke this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: void flush()>();

     label1:
        return;
    }

    public byte readBuffer()
    {
        avrora.sim.mcu.Timer8Bit$BufferedRegister this;
        byte $b0;

        this := @this: avrora.sim.mcu.Timer8Bit$BufferedRegister;
        $b0 = specialinvoke this.<avrora.sim.RWRegister: byte read()>();
        return $b0;
    }

    public byte read()
    {
        avrora.sim.mcu.Timer8Bit$BufferedRegister this;
        avrora.sim.RWRegister $r0;
        byte $b0;

        this := @this: avrora.sim.mcu.Timer8Bit$BufferedRegister;
        $r0 = this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.RWRegister register>;
        $b0 = virtualinvoke $r0.<avrora.sim.RWRegister: byte read()>();
        return $b0;
    }

    protected void flush()
    {
        avrora.sim.mcu.Timer8Bit$BufferedRegister this;
        avrora.sim.RWRegister $r0;
        byte $b0;
        long tid_flush;
        java.lang.Thread thread_flush;

        this := @this: avrora.sim.mcu.Timer8Bit$BufferedRegister;
        thread_flush = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_flush = virtualinvoke thread_flush.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: avrora.sim.RWRegister register>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>(this, 17, tid_flush, "avrora.sim.mcu.Timer8Bit$BufferedRegister", 182, $b0);
        $b0 = this.<avrora.sim.mcu.Timer8Bit$BufferedRegister: byte value>;
        virtualinvoke $r0.<avrora.sim.RWRegister: void write(byte)>($b0);
        return;
    }
}
