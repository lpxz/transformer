public class spec.jbb.MapDataStorage extends java.lang.Object implements spec.jbb.JBBDataStorage
{
    private static final long serialVersionUID;
    static final java.lang.String COPYRIGHT;
    protected java.util.Map data;

    protected void <init>()
    {
        spec.jbb.MapDataStorage this;
        java.util.HashMap $r0;

        this := @this: spec.jbb.MapDataStorage;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        specialinvoke this.<spec.jbb.MapDataStorage: void <init>(java.util.Map)>($r0);
        return;
    }

    protected void <init>(java.util.Map)
    {
        spec.jbb.MapDataStorage this;
        java.util.Map data;

        this := @this: spec.jbb.MapDataStorage;
        data := @parameter0: java.util.Map;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<spec.jbb.MapDataStorage: java.util.Map data> = data;
        return;
    }

    public java.util.Iterator elements()
    {
        spec.jbb.MapDataStorage this;
        java.util.Map $r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        this := @this: spec.jbb.MapDataStorage;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();
        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();
        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        spec.jbb.MapDataStorage this;
        java.lang.Object key;
        java.util.Map $r0;
        boolean $z0;

        this := @this: spec.jbb.MapDataStorage;
        key := @parameter0: java.lang.Object;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(key);
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        spec.jbb.MapDataStorage this;
        java.lang.Object key, $r1;
        java.util.Map $r0;

        this := @this: spec.jbb.MapDataStorage;
        key := @parameter0: java.lang.Object;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        spec.jbb.MapDataStorage this;
        java.lang.Object key, value, $r1;
        java.util.Map $r0;

        this := @this: spec.jbb.MapDataStorage;
        key := @parameter0: java.lang.Object;
        value := @parameter1: java.lang.Object;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);
        return $r1;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        spec.jbb.MapDataStorage this;
        java.lang.Object key, $r1;
        java.util.Map $r0;

        this := @this: spec.jbb.MapDataStorage;
        key := @parameter0: java.lang.Object;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(key);
        return $r1;
    }

    public int size()
    {
        spec.jbb.MapDataStorage this;
        java.util.Map $r0;
        int $i0;

        this := @this: spec.jbb.MapDataStorage;
        $r0 = this.<spec.jbb.MapDataStorage: java.util.Map data>;
        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();
        return $i0;
    }
}
