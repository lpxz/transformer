public class cck.text.CharUtil extends java.lang.Object
{
    public static final char[] HEX_CHARS;
    public static final char[] LOW_HEX_CHARS;

    public void <init>()
    {
        cck.text.CharUtil this;

        this := @this: cck.text.CharUtil;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isHexDigit(char)
    {
        char c;

        c := @parameter0: char;
        tableswitch(c)
        {
            case 48: goto label0;
            case 49: goto label0;
            case 50: goto label0;
            case 51: goto label0;
            case 52: goto label0;
            case 53: goto label0;
            case 54: goto label0;
            case 55: goto label0;
            case 56: goto label0;
            case 57: goto label0;
            case 58: goto label1;
            case 59: goto label1;
            case 60: goto label1;
            case 61: goto label1;
            case 62: goto label1;
            case 63: goto label1;
            case 64: goto label1;
            case 65: goto label0;
            case 66: goto label0;
            case 67: goto label0;
            case 68: goto label0;
            case 69: goto label0;
            case 70: goto label0;
            case 71: goto label1;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 76: goto label1;
            case 77: goto label1;
            case 78: goto label1;
            case 79: goto label1;
            case 80: goto label1;
            case 81: goto label1;
            case 82: goto label1;
            case 83: goto label1;
            case 84: goto label1;
            case 85: goto label1;
            case 86: goto label1;
            case 87: goto label1;
            case 88: goto label1;
            case 89: goto label1;
            case 90: goto label1;
            case 91: goto label1;
            case 92: goto label1;
            case 93: goto label1;
            case 94: goto label1;
            case 95: goto label1;
            case 96: goto label1;
            case 97: goto label0;
            case 98: goto label0;
            case 99: goto label0;
            case 100: goto label0;
            case 101: goto label0;
            case 102: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    public static char toUpperHexChar(int)
    {
        int digitValue, $i0;
        char $c1;

        digitValue := @parameter0: int;
        if digitValue >= 10 goto label0;

        $i0 = digitValue | 48;
        $c1 = (char) $i0;
        return $c1;

     label0:
        $i0 = 65 + digitValue;
        $i0 = $i0 - 10;
        $c1 = (char) $i0;
        return $c1;
    }

    public static char toLowerHexChar(int)
    {
        int digitValue, $i0;
        char $c1;

        digitValue := @parameter0: int;
        if digitValue >= 10 goto label0;

        $i0 = digitValue | 48;
        $c1 = (char) $i0;
        return $c1;

     label0:
        $i0 = 97 + digitValue;
        $i0 = $i0 - 10;
        $c1 = (char) $i0;
        return $c1;
    }

    public static int hexValueOf(char)
    {
        char c;
        int $i0;

        c := @parameter0: char;
        $i0 = staticinvoke <java.lang.Character: int digit(char,int)>(c, 16);
        return $i0;
    }

    public static boolean isDecDigit(char)
    {
        char c;
        boolean $z0;

        c := @parameter0: char;
        if c >= 48 goto label0;

        return 0;

     label0:
        if c > 57 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int decValueOf(char)
    {
        char c;
        int $i0;

        c := @parameter0: char;
        $i0 = staticinvoke <java.lang.Character: int digit(char,int)>(c, 10);
        return $i0;
    }

    public static boolean isOctDigit(char)
    {
        char c;
        boolean $z0;

        c := @parameter0: char;
        if c >= 48 goto label0;

        return 0;

     label0:
        if c > 55 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int octValueOf(char)
    {
        char c;
        int $i0;

        c := @parameter0: char;
        $i0 = staticinvoke <java.lang.Character: int digit(char,int)>(c, 8);
        return $i0;
    }

    public static boolean isBinDigit(char)
    {
        char c;
        boolean $z0;

        c := @parameter0: char;
        if c == 48 goto label0;

        if c != 49 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int binValueOf(char)
    {
        char c;
        byte $b0;

        c := @parameter0: char;
        if c != 48 goto label0;

        $b0 = 0;
        goto label1;

     label0:
        $b0 = 1;

     label1:
        return $b0;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];
        $r0[0] = 48;
        $r0[1] = 49;
        $r0[2] = 50;
        $r0[3] = 51;
        $r0[4] = 52;
        $r0[5] = 53;
        $r0[6] = 54;
        $r0[7] = 55;
        $r0[8] = 56;
        $r0[9] = 57;
        $r0[10] = 65;
        $r0[11] = 66;
        $r0[12] = 67;
        $r0[13] = 68;
        $r0[14] = 69;
        $r0[15] = 70;
        <cck.text.CharUtil: char[] HEX_CHARS> = $r0;
        $r0 = newarray (char)[16];
        $r0[0] = 48;
        $r0[1] = 49;
        $r0[2] = 50;
        $r0[3] = 51;
        $r0[4] = 52;
        $r0[5] = 53;
        $r0[6] = 54;
        $r0[7] = 55;
        $r0[8] = 56;
        $r0[9] = 57;
        $r0[10] = 97;
        $r0[11] = 98;
        $r0[12] = 99;
        $r0[13] = 100;
        $r0[14] = 101;
        $r0[15] = 102;
        <cck.text.CharUtil: char[] LOW_HEX_CHARS> = $r0;
        return;
    }
}
