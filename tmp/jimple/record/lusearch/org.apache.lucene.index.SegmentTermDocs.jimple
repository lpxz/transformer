class org.apache.lucene.index.SegmentTermDocs extends java.lang.Object implements org.apache.lucene.index.TermDocs
{
    protected org.apache.lucene.index.SegmentReader parent;
    protected org.apache.lucene.store.IndexInput freqStream;
    protected int count;
    protected int df;
    protected org.apache.lucene.util.BitVector deletedDocs;
    int doc;
    int freq;
    private int skipInterval;
    private int maxSkipLevels;
    private org.apache.lucene.index.DefaultSkipListReader skipListReader;
    private long freqBasePointer;
    private long proxBasePointer;
    private long skipPointer;
    private boolean haveSkipped;
    protected boolean currentFieldStoresPayloads;
    protected boolean currentFieldOmitTf;

    protected void <init>(org.apache.lucene.index.SegmentReader)
    {
        org.apache.lucene.index.SegmentTermDocs this;
        org.apache.lucene.index.SegmentReader parent;
        org.apache.lucene.store.IndexInput $r0;
        java.lang.Object $r1;
        org.apache.lucene.util.BitVector $r2;
        org.apache.lucene.index.TermInfosReader $r3;
        int $i0;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        parent := @parameter0: org.apache.lucene.index.SegmentReader;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = 0;
        this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.SegmentReader parent> = parent;
        $r0 = parent.<org.apache.lucene.index.SegmentReader: org.apache.lucene.store.IndexInput freqStream>;
        $r1 = virtualinvoke $r0.<org.apache.lucene.store.IndexInput: java.lang.Object clone()>();
        $r0 = (org.apache.lucene.store.IndexInput) $r1;
        this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream> = $r0;
        $r2 = parent.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.BitVector deletedDocs>;
        this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs> = $r2;
        $r3 = parent.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.TermInfosReader tis>;
        $i0 = virtualinvoke $r3.<org.apache.lucene.index.TermInfosReader: int getSkipInterval()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int skipInterval> = $i0;
        $r3 = parent.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.TermInfosReader tis>;
        $i0 = virtualinvoke $r3.<org.apache.lucene.index.TermInfosReader: int getMaxSkipLevels()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int maxSkipLevels> = $i0;
        return;
    }

    public void seek(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        org.apache.lucene.index.Term term;
        org.apache.lucene.index.TermInfo ti;
        org.apache.lucene.index.SegmentReader $r0;
        org.apache.lucene.index.TermInfosReader $r1;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        term := @parameter0: org.apache.lucene.index.Term;
        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.SegmentReader parent>;
        $r1 = $r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.TermInfosReader tis>;
        ti = virtualinvoke $r1.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term)>(term);
        virtualinvoke this.<org.apache.lucene.index.SegmentTermDocs: void seek(org.apache.lucene.index.TermInfo,org.apache.lucene.index.Term)>(ti, term);
        return;
    }

    public void seek(org.apache.lucene.index.TermEnum) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        org.apache.lucene.index.TermEnum termEnum;
        org.apache.lucene.index.SegmentTermEnum segmentTermEnum, $r0;
        org.apache.lucene.index.Term term;
        org.apache.lucene.index.TermInfo ti;
        boolean $z0;
        org.apache.lucene.index.FieldInfos $r1, $r3;
        org.apache.lucene.index.SegmentReader $r2, $r4;
        org.apache.lucene.index.TermInfosReader $r5;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        termEnum := @parameter0: org.apache.lucene.index.TermEnum;
        $z0 = termEnum instanceof org.apache.lucene.index.SegmentTermEnum;
        if $z0 == 0 goto label0;

        $r0 = (org.apache.lucene.index.SegmentTermEnum) termEnum;
        $r1 = $r0.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.FieldInfos fieldInfos>;
        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.SegmentReader parent>;
        $r3 = $r2.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.FieldInfos fieldInfos>;
        if $r1 != $r3 goto label0;

        segmentTermEnum = (org.apache.lucene.index.SegmentTermEnum) termEnum;
        term = virtualinvoke segmentTermEnum.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.Term term()>();
        ti = virtualinvoke segmentTermEnum.<org.apache.lucene.index.SegmentTermEnum: org.apache.lucene.index.TermInfo termInfo()>();
        goto label1;

     label0:
        term = virtualinvoke termEnum.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();
        $r4 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.SegmentReader parent>;
        $r5 = $r4.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.TermInfosReader tis>;
        ti = virtualinvoke $r5.<org.apache.lucene.index.TermInfosReader: org.apache.lucene.index.TermInfo get(org.apache.lucene.index.Term)>(term);

     label1:
        virtualinvoke this.<org.apache.lucene.index.SegmentTermDocs: void seek(org.apache.lucene.index.TermInfo,org.apache.lucene.index.Term)>(ti, term);
        return;
    }

    void seek(org.apache.lucene.index.TermInfo, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        org.apache.lucene.index.TermInfo ti;
        org.apache.lucene.index.Term term;
        org.apache.lucene.index.FieldInfo fi;
        org.apache.lucene.index.SegmentReader $r0;
        org.apache.lucene.index.FieldInfos $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0, $i2;
        long $l1, $l3;
        org.apache.lucene.store.IndexInput $r4;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        ti := @parameter0: org.apache.lucene.index.TermInfo;
        term := @parameter1: org.apache.lucene.index.Term;
        this.<org.apache.lucene.index.SegmentTermDocs: int count> = 0;
        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.SegmentReader parent>;
        $r1 = $r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.FieldInfos fieldInfos>;
        $r2 = term.<org.apache.lucene.index.Term: java.lang.String field>;
        fi = virtualinvoke $r1.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>($r2);
        if fi == null goto label0;

        $z0 = fi.<org.apache.lucene.index.FieldInfo: boolean omitTf>;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        this.<org.apache.lucene.index.SegmentTermDocs: boolean currentFieldOmitTf> = $z0;
        if fi == null goto label2;

        $z0 = fi.<org.apache.lucene.index.FieldInfo: boolean storePayloads>;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        this.<org.apache.lucene.index.SegmentTermDocs: boolean currentFieldStoresPayloads> = $z0;
        if ti != null goto label4;

        this.<org.apache.lucene.index.SegmentTermDocs: int df> = 0;
        goto label5;

     label4:
        $i0 = ti.<org.apache.lucene.index.TermInfo: int docFreq>;
        this.<org.apache.lucene.index.SegmentTermDocs: int df> = $i0;
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = 0;
        $l1 = ti.<org.apache.lucene.index.TermInfo: long freqPointer>;
        this.<org.apache.lucene.index.SegmentTermDocs: long freqBasePointer> = $l1;
        $l1 = ti.<org.apache.lucene.index.TermInfo: long proxPointer>;
        this.<org.apache.lucene.index.SegmentTermDocs: long proxBasePointer> = $l1;
        $l1 = this.<org.apache.lucene.index.SegmentTermDocs: long freqBasePointer>;
        $i2 = ti.<org.apache.lucene.index.TermInfo: int skipOffset>;
        $l3 = (long) $i2;
        $l1 = $l1 + $l3;
        this.<org.apache.lucene.index.SegmentTermDocs: long skipPointer> = $l1;
        $r4 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $l1 = this.<org.apache.lucene.index.SegmentTermDocs: long freqBasePointer>;
        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);
        this.<org.apache.lucene.index.SegmentTermDocs: boolean haveSkipped> = 0;

     label5:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        org.apache.lucene.store.IndexInput $r0;
        org.apache.lucene.index.DefaultSkipListReader $r1;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        virtualinvoke $r0.<org.apache.lucene.store.IndexInput: void close()>();
        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        if $r1 == null goto label0;

        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        virtualinvoke $r1.<org.apache.lucene.index.DefaultSkipListReader: void close()>();

     label0:
        return;
    }

    public final int doc()
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int $i0;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        return $i0;
    }

    public final int freq()
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int $i0;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int freq>;
        return $i0;
    }

    protected void skippingDoc() throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int docCode, $i0, $i1, $i2;
        org.apache.lucene.store.IndexInput $r0, $r2;
        boolean $z0;
        org.apache.lucene.util.BitVector $r3;

        this := @this: org.apache.lucene.index.SegmentTermDocs;

     label0:
        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int df>;
        if $i0 != $i1 goto label1;

        return 0;

     label1:
        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        docCode = virtualinvoke $r0.<org.apache.lucene.store.IndexInput: int readVInt()>();
        $z0 = this.<org.apache.lucene.index.SegmentTermDocs: boolean currentFieldOmitTf>;
        if $z0 == 0 goto label2;

        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $i1 = $i1 + docCode;
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = $i1;
        this.<org.apache.lucene.index.SegmentTermDocs: int freq> = 1;
        goto label4;

     label2:
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $i2 = docCode >>> 1;
        $i1 = $i1 + $i2;
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = $i1;
        $i0 = docCode & 1;
        if $i0 == 0 goto label3;

        this.<org.apache.lucene.index.SegmentTermDocs: int freq> = 1;
        goto label4;

     label3:
        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $i1 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: int readVInt()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int freq> = $i1;

     label4:
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = $i1 + 1;
        this.<org.apache.lucene.index.SegmentTermDocs: int count> = $i1;
        $r3 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        if $r3 == null goto label6;

        $r3 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $z0 = virtualinvoke $r3.<org.apache.lucene.util.BitVector: boolean get(int)>($i1);
        if $z0 != 0 goto label5;

        goto label6;

     label5:
        virtualinvoke this.<org.apache.lucene.index.SegmentTermDocs: void skippingDoc()>();
        goto label0;

     label6:
        return 1;
    }

    public int read(int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int[] docs, freqs;
        int length, i, docCode, $i0, $i1, $i2;
        boolean $z0;
        org.apache.lucene.store.IndexInput $r0, $r2;
        org.apache.lucene.util.BitVector $r3;
        long tid_read;
        java.lang.Thread thread_read;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        docs := @parameter0: int[];
        freqs := @parameter1: int[];
        thread_read = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_read = virtualinvoke thread_read.<java.lang.Thread: long getId()>();
        length = lengthof docs;
        $z0 = this.<org.apache.lucene.index.SegmentTermDocs: boolean currentFieldOmitTf>;
        if $z0 == 0 goto label0;

        $i0 = specialinvoke this.<org.apache.lucene.index.SegmentTermDocs: int readNoTf(int[],int[],int)>(docs, freqs, length);
        return $i0;

     label0:
        i = 0;

     label1:
        if i >= length goto label6;

        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int df>;
        if $i0 >= $i1 goto label6;

        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        docCode = virtualinvoke $r0.<org.apache.lucene.store.IndexInput: int readVInt()>();
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $i2 = docCode >>> 1;
        $i1 = $i1 + $i2;
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = $i1;
        $i0 = docCode & 1;
        if $i0 == 0 goto label2;

        this.<org.apache.lucene.index.SegmentTermDocs: int freq> = 1;
        goto label3;

     label2:
        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $i1 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: int readVInt()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int freq> = $i1;

     label3:
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = $i1 + 1;
        this.<org.apache.lucene.index.SegmentTermDocs: int count> = $i1;
        $r3 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        if $r3 == null goto label4;

        $r3 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $z0 = virtualinvoke $r3.<org.apache.lucene.util.BitVector: boolean get(int)>($i1);
        if $z0 != 0 goto label5;

     label4:
        $i2 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>(docs, 22, tid_read, "org.apache.lucene.index.SegmentTermDocs", 151, i, $i2);
        docs[i] = $i2;
        $i2 = this.<org.apache.lucene.index.SegmentTermDocs: int freq>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>(freqs, 22, tid_read, "org.apache.lucene.index.SegmentTermDocs", 152, i, $i2);
        freqs[i] = $i2;
        i = i + 1;

     label5:
        goto label1;

     label6:
        return i;
    }

    private final int readNoTf(int[], int[], int) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int[] docs, freqs;
        int length, i, $i0, $i1, $i2;
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.util.BitVector $r2;
        boolean $z0;
        long tid_readNoTf;
        java.lang.Thread thread_readNoTf;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        docs := @parameter0: int[];
        freqs := @parameter1: int[];
        length := @parameter2: int;
        thread_readNoTf = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_readNoTf = virtualinvoke thread_readNoTf.<java.lang.Thread: long getId()>();
        i = 0;

     label0:
        if i >= length goto label2;

        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int df>;
        if $i0 >= $i1 goto label2;

        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();
        $i1 = $i1 + $i2;
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = $i1;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        $i1 = $i1 + 1;
        this.<org.apache.lucene.index.SegmentTermDocs: int count> = $i1;
        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        if $r2 == null goto label1;

        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.util.BitVector deletedDocs>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        $z0 = virtualinvoke $r2.<org.apache.lucene.util.BitVector: boolean get(int)>($i1);
        if $z0 != 0 goto label0;

     label1:
        $i2 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>(docs, 22, tid_readNoTf, "org.apache.lucene.index.SegmentTermDocs", 168, i, $i2);
        docs[i] = $i2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>(freqs, 22, tid_readNoTf, "org.apache.lucene.index.SegmentTermDocs", 171, i, 1);
        freqs[i] = 1;
        i = i + 1;
        goto label0;

     label2:
        return i;
    }

    protected void skipProx(long, int) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        long proxPointer;
        int payloadLength;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        proxPointer := @parameter0: long;
        payloadLength := @parameter1: int;
        return;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentTermDocs this;
        int target, newCount, $i0, $i1, $i2, $i3, $i7, $i8;
        org.apache.lucene.index.DefaultSkipListReader $r0, $r1, $r5;
        org.apache.lucene.store.IndexInput $r2, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;
        long $l4, $l5, $l6;

        this := @this: org.apache.lucene.index.SegmentTermDocs;
        target := @parameter0: int;
        $i0 = this.<org.apache.lucene.index.SegmentTermDocs: int df>;
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int skipInterval>;
        if $i0 < $i1 goto label2;

        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        if $r0 != null goto label0;

        $r1 = new org.apache.lucene.index.DefaultSkipListReader;
        $r2 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $r3 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: java.lang.Object clone()>();
        $r2 = (org.apache.lucene.store.IndexInput) $r3;
        $i2 = this.<org.apache.lucene.index.SegmentTermDocs: int maxSkipLevels>;
        $i3 = this.<org.apache.lucene.index.SegmentTermDocs: int skipInterval>;
        specialinvoke $r1.<org.apache.lucene.index.DefaultSkipListReader: void <init>(org.apache.lucene.store.IndexInput,int,int)>($r2, $i2, $i3);
        this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader> = $r1;

     label0:
        $z0 = this.<org.apache.lucene.index.SegmentTermDocs: boolean haveSkipped>;
        if $z0 != 0 goto label1;

        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        $l4 = this.<org.apache.lucene.index.SegmentTermDocs: long skipPointer>;
        $l5 = this.<org.apache.lucene.index.SegmentTermDocs: long freqBasePointer>;
        $l6 = this.<org.apache.lucene.index.SegmentTermDocs: long proxBasePointer>;
        $i7 = this.<org.apache.lucene.index.SegmentTermDocs: int df>;
        $z1 = this.<org.apache.lucene.index.SegmentTermDocs: boolean currentFieldStoresPayloads>;
        virtualinvoke $r0.<org.apache.lucene.index.DefaultSkipListReader: void init(long,long,long,int,boolean)>($l4, $l5, $l6, $i7, $z1);
        this.<org.apache.lucene.index.SegmentTermDocs: boolean haveSkipped> = 1;

     label1:
        $r0 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        newCount = virtualinvoke $r0.<org.apache.lucene.index.DefaultSkipListReader: int skipTo(int)>(target);
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int count>;
        if newCount <= $i1 goto label2;

        $r4 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.store.IndexInput freqStream>;
        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        $l4 = virtualinvoke $r1.<org.apache.lucene.index.DefaultSkipListReader: long getFreqPointer()>();
        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: void seek(long)>($l4);
        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        $l4 = virtualinvoke $r1.<org.apache.lucene.index.DefaultSkipListReader: long getProxPointer()>();
        $r5 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        $i8 = virtualinvoke $r5.<org.apache.lucene.index.DefaultSkipListReader: int getPayloadLength()>();
        virtualinvoke this.<org.apache.lucene.index.SegmentTermDocs: void skipProx(long,int)>($l4, $i8);
        $r1 = this.<org.apache.lucene.index.SegmentTermDocs: org.apache.lucene.index.DefaultSkipListReader skipListReader>;
        $i1 = virtualinvoke $r1.<org.apache.lucene.index.DefaultSkipListReader: int getDoc()>();
        this.<org.apache.lucene.index.SegmentTermDocs: int doc> = $i1;
        this.<org.apache.lucene.index.SegmentTermDocs: int count> = newCount;

     label2:
        $z0 = virtualinvoke this.<org.apache.lucene.index.SegmentTermDocs: boolean next()>();
        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i1 = this.<org.apache.lucene.index.SegmentTermDocs: int doc>;
        if target > $i1 goto label2;

        return 1;
    }
}
