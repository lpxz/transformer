public final class org.apache.lucene.document.Document extends java.lang.Object implements java.io.Serializable
{
    java.util.List fields;
    private float boost;
    private static final org.apache.lucene.document.Field[] NO_FIELDS;
    private static final org.apache.lucene.document.Fieldable[] NO_FIELDABLES;
    private static final java.lang.String[] NO_STRINGS;
    private static final byte[][] NO_BYTES;

    public void <init>()
    {
        org.apache.lucene.document.Document this;
        java.util.ArrayList $r0;

        this := @this: org.apache.lucene.document.Document;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.lucene.document.Document: java.util.List fields> = $r0;
        this.<org.apache.lucene.document.Document: float boost> = 1.0F;
        return;
    }

    public void setBoost(float)
    {
        org.apache.lucene.document.Document this;
        float boost;

        this := @this: org.apache.lucene.document.Document;
        boost := @parameter0: float;
        this.<org.apache.lucene.document.Document: float boost> = boost;
        return;
    }

    public float getBoost()
    {
        org.apache.lucene.document.Document this;
        float $f0;

        this := @this: org.apache.lucene.document.Document;
        $f0 = this.<org.apache.lucene.document.Document: float boost>;
        return $f0;
    }

    public final void add(org.apache.lucene.document.Fieldable)
    {
        org.apache.lucene.document.Document this;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0;

        this := @this: org.apache.lucene.document.Document;
        field := @parameter0: org.apache.lucene.document.Fieldable;
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(field);
        return;
    }

    public final void removeField(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r2;
        java.util.Iterator it;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        it = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        field = (org.apache.lucene.document.Fieldable) $r1;
        $r2 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        interfaceinvoke it.<java.util.Iterator: void remove()>();
        return;

     label1:
        goto label0;

     label2:
        return;
    }

    public final void removeFields(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r2;
        java.util.Iterator it;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        it = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        field = (org.apache.lucene.document.Fieldable) $r1;
        $r2 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        interfaceinvoke it.<java.util.Iterator: void remove()>();

     label1:
        goto label0;

     label2:
        return;
    }

    public final org.apache.lucene.document.Field getField(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r3;
        int i, $i0;
        org.apache.lucene.document.Field field;
        java.util.List $r0, $r1;
        java.lang.Object $r2;
        boolean $z0;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        i = 0;

     label0:
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Field) $r2;
        $r3 = virtualinvoke field.<org.apache.lucene.document.Field: java.lang.String name()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        return field;

     label1:
        i = i + 1;
        goto label0;

     label2:
        return null;
    }

    public org.apache.lucene.document.Fieldable getFieldable(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r3;
        int i, $i0;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0, $r1;
        java.lang.Object $r2;
        boolean $z0;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        i = 0;

     label0:
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r2;
        $r3 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        return field;

     label1:
        i = i + 1;
        goto label0;

     label2:
        return null;
    }

    public final java.lang.String get(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r3;
        int i, $i0;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0, $r1;
        java.lang.Object $r2;
        boolean $z0;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        i = 0;

     label0:
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r2;
        $r3 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: boolean isBinary()>();
        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String stringValue()>();
        return $r3;

     label1:
        i = i + 1;
        goto label0;

     label2:
        return null;
    }

    public final java.util.Enumeration fields()
    {
        org.apache.lucene.document.Document this;
        org.apache.lucene.document.Document$1 tmp$551582353;
        java.util.Enumeration tmp;

        this := @this: org.apache.lucene.document.Document;
        tmp$551582353 = new org.apache.lucene.document.Document$1;
        specialinvoke tmp$551582353.<org.apache.lucene.document.Document$1: void <init>(org.apache.lucene.document.Document)>(this);
        tmp = (java.util.Enumeration) tmp$551582353;
        return tmp;
    }

    public final java.util.List getFields()
    {
        org.apache.lucene.document.Document this;
        java.util.List $r0;

        this := @this: org.apache.lucene.document.Document;
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        return $r0;
    }

    public final org.apache.lucene.document.Field[] getFields(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r4;
        java.util.ArrayList $r0, result;
        int i, $i0, $i1;
        org.apache.lucene.document.Field field;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        org.apache.lucene.document.Field[] $r5, $r6;
        java.lang.Object[] $r7;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        result = $r0;
        i = 0;

     label0:
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r2 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Field) $r3;
        $r4 = virtualinvoke field.<org.apache.lucene.document.Field: java.lang.String name()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>(field);

     label1:
        i = i + 1;
        goto label0;

     label2:
        $i1 = interfaceinvoke result.<java.util.List: int size()>();
        if $i1 != 0 goto label3;

        $r5 = <org.apache.lucene.document.Document: org.apache.lucene.document.Field[] NO_FIELDS>;
        return $r5;

     label3:
        $i0 = interfaceinvoke result.<java.util.List: int size()>();
        $r6 = newarray (org.apache.lucene.document.Field)[$i0];
        $r7 = interfaceinvoke result.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
        $r5 = (org.apache.lucene.document.Field[]) $r7;
        $r5 = (org.apache.lucene.document.Field[]) $r5;
        return $r5;
    }

    public org.apache.lucene.document.Fieldable[] getFieldables(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r4;
        java.util.ArrayList $r0, result;
        int i, $i0, $i1;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        org.apache.lucene.document.Fieldable[] $r5, $r6;
        java.lang.Object[] $r7;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        result = $r0;
        i = 0;

     label0:
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r2 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r3;
        $r4 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>(field);

     label1:
        i = i + 1;
        goto label0;

     label2:
        $i1 = interfaceinvoke result.<java.util.List: int size()>();
        if $i1 != 0 goto label3;

        $r5 = <org.apache.lucene.document.Document: org.apache.lucene.document.Fieldable[] NO_FIELDABLES>;
        return $r5;

     label3:
        $i0 = interfaceinvoke result.<java.util.List: int size()>();
        $r6 = newarray (org.apache.lucene.document.Fieldable)[$i0];
        $r7 = interfaceinvoke result.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
        $r5 = (org.apache.lucene.document.Fieldable[]) $r7;
        $r5 = (org.apache.lucene.document.Fieldable[]) $r5;
        return $r5;
    }

    public final java.lang.String[] getValues(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r4, $r5;
        java.util.ArrayList $r0, result;
        int i, $i0, $i1;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.String[] $r6, $r7;
        java.lang.Object[] $r8;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        result = $r0;
        i = 0;

     label0:
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r2 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r3;
        $r4 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: boolean isBinary()>();
        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String stringValue()>();
        interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        i = i + 1;
        goto label0;

     label2:
        $i1 = interfaceinvoke result.<java.util.List: int size()>();
        if $i1 != 0 goto label3;

        $r6 = <org.apache.lucene.document.Document: java.lang.String[] NO_STRINGS>;
        return $r6;

     label3:
        $i0 = interfaceinvoke result.<java.util.List: int size()>();
        $r7 = newarray (java.lang.String)[$i0];
        $r8 = interfaceinvoke result.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);
        $r6 = (java.lang.String[]) $r8;
        $r6 = (java.lang.String[]) $r6;
        return $r6;
    }

    public final byte[][] getBinaryValues(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r4;
        java.util.ArrayList $r0, result;
        int i, $i0, $i1;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        byte[] $r5;
        byte[][] $r6, $r7;
        java.lang.Object[] $r8;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        result = $r0;
        i = 0;

     label0:
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r2 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r3;
        $r4 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: boolean isBinary()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: byte[] binaryValue()>();
        interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        i = i + 1;
        goto label0;

     label2:
        $i1 = interfaceinvoke result.<java.util.List: int size()>();
        if $i1 != 0 goto label3;

        $r6 = <org.apache.lucene.document.Document: byte[][] NO_BYTES>;
        return $r6;

     label3:
        $i0 = interfaceinvoke result.<java.util.List: int size()>();
        $r7 = newarray (byte[])[$i0];
        $r8 = interfaceinvoke result.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);
        $r6 = (byte[][]) $r8;
        $r6 = (byte[][]) $r6;
        return $r6;
    }

    public final byte[] getBinaryValue(java.lang.String)
    {
        org.apache.lucene.document.Document this;
        java.lang.String name, $r3;
        int i, $i0;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r0, $r1;
        java.lang.Object $r2;
        boolean $z0;
        byte[] $r4;

        this := @this: org.apache.lucene.document.Document;
        name := @parameter0: java.lang.String;
        i = 0;

     label0:
        $r0 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r2;
        $r3 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: java.lang.String name()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: boolean isBinary()>();
        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke field.<org.apache.lucene.document.Fieldable: byte[] binaryValue()>();
        return $r4;

     label1:
        i = i + 1;
        goto label0;

     label2:
        return null;
    }

    public final java.lang.String toString()
    {
        org.apache.lucene.document.Document this;
        java.lang.StringBuffer $r0, buffer;
        int i, $i0;
        org.apache.lucene.document.Fieldable field;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;

        this := @this: org.apache.lucene.document.Document;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        buffer = $r0;
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Document<");
        i = 0;

     label0:
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r2 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        field = (org.apache.lucene.document.Fieldable) $r3;
        $r4 = virtualinvoke field.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r1 = this.<org.apache.lucene.document.Document: java.util.List fields>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i0 = $i0 - 1;
        if i == $i0 goto label1;

        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label1:
        i = i + 1;
        goto label0;

     label2:
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");
        $r5 = virtualinvoke buffer.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r5;
    }

    static void <clinit>()
    {
        org.apache.lucene.document.Field[] $r0;
        org.apache.lucene.document.Fieldable[] $r1;
        java.lang.String[] $r2;
        byte[][] $r3;

        $r0 = newarray (org.apache.lucene.document.Field)[0];
        <org.apache.lucene.document.Document: org.apache.lucene.document.Field[] NO_FIELDS> = $r0;
        $r1 = newarray (org.apache.lucene.document.Fieldable)[0];
        <org.apache.lucene.document.Document: org.apache.lucene.document.Fieldable[] NO_FIELDABLES> = $r1;
        $r2 = newarray (java.lang.String)[0];
        <org.apache.lucene.document.Document: java.lang.String[] NO_STRINGS> = $r2;
        $r3 = newarray (byte[])[0];
        <org.apache.lucene.document.Document: byte[][] NO_BYTES> = $r3;
        return;
    }
}
