public class org.apache.lucene.search.TermQuery extends org.apache.lucene.search.Query
{
    private org.apache.lucene.index.Term term;

    public void <init>(org.apache.lucene.index.Term)
    {
        org.apache.lucene.search.TermQuery this;
        org.apache.lucene.index.Term t;

        this := @this: org.apache.lucene.search.TermQuery;
        t := @parameter0: org.apache.lucene.index.Term;
        specialinvoke this.<org.apache.lucene.search.Query: void <init>()>();
        this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term> = t;
        return;
    }

    public org.apache.lucene.index.Term getTerm()
    {
        org.apache.lucene.search.TermQuery this;
        org.apache.lucene.index.Term $r0;

        this := @this: org.apache.lucene.search.TermQuery;
        $r0 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        return $r0;
    }

    protected org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher) throws java.io.IOException
    {
        org.apache.lucene.search.TermQuery this;
        org.apache.lucene.search.Searcher searcher;
        org.apache.lucene.search.TermQuery$TermWeight $r0;

        this := @this: org.apache.lucene.search.TermQuery;
        searcher := @parameter0: org.apache.lucene.search.Searcher;
        $r0 = new org.apache.lucene.search.TermQuery$TermWeight;
        specialinvoke $r0.<org.apache.lucene.search.TermQuery$TermWeight: void <init>(org.apache.lucene.search.TermQuery,org.apache.lucene.search.Searcher)>(this, searcher);
        return $r0;
    }

    public void extractTerms(java.util.Set)
    {
        org.apache.lucene.search.TermQuery this;
        java.util.Set terms;
        org.apache.lucene.index.Term $r0;

        this := @this: org.apache.lucene.search.TermQuery;
        terms := @parameter0: java.util.Set;
        $r0 = virtualinvoke this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term getTerm()>();
        interfaceinvoke terms.<java.util.Set: boolean add(java.lang.Object)>($r0);
        return;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.search.TermQuery this;
        java.lang.String field, $r2, $r4;
        java.lang.StringBuffer $r0, buffer;
        org.apache.lucene.index.Term $r1, $r3;
        boolean $z0;
        float $f0;

        this := @this: org.apache.lucene.search.TermQuery;
        field := @parameter0: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        buffer = $r0;
        $r1 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $r2 = virtualinvoke $r1.<org.apache.lucene.index.Term: java.lang.String field()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(field);
        if $z0 != 0 goto label0;

        $r3 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String field()>();
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

     label0:
        $r3 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $f0 = virtualinvoke this.<org.apache.lucene.search.TermQuery: float getBoost()>();
        $r4 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r2 = virtualinvoke buffer.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.TermQuery this, other;
        java.lang.Object o;
        boolean $z0;
        float $f0, $f1;
        byte $b0;
        org.apache.lucene.index.Term $r0, $r1;

        this := @this: org.apache.lucene.search.TermQuery;
        o := @parameter0: java.lang.Object;
        $z0 = o instanceof org.apache.lucene.search.TermQuery;
        if $z0 != 0 goto label0;

        return 0;

     label0:
        other = (org.apache.lucene.search.TermQuery) o;
        $f0 = virtualinvoke this.<org.apache.lucene.search.TermQuery: float getBoost()>();
        $f1 = virtualinvoke other.<org.apache.lucene.search.TermQuery: float getBoost()>();
        $b0 = $f0 cmpl $f1;
        if $b0 != 0 goto label1;

        $r0 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $r1 = other.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $z0 = virtualinvoke $r0.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        org.apache.lucene.search.TermQuery this;
        float $f0;
        int $i0, $i1;
        org.apache.lucene.index.Term $r0;

        this := @this: org.apache.lucene.search.TermQuery;
        $f0 = virtualinvoke this.<org.apache.lucene.search.TermQuery: float getBoost()>();
        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);
        $r0 = this.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        $i1 = virtualinvoke $r0.<org.apache.lucene.index.Term: int hashCode()>();
        $i0 = $i0 ^ $i1;
        return $i0;
    }

    static org.apache.lucene.index.Term access$000(org.apache.lucene.search.TermQuery)
    {
        org.apache.lucene.search.TermQuery x0;
        org.apache.lucene.index.Term $r0;

        x0 := @parameter0: org.apache.lucene.search.TermQuery;
        $r0 = x0.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term term>;
        return $r0;
    }
}
