public abstract class org.apache.lucene.util.Parameter extends java.lang.Object implements java.io.Serializable
{
    static java.util.Map allParameters;
    private java.lang.String name;

    private void <init>()
    {
        org.apache.lucene.util.Parameter this;

        this := @this: org.apache.lucene.util.Parameter;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    protected void <init>(java.lang.String)
    {
        org.apache.lucene.util.Parameter this;
        java.lang.String name, key, $r3;
        java.lang.StringBuffer $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        this := @this: org.apache.lucene.util.Parameter;
        name := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.lucene.util.Parameter: java.lang.String name> = name;
        key = specialinvoke this.<org.apache.lucene.util.Parameter: java.lang.String makeKey(java.lang.String)>(name);
        $r1 = <org.apache.lucene.util.Parameter: java.util.Map allParameters>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(key);
        if $z0 == 0 goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Parameter name ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(key);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" already used!");
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);
        throw $r2;

     label0:
        $r1 = <org.apache.lucene.util.Parameter: java.util.Map allParameters>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, this);
        return;
    }

    private java.lang.String makeKey(java.lang.String)
    {
        org.apache.lucene.util.Parameter this;
        java.lang.String name, $r2;
        java.lang.StringBuffer $r0;
        java.lang.Class $r1;

        this := @this: org.apache.lucene.util.Parameter;
        name := @parameter0: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(name);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.util.Parameter this;
        java.lang.String $r0;

        this := @this: org.apache.lucene.util.Parameter;
        $r0 = this.<org.apache.lucene.util.Parameter: java.lang.String name>;
        return $r0;
    }

    protected java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        org.apache.lucene.util.Parameter this;
        java.util.Map $r0;
        java.lang.Object par;
        java.lang.String $r1, $r2, $r5;
        java.io.StreamCorruptedException $r3;
        java.lang.StringBuffer $r4;

        this := @this: org.apache.lucene.util.Parameter;
        $r0 = <org.apache.lucene.util.Parameter: java.util.Map allParameters>;
        $r1 = this.<org.apache.lucene.util.Parameter: java.lang.String name>;
        $r2 = specialinvoke this.<org.apache.lucene.util.Parameter: java.lang.String makeKey(java.lang.String)>($r1);
        par = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);
        if par != null goto label0;

        $r3 = new java.io.StreamCorruptedException;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown parameter value: ");
        $r5 = this.<org.apache.lucene.util.Parameter: java.lang.String name>;
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r1);
        throw $r3;

     label0:
        return par;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <org.apache.lucene.util.Parameter: java.util.Map allParameters> = $r0;
        return;
    }
}
