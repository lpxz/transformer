public class org.apache.lucene.queryParser.ParseException extends java.lang.Exception
{
    protected boolean specialConstructor;
    public org.apache.lucene.queryParser.Token currentToken;
    public int[][] expectedTokenSequences;
    public java.lang.String[] tokenImage;
    protected java.lang.String eol;

    public void <init>(org.apache.lucene.queryParser.Token, int[][], java.lang.String[])
    {
        org.apache.lucene.queryParser.ParseException this;
        org.apache.lucene.queryParser.Token currentTokenVal;
        int[][] expectedTokenSequencesVal;
        java.lang.String[] tokenImageVal;
        java.lang.String $r0;

        this := @this: org.apache.lucene.queryParser.ParseException;
        currentTokenVal := @parameter0: org.apache.lucene.queryParser.Token;
        expectedTokenSequencesVal := @parameter1: int[][];
        tokenImageVal := @parameter2: java.lang.String[];
        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>("");
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");
        this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol> = $r0;
        this.<org.apache.lucene.queryParser.ParseException: boolean specialConstructor> = 1;
        this.<org.apache.lucene.queryParser.ParseException: org.apache.lucene.queryParser.Token currentToken> = currentTokenVal;
        this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences> = expectedTokenSequencesVal;
        this.<org.apache.lucene.queryParser.ParseException: java.lang.String[] tokenImage> = tokenImageVal;
        return;
    }

    public void <init>()
    {
        org.apache.lucene.queryParser.ParseException this;
        java.lang.String $r0;

        this := @this: org.apache.lucene.queryParser.ParseException;
        specialinvoke this.<java.lang.Exception: void <init>()>();
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");
        this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol> = $r0;
        this.<org.apache.lucene.queryParser.ParseException: boolean specialConstructor> = 0;
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.lucene.queryParser.ParseException this;
        java.lang.String message, $r0;

        this := @this: org.apache.lucene.queryParser.ParseException;
        message := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");
        this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol> = $r0;
        this.<org.apache.lucene.queryParser.ParseException: boolean specialConstructor> = 0;
        return;
    }

    public java.lang.String getMessage()
    {
        org.apache.lucene.queryParser.ParseException this;
        java.lang.StringBuffer expected, $r1;
        int maxSize, i, j, $i0, $i1, $i2;
        java.lang.String retval, $r0, $r9, $r11;
        org.apache.lucene.queryParser.Token tok, $r10, $r12;
        boolean $z0;
        int[][] $r2, $r4, $r7;
        int[] $r3, $r5, $r8;
        java.lang.String[] $r6;
        long tid_getMessage;
        java.lang.Thread thread_getMessage;

        this := @this: org.apache.lucene.queryParser.ParseException;
        thread_getMessage = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMessage = virtualinvoke thread_getMessage.<java.lang.Thread: long getId()>();
        $z0 = this.<org.apache.lucene.queryParser.ParseException: boolean specialConstructor>;
        if $z0 != 0 goto label0;

        $r0 = specialinvoke this.<java.lang.Exception: java.lang.String getMessage()>();
        return $r0;

     label0:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        expected = $r1;
        maxSize = 0;
        i = 0;

     label1:
        $r2 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        $i0 = lengthof $r2;
        if i >= $i0 goto label6;

        $r2 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r2, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 106, i, $r3);
        $r3 = $r2[i];
        $i0 = lengthof $r3;
        if maxSize >= $i0 goto label2;

        $r4 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r4, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 107, i, $r5);
        $r5 = $r4[i];
        maxSize = lengthof $r5;

     label2:
        j = 0;

     label3:
        $r2 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r2, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 109, i, $r3);
        $r3 = $r2[i];
        $i0 = lengthof $r3;
        if j >= $i0 goto label4;

        $r6 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String[] tokenImage>;
        $r7 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r7, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 110, i, $r8);
        $r8 = $r7[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r8, 22, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 110, j, $i1);
        $i1 = $r8[j];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r6, 10, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 110, $i1, $r9);
        $r9 = $r6[$i1];
        $r1 = virtualinvoke expected.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);
        j = j + 1;
        goto label3;

     label4:
        $r4 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r4, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 112, i, $r5);
        $r5 = $r4[i];
        $r2 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r2, 40, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 112, i, $r3);
        $r3 = $r2[i];
        $i0 = lengthof $r3;
        $i0 = $i0 - 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r5, 22, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 112, $i0, $i2);
        $i2 = $r5[$i0];
        if $i2 == 0 goto label5;

        virtualinvoke expected.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label5:
        $r9 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol>;
        $r1 = virtualinvoke expected.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");
        i = i + 1;
        goto label1;

     label6:
        retval = "Encountered \"";
        $r10 = this.<org.apache.lucene.queryParser.ParseException: org.apache.lucene.queryParser.Token currentToken>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r10, 128, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 118, tok);
        tok = $r10.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        i = 0;

     label7:
        if i >= maxSize goto label10;

        if i == 0 goto label8;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label8:
        $i2 = tok.<org.apache.lucene.queryParser.Token: int kind>;
        if $i2 != 0 goto label9;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r6 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String[] tokenImage>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r6, 10, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 122, 0, $r9);
        $r9 = $r6[0];
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        goto label10;

     label9:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r6 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String[] tokenImage>;
        $i1 = tok.<org.apache.lucene.queryParser.Token: int kind>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r6, 10, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 125, $i1, $r9);
        $r9 = $r6[$i1];
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(tok, 120, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 127, $r11);
        $r11 = tok.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r9 = virtualinvoke this.<org.apache.lucene.queryParser.ParseException: java.lang.String add_escapes(java.lang.String)>($r11);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(tok, 128, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 129, tok);
        tok = tok.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        i = i + 1;
        goto label7;

     label10:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" at line ");
        $r12 = this.<org.apache.lucene.queryParser.ParseException: org.apache.lucene.queryParser.Token currentToken>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r12, 128, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 131, $r12);
        $r12 = $r12.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>($r12, 142, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 131, $i0);
        $i0 = $r12.<org.apache.lucene.queryParser.Token: int beginLine>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", column ");
        $r12 = this.<org.apache.lucene.queryParser.ParseException: org.apache.lucene.queryParser.Token currentToken>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r12, 128, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 131, $r12);
        $r12 = $r12.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>($r12, 143, tid_getMessage, "org.apache.lucene.queryParser.ParseException", 131, $i0);
        $i0 = $r12.<org.apache.lucene.queryParser.Token: int beginColumn>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");
        $r9 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        $r4 = this.<org.apache.lucene.queryParser.ParseException: int[][] expectedTokenSequences>;
        $i2 = lengthof $r4;
        if $i2 != 1 goto label11;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Was expecting:");
        $r9 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        goto label12;

     label11:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Was expecting one of:");
        $r9 = this.<org.apache.lucene.queryParser.ParseException: java.lang.String eol>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label12:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(retval);
        $r9 = virtualinvoke expected.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        retval = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return retval;
    }

    protected java.lang.String add_escapes(java.lang.String)
    {
        org.apache.lucene.queryParser.ParseException this;
        java.lang.String str, s, $r1, $r3, $r4;
        java.lang.StringBuffer $r0, retval, $r2;
        int i, $i0, $i2, $i3;
        char ch, $c1;

        this := @this: org.apache.lucene.queryParser.ParseException;
        str := @parameter0: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        retval = $r0;
        i = 0;

     label0:
        $i0 = virtualinvoke str.<java.lang.String: int length()>();
        if i >= $i0 goto label14;

        $c1 = virtualinvoke str.<java.lang.String: char charAt(int)>(i);
        lookupswitch($c1)
        {
            case 0: goto label1;
            case 8: goto label2;
            case 9: goto label3;
            case 10: goto label4;
            case 12: goto label5;
            case 13: goto label6;
            case 34: goto label7;
            case 39: goto label8;
            case 92: goto label9;
            default: goto label10;
        };

     label1:
        goto label13;

     label2:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");
        goto label13;

     label3:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");
        goto label13;

     label4:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");
        goto label13;

     label5:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");
        goto label13;

     label6:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");
        goto label13;

     label7:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");
        goto label13;

     label8:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");
        goto label13;

     label9:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");
        goto label13;

     label10:
        $c1 = virtualinvoke str.<java.lang.String: char charAt(int)>(i);
        ch = $c1;
        if $c1 < 32 goto label11;

        if ch <= 126 goto label12;

     label11:
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0000");
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(ch, 16);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        s = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");
        $i2 = virtualinvoke s.<java.lang.String: int length()>();
        $i2 = $i2 - 4;
        $i3 = virtualinvoke s.<java.lang.String: int length()>();
        $r3 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        goto label13;

     label12:
        virtualinvoke retval.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(ch);

     label13:
        i = i + 1;
        goto label0;

     label14:
        $r4 = virtualinvoke retval.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }
}
