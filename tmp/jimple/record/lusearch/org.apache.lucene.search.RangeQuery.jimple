public class org.apache.lucene.search.RangeQuery extends org.apache.lucene.search.Query
{
    private org.apache.lucene.index.Term lowerTerm;
    private org.apache.lucene.index.Term upperTerm;
    private boolean inclusive;
    private java.text.Collator collator;

    public void <init>(org.apache.lucene.index.Term, org.apache.lucene.index.Term, boolean)
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term lowerTerm, upperTerm, $r3;
        boolean inclusive;
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1, $r2, $r4;

        this := @this: org.apache.lucene.search.RangeQuery;
        lowerTerm := @parameter0: org.apache.lucene.index.Term;
        upperTerm := @parameter1: org.apache.lucene.index.Term;
        inclusive := @parameter2: boolean;
        specialinvoke this.<org.apache.lucene.search.Query: void <init>()>();
        if lowerTerm != null goto label0;

        if upperTerm != null goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one term must be non-null");
        throw $r0;

     label0:
        if lowerTerm == null goto label1;

        if upperTerm == null goto label1;

        $r1 = virtualinvoke lowerTerm.<org.apache.lucene.index.Term: java.lang.String field()>();
        $r2 = virtualinvoke upperTerm.<org.apache.lucene.index.Term: java.lang.String field()>();
        if $r1 == $r2 goto label1;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both terms must be for the same field");
        throw $r0;

     label1:
        if lowerTerm == null goto label2;

        this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm> = lowerTerm;
        goto label3;

     label2:
        $r3 = new org.apache.lucene.index.Term;
        $r4 = virtualinvoke upperTerm.<org.apache.lucene.index.Term: java.lang.String field()>();
        specialinvoke $r3.<org.apache.lucene.index.Term: void <init>(java.lang.String)>($r4);
        this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm> = $r3;

     label3:
        this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm> = upperTerm;
        this.<org.apache.lucene.search.RangeQuery: boolean inclusive> = inclusive;
        return;
    }

    public void <init>(org.apache.lucene.index.Term, org.apache.lucene.index.Term, boolean, java.text.Collator)
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term lowerTerm, upperTerm;
        boolean inclusive;
        java.text.Collator collator;

        this := @this: org.apache.lucene.search.RangeQuery;
        lowerTerm := @parameter0: org.apache.lucene.index.Term;
        upperTerm := @parameter1: org.apache.lucene.index.Term;
        inclusive := @parameter2: boolean;
        collator := @parameter3: java.text.Collator;
        specialinvoke this.<org.apache.lucene.search.RangeQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.index.Term,boolean)>(lowerTerm, upperTerm, inclusive);
        this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator> = collator;
        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.IndexReader reader;
        org.apache.lucene.search.BooleanQuery $r0, query;
        java.lang.String testField, lowerTermText, upperTermText, $r4, $r5;
        org.apache.lucene.index.TermEnum enumerator;
        org.apache.lucene.index.Term term, $r2, $r3;
        java.lang.Throwable l8, l10, $r6, $r7;
        boolean checkLower, $z0;
        int compare, $i0;
        java.text.Collator $r1;

        this := @this: org.apache.lucene.search.RangeQuery;
        reader := @parameter0: org.apache.lucene.index.IndexReader;
        $r0 = new org.apache.lucene.search.BooleanQuery;
        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>(1);
        query = $r0;
        testField = virtualinvoke this.<org.apache.lucene.search.RangeQuery: java.lang.String getField()>();
        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        if $r1 == null goto label15;

        $r2 = new org.apache.lucene.index.Term;
        specialinvoke $r2.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(testField, "");
        enumerator = virtualinvoke reader.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermEnum terms(org.apache.lucene.index.Term)>($r2);
        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r3 == null goto label0;

        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        goto label1;

     label0:
        $r4 = null;

     label1:
        lowerTermText = $r4;
        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r3 == null goto label2;

        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        goto label3;

     label2:
        $r4 = null;

     label3:
        upperTermText = $r4;

     label4:
        term = virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();
        if term == null goto label9;

        $r4 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String field()>();
        if $r4 != testField goto label9;

        if lowerTermText == null goto label6;

        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 == 0 goto label5;

        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $r5 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        $i0 = virtualinvoke $r1.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, lowerTermText);
        if $i0 < 0 goto label9;

        goto label6;

     label5:
        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $r5 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        $i0 = virtualinvoke $r1.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, lowerTermText);
        if $i0 <= 0 goto label9;

     label6:
        if upperTermText == null goto label8;

        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 == 0 goto label7;

        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $r5 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        $i0 = virtualinvoke $r1.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, upperTermText);
        if $i0 > 0 goto label9;

        goto label8;

     label7:
        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $r5 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        $i0 = virtualinvoke $r1.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r5, upperTermText);
        if $i0 >= 0 goto label9;

     label8:
        specialinvoke this.<org.apache.lucene.search.RangeQuery: void addTermToQuery(org.apache.lucene.index.Term,org.apache.lucene.search.BooleanQuery)>(term, query);

     label9:
        $z0 = virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: boolean next()>();
        if $z0 != 0 goto label4;

        goto label27;

     label10:
        goto label14;

     label11:
        $r6 := @caughtexception;

     label12:
        l8 = $r6;
        goto label28;

     label13:
        throw l8;

     label14:
        goto label26;

     label15:
        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        enumerator = virtualinvoke reader.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermEnum terms(org.apache.lucene.index.Term)>($r2);

     label16:
        checkLower = 0;
        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 != 0 goto label17;

        checkLower = 1;

     label17:
        term = virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();
        if term == null goto label21;

        $r4 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String field()>();
        if $r4 != testField goto label21;

        if checkLower == 0 goto label18;

        $r4 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $r5 = virtualinvoke $r2.<org.apache.lucene.index.Term: java.lang.String text()>();
        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);
        if $i0 <= 0 goto label20;

     label18:
        checkLower = 0;
        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r3 == null goto label19;

        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        $r5 = virtualinvoke term.<org.apache.lucene.index.Term: java.lang.String text()>();
        compare = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r5);
        if compare < 0 goto label21;

        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 != 0 goto label19;

        if compare != 0 goto label19;

        goto label21;

     label19:
        specialinvoke this.<org.apache.lucene.search.RangeQuery: void addTermToQuery(org.apache.lucene.index.Term,org.apache.lucene.search.BooleanQuery)>(term, query);

     label20:
        $z0 = virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: boolean next()>();
        if $z0 != 0 goto label17;

     label21:
        goto label29;

     label22:
        goto label26;

     label23:
        $r7 := @caughtexception;

     label24:
        l10 = $r7;
        goto label30;

     label25:
        throw l10;

     label26:
        return query;

     label27:
        virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: void close()>();
        goto label10;

     label28:
        virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: void close()>();
        goto label13;

     label29:
        virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: void close()>();
        goto label22;

     label30:
        virtualinvoke enumerator.<org.apache.lucene.index.TermEnum: void close()>();
        goto label25;

        catch java.lang.Throwable from label4 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label16 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void addTermToQuery(org.apache.lucene.index.Term, org.apache.lucene.search.BooleanQuery)
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term term;
        org.apache.lucene.search.BooleanQuery query;
        org.apache.lucene.search.TermQuery $r0, tq;
        float $f0;
        org.apache.lucene.search.BooleanClause$Occur $r1;

        this := @this: org.apache.lucene.search.RangeQuery;
        term := @parameter0: org.apache.lucene.index.Term;
        query := @parameter1: org.apache.lucene.search.BooleanQuery;
        $r0 = new org.apache.lucene.search.TermQuery;
        specialinvoke $r0.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>(term);
        tq = $r0;
        $f0 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: float getBoost()>();
        virtualinvoke tq.<org.apache.lucene.search.TermQuery: void setBoost(float)>($f0);
        $r1 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;
        virtualinvoke query.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(tq, $r1);
        return;
    }

    public java.lang.String getField()
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term $r0;
        java.lang.String $r1;

        this := @this: org.apache.lucene.search.RangeQuery;
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $r1 = virtualinvoke $r0.<org.apache.lucene.index.Term: java.lang.String field()>();
        goto label1;

     label0:
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $r1 = virtualinvoke $r0.<org.apache.lucene.index.Term: java.lang.String field()>();

     label1:
        return $r1;
    }

    public org.apache.lucene.index.Term getLowerTerm()
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term $r0;

        this := @this: org.apache.lucene.search.RangeQuery;
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        return $r0;
    }

    public org.apache.lucene.index.Term getUpperTerm()
    {
        org.apache.lucene.search.RangeQuery this;
        org.apache.lucene.index.Term $r0;

        this := @this: org.apache.lucene.search.RangeQuery;
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        return $r0;
    }

    public boolean isInclusive()
    {
        org.apache.lucene.search.RangeQuery this;
        boolean $z0;

        this := @this: org.apache.lucene.search.RangeQuery;
        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        return $z0;
    }

    public java.text.Collator getCollator()
    {
        org.apache.lucene.search.RangeQuery this;
        java.text.Collator $r0;

        this := @this: org.apache.lucene.search.RangeQuery;
        $r0 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        return $r0;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.search.RangeQuery this;
        java.lang.String field, $r1, $r2;
        java.lang.StringBuffer $r0, buffer;
        boolean $z0, $z1;
        org.apache.lucene.index.Term $r3;
        float $f0;

        this := @this: org.apache.lucene.search.RangeQuery;
        field := @parameter0: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        buffer = $r0;
        $r1 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: java.lang.String getField()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(field);
        if $z0 != 0 goto label0;

        $r2 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: java.lang.String getField()>();
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

     label0:
        $z1 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z1 == 0 goto label1;

        $r2 = "[";
        goto label2;

     label1:
        $r2 = "{";

     label2:
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r3 == null goto label3;

        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $r2 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        goto label4;

     label3:
        $r2 = "null";

     label4:
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" TO ");
        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r3 == null goto label5;

        $r3 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $r2 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String text()>();
        goto label6;

     label5:
        $r2 = "null";

     label6:
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $z1 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z1 == 0 goto label7;

        $r2 = "]";
        goto label8;

     label7:
        $r2 = "}";

     label8:
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $f0 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: float getBoost()>();
        $r2 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);
        virtualinvoke buffer.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke buffer.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.RangeQuery this, other;
        java.lang.Object o;
        boolean $z0, $z1;
        float $f0, $f1;
        byte $b0;
        java.text.Collator $r0, $r1;
        org.apache.lucene.index.Term $r2, $r3;

        this := @this: org.apache.lucene.search.RangeQuery;
        o := @parameter0: java.lang.Object;
        if this != o goto label0;

        return 1;

     label0:
        $z0 = o instanceof org.apache.lucene.search.RangeQuery;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        other = (org.apache.lucene.search.RangeQuery) o;
        $f0 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: float getBoost()>();
        $f1 = virtualinvoke other.<org.apache.lucene.search.RangeQuery: float getBoost()>();
        $b0 = $f0 cmpl $f1;
        if $b0 == 0 goto label2;

        return 0;

     label2:
        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        $z1 = other.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 == $z1 goto label3;

        return 0;

     label3:
        $r0 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        if $r0 == null goto label4;

        $r0 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $r1 = other.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $z0 = virtualinvoke $r0.<java.text.Collator: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r2 == null goto label5;

        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $r3 = other.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $z0 = virtualinvoke $r2.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r3);
        if $z0 != 0 goto label7;

        goto label6;

     label5:
        $r2 = other.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r2 == null goto label7;

     label6:
        return 0;

     label7:
        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r2 == null goto label8;

        $r2 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $r3 = other.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $z0 = virtualinvoke $r2.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r3);
        if $z0 != 0 goto label10;

        goto label9;

     label8:
        $r2 = other.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r2 == null goto label10;

     label9:
        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        org.apache.lucene.search.RangeQuery this;
        int h, $i0, $i1, $i2;
        float $f0;
        org.apache.lucene.index.Term $r0;
        boolean $z0;
        java.text.Collator $r1;

        this := @this: org.apache.lucene.search.RangeQuery;
        $f0 = virtualinvoke this.<org.apache.lucene.search.RangeQuery: float getBoost()>();
        h = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);
        $i0 = h;
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term lowerTerm>;
        $i1 = virtualinvoke $r0.<org.apache.lucene.index.Term: int hashCode()>();
        goto label1;

     label0:
        $i1 = 0;

     label1:
        h = $i0 ^ $i1;
        $i1 = h << 25;
        $i2 = h >>> 8;
        $i1 = $i1 | $i2;
        h = h ^ $i1;
        $i0 = h;
        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        if $r0 == null goto label2;

        $r0 = this.<org.apache.lucene.search.RangeQuery: org.apache.lucene.index.Term upperTerm>;
        $i1 = virtualinvoke $r0.<org.apache.lucene.index.Term: int hashCode()>();
        goto label3;

     label2:
        $i1 = 0;

     label3:
        h = $i0 ^ $i1;
        $i0 = h;
        $z0 = this.<org.apache.lucene.search.RangeQuery: boolean inclusive>;
        if $z0 == 0 goto label4;

        $i1 = 658696010;
        goto label5;

     label4:
        $i1 = 0;

     label5:
        h = $i0 ^ $i1;
        $i0 = h;
        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        if $r1 == null goto label6;

        $r1 = this.<org.apache.lucene.search.RangeQuery: java.text.Collator collator>;
        $i1 = virtualinvoke $r1.<java.text.Collator: int hashCode()>();
        goto label7;

     label6:
        $i1 = 0;

     label7:
        h = $i0 ^ $i1;
        return h;
    }
}
