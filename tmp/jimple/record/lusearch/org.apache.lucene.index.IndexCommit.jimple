public abstract class org.apache.lucene.index.IndexCommit extends java.lang.Object implements org.apache.lucene.index.IndexCommitPoint
{

    public void <init>()
    {
        org.apache.lucene.index.IndexCommit this;

        this := @this: org.apache.lucene.index.IndexCommit;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public abstract java.lang.String getSegmentsFileName();

    public abstract java.util.Collection getFileNames() throws java.io.IOException;

    public abstract org.apache.lucene.store.Directory getDirectory();

    public void delete()
    {
        org.apache.lucene.index.IndexCommit this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support this method.");
        throw $r0;
    }

    public boolean isDeleted()
    {
        org.apache.lucene.index.IndexCommit this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support this method.");
        throw $r0;
    }

    public boolean isOptimized()
    {
        org.apache.lucene.index.IndexCommit this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support this method.");
        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.index.IndexCommit this, otherCommit;
        java.lang.Object other;
        boolean $z0;
        org.apache.lucene.store.Directory $r0, $r1;
        long $l0, $l1;
        byte $b2;

        this := @this: org.apache.lucene.index.IndexCommit;
        other := @parameter0: java.lang.Object;
        $z0 = other instanceof org.apache.lucene.index.IndexCommit;
        if $z0 == 0 goto label2;

        otherCommit = (org.apache.lucene.index.IndexCommit) other;
        $r0 = virtualinvoke otherCommit.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();
        $r1 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();
        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label0;

        $l0 = virtualinvoke otherCommit.<org.apache.lucene.index.IndexCommit: long getVersion()>();
        $l1 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: long getVersion()>();
        $b2 = $l0 cmp $l1;
        if $b2 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.apache.lucene.index.IndexCommit this;
        org.apache.lucene.store.Directory $r0;
        int $i0, $i1;
        java.lang.String $r1;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();
        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();
        $r1 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();
        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        $i0 = $i0 + $i1;
        return $i0;
    }

    public long getVersion()
    {
        org.apache.lucene.index.IndexCommit this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support this method.");
        throw $r0;
    }

    public long getGeneration()
    {
        org.apache.lucene.index.IndexCommit this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support this method.");
        throw $r0;
    }

    public long getTimestamp() throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit this;
        org.apache.lucene.store.Directory $r0;
        java.lang.String $r1;
        long $l0;

        this := @this: org.apache.lucene.index.IndexCommit;
        $r0 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();
        $r1 = virtualinvoke this.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();
        $l0 = virtualinvoke $r0.<org.apache.lucene.store.Directory: long fileModified(java.lang.String)>($r1);
        return $l0;
    }
}
