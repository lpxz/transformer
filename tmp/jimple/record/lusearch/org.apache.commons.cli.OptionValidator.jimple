class org.apache.commons.cli.OptionValidator extends java.lang.Object
{

    void <init>()
    {
        org.apache.commons.cli.OptionValidator this;

        this := @this: org.apache.commons.cli.OptionValidator;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    static void validateOption(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String opt, $r2;
        char ch, $c2, $c3;
        java.lang.StringBuffer $r0;
        char[] chars;
        int i, $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        long tid_validateOption;
        java.lang.Thread thread_validateOption;

        opt := @parameter0: java.lang.String;
        thread_validateOption = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_validateOption = virtualinvoke thread_validateOption.<java.lang.Thread: long getId()>();
        if opt != null goto label0;

        return;

     label0:
        $i0 = virtualinvoke opt.<java.lang.String: int length()>();
        if $i0 != 1 goto label2;

        ch = virtualinvoke opt.<java.lang.String: char charAt(int)>(0);
        $z0 = staticinvoke <org.apache.commons.cli.OptionValidator: boolean isValidOpt(char)>(ch);
        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("illegal option value \'");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(ch);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);
        throw $r1;

     label1:
        goto label5;

     label2:
        chars = virtualinvoke opt.<java.lang.String: char[] toCharArray()>();
        i = 0;

     label3:
        $i1 = lengthof chars;
        if i >= $i1 goto label5;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,char)>(chars, 25, tid_validateOption, "org.apache.commons.cli.OptionValidator", 71, i, $c2);
        $c2 = chars[i];
        $z0 = staticinvoke <org.apache.commons.cli.OptionValidator: boolean isValidChar(char)>($c2);
        if $z0 != 0 goto label4;

        $r1 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("opt contains illegal character value \'");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,char)>(chars, 25, tid_validateOption, "org.apache.commons.cli.OptionValidator", 73, i, $c3);
        $c3 = chars[i];
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);
        throw $r1;

     label4:
        i = i + 1;
        goto label3;

     label5:
        return;
    }

    private static boolean isValidOpt(char)
    {
        char c;
        boolean $z0;

        c := @parameter0: char;
        $z0 = staticinvoke <org.apache.commons.cli.OptionValidator: boolean isValidChar(char)>(c);
        if $z0 != 0 goto label0;

        if c == 32 goto label0;

        if c == 63 goto label0;

        if c != 64 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isValidChar(char)
    {
        char c;
        boolean $z0;

        c := @parameter0: char;
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c);
        return $z0;
    }
}
