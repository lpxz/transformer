public class org.apache.lucene.queryParser.QueryParser extends java.lang.Object implements org.apache.lucene.queryParser.QueryParserConstants
{
    private static final int CONJ_NONE;
    private static final int CONJ_AND;
    private static final int CONJ_OR;
    private static final int MOD_NONE;
    private static final int MOD_NOT;
    private static final int MOD_REQ;
    public static final org.apache.lucene.queryParser.QueryParser$Operator AND_OPERATOR;
    public static final org.apache.lucene.queryParser.QueryParser$Operator OR_OPERATOR;
    private org.apache.lucene.queryParser.QueryParser$Operator operator;
    boolean lowercaseExpandedTerms;
    boolean useOldRangeQuery;
    boolean allowLeadingWildcard;
    boolean enablePositionIncrements;
    org.apache.lucene.analysis.Analyzer analyzer;
    java.lang.String field;
    int phraseSlop;
    float fuzzyMinSim;
    int fuzzyPrefixLength;
    java.util.Locale locale;
    org.apache.lucene.document.DateTools$Resolution dateResolution;
    java.util.Map fieldToDateResolution;
    java.text.Collator rangeCollator;
    public org.apache.lucene.queryParser.QueryParserTokenManager token_source;
    public org.apache.lucene.queryParser.Token token;
    public org.apache.lucene.queryParser.Token jj_nt;
    private int jj_ntk;
    private org.apache.lucene.queryParser.Token jj_scanpos;
    private org.apache.lucene.queryParser.Token jj_lastpos;
    private int jj_la;
    private int jj_gen;
    private final int[] jj_la1;
    private static int[] jj_la1_0;
    private static int[] jj_la1_1;
    private final org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns;
    private boolean jj_rescan;
    private int jj_gc;
    private final org.apache.lucene.queryParser.QueryParser$LookaheadSuccess jj_ls;
    private java.util.List jj_expentries;
    private int[] jj_expentry;
    private int jj_kind;
    private int[] jj_lasttokens;
    private int jj_endpos;

    public void <init>(java.lang.String, org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String f;
        org.apache.lucene.analysis.Analyzer a;
        org.apache.lucene.queryParser.FastCharStream $r0;
        java.io.StringReader $r1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        f := @parameter0: java.lang.String;
        a := @parameter1: org.apache.lucene.analysis.Analyzer;
        $r0 = new org.apache.lucene.queryParser.FastCharStream;
        $r1 = new java.io.StringReader;
        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>("");
        specialinvoke $r0.<org.apache.lucene.queryParser.FastCharStream: void <init>(java.io.Reader)>($r1);
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void <init>(org.apache.lucene.queryParser.CharStream)>($r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.analysis.Analyzer analyzer> = a;
        this.<org.apache.lucene.queryParser.QueryParser: java.lang.String field> = f;
        return;
    }

    public org.apache.lucene.search.Query parse(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String query, $r2, $r7, $r8;
        org.apache.lucene.queryParser.FastCharStream $r0;
        java.io.StringReader $r1;
        org.apache.lucene.search.Query res, $r3;
        org.apache.lucene.queryParser.ParseException tme, $r4, $r5;
        org.apache.lucene.search.BooleanQuery$TooManyClauses tmc, $r10;
        java.lang.StringBuffer $r6;
        org.apache.lucene.queryParser.TokenMgrError $r9, tme;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        query := @parameter0: java.lang.String;
        $r0 = new org.apache.lucene.queryParser.FastCharStream;
        $r1 = new java.io.StringReader;
        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(query);
        specialinvoke $r0.<org.apache.lucene.queryParser.FastCharStream: void <init>(java.io.Reader)>($r1);
        virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: void ReInit(org.apache.lucene.queryParser.CharStream)>($r0);

     label0:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: java.lang.String field>;
        res = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query TopLevelQuery(java.lang.String)>($r2);
        if res == null goto label1;

        $r3 = res;
        goto label2;

     label1:
        $r3 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanQuery newBooleanQuery(boolean)>(0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;
        tme = $r4;
        $r5 = new org.apache.lucene.queryParser.ParseException;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot parse \'");
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(query);
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");
        $r7 = virtualinvoke tme.<org.apache.lucene.queryParser.ParseException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>($r8);
        throw $r5;

     label4:
        $r9 := @caughtexception;
        tme = $r9;
        $r5 = new org.apache.lucene.queryParser.ParseException;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot parse \'");
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(query);
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");
        $r7 = virtualinvoke tme.<org.apache.lucene.queryParser.TokenMgrError: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>($r8);
        throw $r5;

     label5:
        $r10 := @caughtexception;
        tmc = $r10;
        $r5 = new org.apache.lucene.queryParser.ParseException;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot parse \'");
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(query);
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': too many boolean clauses");
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>($r8);
        throw $r5;

        catch org.apache.lucene.queryParser.ParseException from label0 to label2 with label3;
        catch org.apache.lucene.queryParser.TokenMgrError from label0 to label2 with label4;
        catch org.apache.lucene.search.BooleanQuery$TooManyClauses from label0 to label2 with label5;
    }

    public org.apache.lucene.analysis.Analyzer getAnalyzer()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.analysis.Analyzer $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.analysis.Analyzer analyzer>;
        return $r0;
    }

    public java.lang.String getField()
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: java.lang.String field>;
        return $r0;
    }

    public float getFuzzyMinSim()
    {
        org.apache.lucene.queryParser.QueryParser this;
        float $f0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $f0 = this.<org.apache.lucene.queryParser.QueryParser: float fuzzyMinSim>;
        return $f0;
    }

    public void setFuzzyMinSim(float)
    {
        org.apache.lucene.queryParser.QueryParser this;
        float fuzzyMinSim;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        fuzzyMinSim := @parameter0: float;
        this.<org.apache.lucene.queryParser.QueryParser: float fuzzyMinSim> = fuzzyMinSim;
        return;
    }

    public int getFuzzyPrefixLength()
    {
        org.apache.lucene.queryParser.QueryParser this;
        int $i0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int fuzzyPrefixLength>;
        return $i0;
    }

    public void setFuzzyPrefixLength(int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int fuzzyPrefixLength;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        fuzzyPrefixLength := @parameter0: int;
        this.<org.apache.lucene.queryParser.QueryParser: int fuzzyPrefixLength> = fuzzyPrefixLength;
        return;
    }

    public void setPhraseSlop(int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int phraseSlop;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        phraseSlop := @parameter0: int;
        this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop> = phraseSlop;
        return;
    }

    public int getPhraseSlop()
    {
        org.apache.lucene.queryParser.QueryParser this;
        int $i0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop>;
        return $i0;
    }

    public void setAllowLeadingWildcard(boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean allowLeadingWildcard;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        allowLeadingWildcard := @parameter0: boolean;
        this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard> = allowLeadingWildcard;
        return;
    }

    public boolean getAllowLeadingWildcard()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard>;
        return $z0;
    }

    public void setEnablePositionIncrements(boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean enable;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        enable := @parameter0: boolean;
        this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements> = enable;
        return;
    }

    public boolean getEnablePositionIncrements()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements>;
        return $z0;
    }

    public void setDefaultOperator(org.apache.lucene.queryParser.QueryParser$Operator)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.QueryParser$Operator op;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        op := @parameter0: org.apache.lucene.queryParser.QueryParser$Operator;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator> = op;
        return;
    }

    public org.apache.lucene.queryParser.QueryParser$Operator getDefaultOperator()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.QueryParser$Operator $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator>;
        return $r0;
    }

    public void setLowercaseExpandedTerms(boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean lowercaseExpandedTerms;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        lowercaseExpandedTerms := @parameter0: boolean;
        this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms> = lowercaseExpandedTerms;
        return;
    }

    public boolean getLowercaseExpandedTerms()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms>;
        return $z0;
    }

    public void setUseOldRangeQuery(boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean useOldRangeQuery;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        useOldRangeQuery := @parameter0: boolean;
        this.<org.apache.lucene.queryParser.QueryParser: boolean useOldRangeQuery> = useOldRangeQuery;
        return;
    }

    public boolean getUseOldRangeQuery()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean useOldRangeQuery>;
        return $z0;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.Locale locale;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        locale := @parameter0: java.util.Locale;
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale> = locale;
        return;
    }

    public java.util.Locale getLocale()
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.Locale $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale>;
        return $r0;
    }

    public void setDateResolution(org.apache.lucene.document.DateTools$Resolution)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.document.DateTools$Resolution dateResolution;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        dateResolution := @parameter0: org.apache.lucene.document.DateTools$Resolution;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution dateResolution> = dateResolution;
        return;
    }

    public void setDateResolution(java.lang.String, org.apache.lucene.document.DateTools$Resolution)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String fieldName;
        org.apache.lucene.document.DateTools$Resolution dateResolution;
        java.lang.IllegalArgumentException $r0;
        java.util.Map $r1;
        java.util.HashMap $r2;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        fieldName := @parameter0: java.lang.String;
        dateResolution := @parameter1: org.apache.lucene.document.DateTools$Resolution;
        if fieldName != null goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field cannot be null.");
        throw $r0;

     label0:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution>;
        if $r1 != null goto label1;

        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution> = $r2;

     label1:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fieldName, dateResolution);
        return;
    }

    public org.apache.lucene.document.DateTools$Resolution getDateResolution(java.lang.String)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String fieldName;
        org.apache.lucene.document.DateTools$Resolution resolution, $r2;
        java.lang.IllegalArgumentException $r0;
        java.util.Map $r1;
        java.lang.Object $r3;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        fieldName := @parameter0: java.lang.String;
        if fieldName != null goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field cannot be null.");
        throw $r0;

     label0:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution>;
        if $r1 != null goto label1;

        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution dateResolution>;
        return $r2;

     label1:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution>;
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(fieldName);
        resolution = (org.apache.lucene.document.DateTools$Resolution) $r3;
        if resolution != null goto label2;

        resolution = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution dateResolution>;

     label2:
        return resolution;
    }

    public void setRangeCollator(java.text.Collator)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.text.Collator rc;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        rc := @parameter0: java.text.Collator;
        this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator> = rc;
        return;
    }

    public java.text.Collator getRangeCollator()
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.text.Collator $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator>;
        return $r0;
    }

    protected void addClause(java.util.Vector, int, int, org.apache.lucene.search.Query)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.Vector clauses;
        int conj, mods;
        org.apache.lucene.search.Query q;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.Vector;
        conj := @parameter1: int;
        mods := @parameter2: int;
        q := @parameter3: org.apache.lucene.search.Query;
        virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: void addClause(java.util.List,int,int,org.apache.lucene.search.Query)>(clauses, conj, mods, q);
        return;
    }

    protected void addClause(java.util.List, int, int, org.apache.lucene.search.Query)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.List clauses;
        int conj, mods, $i0, $i1;
        org.apache.lucene.search.Query q;
        org.apache.lucene.search.BooleanClause c, $r5;
        boolean prohibited, required, $z0;
        org.apache.lucene.search.BooleanClause$Occur $r0, $r2;
        java.lang.Object $r1;
        org.apache.lucene.queryParser.QueryParser$Operator $r3, $r4;
        java.lang.RuntimeException $r6;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.List;
        conj := @parameter1: int;
        mods := @parameter2: int;
        q := @parameter3: org.apache.lucene.search.Query;
        $i0 = interfaceinvoke clauses.<java.util.List: int size()>();
        if $i0 <= 0 goto label0;

        if conj != 1 goto label0;

        $i1 = interfaceinvoke clauses.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        $r1 = interfaceinvoke clauses.<java.util.List: java.lang.Object get(int)>($i1);
        c = (org.apache.lucene.search.BooleanClause) $r1;
        $z0 = virtualinvoke c.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();
        if $z0 != 0 goto label0;

        $r2 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;
        virtualinvoke c.<org.apache.lucene.search.BooleanClause: void setOccur(org.apache.lucene.search.BooleanClause$Occur)>($r2);

     label0:
        $i0 = interfaceinvoke clauses.<java.util.List: int size()>();
        if $i0 <= 0 goto label1;

        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator>;
        $r4 = <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator AND_OPERATOR>;
        if $r3 != $r4 goto label1;

        if conj != 2 goto label1;

        $i1 = interfaceinvoke clauses.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        $r1 = interfaceinvoke clauses.<java.util.List: java.lang.Object get(int)>($i1);
        c = (org.apache.lucene.search.BooleanClause) $r1;
        $z0 = virtualinvoke c.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();
        if $z0 != 0 goto label1;

        $r2 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;
        virtualinvoke c.<org.apache.lucene.search.BooleanClause: void setOccur(org.apache.lucene.search.BooleanClause$Occur)>($r2);

     label1:
        if q != null goto label2;

        return;

     label2:
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator>;
        $r4 = <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator OR_OPERATOR>;
        if $r3 != $r4 goto label7;

        if mods != 10 goto label3;

        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        prohibited = $z0;
        if mods != 11 goto label5;

        $z0 = 1;
        goto label6;

     label5:
        $z0 = 0;

     label6:
        required = $z0;
        if conj != 1 goto label12;

        if prohibited != 0 goto label12;

        required = 1;
        goto label12;

     label7:
        if mods != 10 goto label8;

        $z0 = 1;
        goto label9;

     label8:
        $z0 = 0;

     label9:
        prohibited = $z0;
        if prohibited != 0 goto label10;

        if conj == 2 goto label10;

        $z0 = 1;
        goto label11;

     label10:
        $z0 = 0;

     label11:
        required = $z0;

     label12:
        if required == 0 goto label13;

        if prohibited != 0 goto label13;

        $r0 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;
        $r5 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanClause newBooleanClause(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(q, $r0);
        interfaceinvoke clauses.<java.util.List: boolean add(java.lang.Object)>($r5);
        goto label16;

     label13:
        if required != 0 goto label14;

        if prohibited != 0 goto label14;

        $r0 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;
        $r5 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanClause newBooleanClause(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(q, $r0);
        interfaceinvoke clauses.<java.util.List: boolean add(java.lang.Object)>($r5);
        goto label16;

     label14:
        if required != 0 goto label15;

        if prohibited == 0 goto label15;

        $r0 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;
        $r5 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanClause newBooleanClause(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(q, $r0);
        interfaceinvoke clauses.<java.util.List: boolean add(java.lang.Object)>($r5);
        goto label16;

     label15:
        $r6 = new java.lang.RuntimeException;
        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clause cannot be both required and prohibited");
        throw $r6;

     label16:
        return;
    }

    protected org.apache.lucene.search.Query getFieldQuery(java.lang.String, java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, queryText, $r9;
        java.io.StringReader $r0;
        org.apache.lucene.analysis.TokenStream source;
        java.util.ArrayList list, multiTerms, $r2;
        org.apache.lucene.analysis.Token reusableToken, nextToken, $r3;
        int positionCount, i, position, $i0, $i1;
        boolean severalTokensAtSamePosition, $z0;
        java.io.IOException e, $r4, $r6;
        org.apache.lucene.search.BooleanQuery q;
        org.apache.lucene.search.Query currentQuery, $r10;
        org.apache.lucene.search.MultiPhraseQuery mpq;
        org.apache.lucene.search.PhraseQuery pq;
        org.apache.lucene.analysis.Analyzer $r1;
        java.lang.Object $r5, $r7;
        org.apache.lucene.index.Term $r8;
        org.apache.lucene.search.BooleanClause$Occur $r11;
        org.apache.lucene.index.Term[] $r12, $r14;
        java.lang.Object[] $r13;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        queryText := @parameter1: java.lang.String;
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.analysis.Analyzer analyzer>;
        $r0 = new java.io.StringReader;
        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(queryText);
        source = virtualinvoke $r1.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(field, $r0);
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        list = $r2;
        $r3 = new org.apache.lucene.analysis.Token;
        specialinvoke $r3.<org.apache.lucene.analysis.Token: void <init>()>();
        reusableToken = $r3;
        positionCount = 0;
        severalTokensAtSamePosition = 0;

     label0:
        nextToken = virtualinvoke source.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.analysis.Token next(org.apache.lucene.analysis.Token)>(reusableToken);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        nextToken = null;

     label3:
        if nextToken != null goto label4;

        goto label6;

     label4:
        $r5 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.Object clone()>();
        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($r5);
        $i0 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();
        if $i0 == 0 goto label5;

        $i1 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();
        positionCount = positionCount + $i1;
        goto label0;

     label5:
        severalTokensAtSamePosition = 1;
        goto label0;

     label6:
        virtualinvoke source.<org.apache.lucene.analysis.TokenStream: void close()>();

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        e = $r6;

     label9:
        $i0 = interfaceinvoke list.<java.util.List: int size()>();
        if $i0 != 0 goto label10;

        return null;

     label10:
        $i0 = interfaceinvoke list.<java.util.List: int size()>();
        if $i0 != 1 goto label11;

        $r7 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(0);
        nextToken = (org.apache.lucene.analysis.Token) $r7;
        $r8 = new org.apache.lucene.index.Term;
        $r9 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.String term()>();
        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, $r9);
        $r10 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newTermQuery(org.apache.lucene.index.Term)>($r8);
        return $r10;

     label11:
        if severalTokensAtSamePosition == 0 goto label22;

        if positionCount != 1 goto label14;

        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanQuery newBooleanQuery(boolean)>(1);
        i = 0;

     label12:
        $i1 = interfaceinvoke list.<java.util.List: int size()>();
        if i >= $i1 goto label13;

        $r7 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i);
        nextToken = (org.apache.lucene.analysis.Token) $r7;
        $r8 = new org.apache.lucene.index.Term;
        $r9 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.String term()>();
        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, $r9);
        currentQuery = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newTermQuery(org.apache.lucene.index.Term)>($r8);
        $r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;
        virtualinvoke q.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(currentQuery, $r11);
        i = i + 1;
        goto label12;

     label13:
        return q;

     label14:
        mpq = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.MultiPhraseQuery newMultiPhraseQuery()>();
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop>;
        virtualinvoke mpq.<org.apache.lucene.search.MultiPhraseQuery: void setSlop(int)>($i1);
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        multiTerms = $r2;
        position = -1;
        i = 0;

     label15:
        $i1 = interfaceinvoke list.<java.util.List: int size()>();
        if i >= $i1 goto label19;

        $r7 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i);
        nextToken = (org.apache.lucene.analysis.Token) $r7;
        $i0 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();
        if $i0 <= 0 goto label18;

        $i0 = interfaceinvoke multiTerms.<java.util.List: int size()>();
        if $i0 <= 0 goto label18;

        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements>;
        if $z0 == 0 goto label16;

        $r12 = newarray (org.apache.lucene.index.Term)[0];
        $r13 = interfaceinvoke multiTerms.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);
        $r14 = (org.apache.lucene.index.Term[]) $r13;
        $r14 = (org.apache.lucene.index.Term[]) $r14;
        virtualinvoke mpq.<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[],int)>($r14, position);
        goto label17;

     label16:
        $r12 = newarray (org.apache.lucene.index.Term)[0];
        $r13 = interfaceinvoke multiTerms.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);
        $r14 = (org.apache.lucene.index.Term[]) $r13;
        $r14 = (org.apache.lucene.index.Term[]) $r14;
        virtualinvoke mpq.<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[])>($r14);

     label17:
        interfaceinvoke multiTerms.<java.util.List: void clear()>();

     label18:
        $i1 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();
        position = position + $i1;
        $r8 = new org.apache.lucene.index.Term;
        $r9 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.String term()>();
        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, $r9);
        interfaceinvoke multiTerms.<java.util.List: boolean add(java.lang.Object)>($r8);
        i = i + 1;
        goto label15;

     label19:
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements>;
        if $z0 == 0 goto label20;

        $r12 = newarray (org.apache.lucene.index.Term)[0];
        $r13 = interfaceinvoke multiTerms.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);
        $r14 = (org.apache.lucene.index.Term[]) $r13;
        $r14 = (org.apache.lucene.index.Term[]) $r14;
        virtualinvoke mpq.<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[],int)>($r14, position);
        goto label21;

     label20:
        $r12 = newarray (org.apache.lucene.index.Term)[0];
        $r13 = interfaceinvoke multiTerms.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);
        $r14 = (org.apache.lucene.index.Term[]) $r13;
        $r14 = (org.apache.lucene.index.Term[]) $r14;
        virtualinvoke mpq.<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[])>($r14);

     label21:
        return mpq;

     label22:
        pq = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.PhraseQuery newPhraseQuery()>();
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop>;
        virtualinvoke pq.<org.apache.lucene.search.PhraseQuery: void setSlop(int)>($i1);
        position = -1;
        i = 0;

     label23:
        $i1 = interfaceinvoke list.<java.util.List: int size()>();
        if i >= $i1 goto label26;

        $r7 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i);
        nextToken = (org.apache.lucene.analysis.Token) $r7;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements>;
        if $z0 == 0 goto label24;

        $i1 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();
        position = position + $i1;
        $r8 = new org.apache.lucene.index.Term;
        $r9 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.String term()>();
        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, $r9);
        virtualinvoke pq.<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term,int)>($r8, position);
        goto label25;

     label24:
        $r8 = new org.apache.lucene.index.Term;
        $r9 = virtualinvoke nextToken.<org.apache.lucene.analysis.Token: java.lang.String term()>();
        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, $r9);
        virtualinvoke pq.<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term)>($r8);

     label25:
        i = i + 1;
        goto label23;

     label26:
        return pq;

        catch java.io.IOException from label0 to label1 with label2;
        catch java.io.IOException from label6 to label7 with label8;
    }

    protected org.apache.lucene.search.Query getFieldQuery(java.lang.String, java.lang.String, int) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, queryText;
        int slop;
        org.apache.lucene.search.Query query;
        boolean $z0;
        org.apache.lucene.search.PhraseQuery $r0;
        org.apache.lucene.search.MultiPhraseQuery $r1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        queryText := @parameter1: java.lang.String;
        slop := @parameter2: int;
        query = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String)>(field, queryText);
        $z0 = query instanceof org.apache.lucene.search.PhraseQuery;
        if $z0 == 0 goto label0;

        $r0 = (org.apache.lucene.search.PhraseQuery) query;
        virtualinvoke $r0.<org.apache.lucene.search.PhraseQuery: void setSlop(int)>(slop);

     label0:
        $z0 = query instanceof org.apache.lucene.search.MultiPhraseQuery;
        if $z0 == 0 goto label1;

        $r1 = (org.apache.lucene.search.MultiPhraseQuery) query;
        virtualinvoke $r1.<org.apache.lucene.search.MultiPhraseQuery: void setSlop(int)>(slop);

     label1:
        return query;
    }

    protected org.apache.lucene.search.Query getRangeQuery(java.lang.String, java.lang.String, java.lang.String, boolean) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, part1, part2;
        boolean inclusive, $z0;
        java.text.DateFormat df;
        java.util.Date d1, d2;
        java.util.Calendar cal;
        org.apache.lucene.document.DateTools$Resolution resolution;
        java.lang.Exception e, $r2;
        java.util.Locale $r0, $r1;
        org.apache.lucene.search.Query $r3;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        part1 := @parameter1: java.lang.String;
        part2 := @parameter2: java.lang.String;
        inclusive := @parameter3: boolean;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms>;
        if $z0 == 0 goto label0;

        part1 = virtualinvoke part1.<java.lang.String: java.lang.String toLowerCase()>();
        part2 = virtualinvoke part2.<java.lang.String: java.lang.String toLowerCase()>();

     label0:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale>;
        df = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r0);
        virtualinvoke df.<java.text.DateFormat: void setLenient(boolean)>(1);
        d1 = virtualinvoke df.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(part1);
        d2 = virtualinvoke df.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(part2);
        if inclusive == 0 goto label1;

        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale>;
        cal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r1);
        virtualinvoke cal.<java.util.Calendar: void setTime(java.util.Date)>(d2);
        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(11, 23);
        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(12, 59);
        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(13, 59);
        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(14, 999);
        d2 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();

     label1:
        resolution = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution getDateResolution(java.lang.String)>(field);
        if resolution != null goto label2;

        part1 = staticinvoke <org.apache.lucene.document.DateField: java.lang.String dateToString(java.util.Date)>(d1);
        part2 = staticinvoke <org.apache.lucene.document.DateField: java.lang.String dateToString(java.util.Date)>(d2);
        goto label3;

     label2:
        part1 = staticinvoke <org.apache.lucene.document.DateTools: java.lang.String dateToString(java.util.Date,org.apache.lucene.document.DateTools$Resolution)>(d1, resolution);
        part2 = staticinvoke <org.apache.lucene.document.DateTools: java.lang.String dateToString(java.util.Date,org.apache.lucene.document.DateTools$Resolution)>(d2, resolution);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;
        e = $r2;

     label5:
        $r3 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)>(field, part1, part2, inclusive);
        return $r3;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    protected org.apache.lucene.search.BooleanQuery newBooleanQuery(boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean disableCoord;
        org.apache.lucene.search.BooleanQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        disableCoord := @parameter0: boolean;
        $r0 = new org.apache.lucene.search.BooleanQuery;
        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>(disableCoord);
        return $r0;
    }

    protected org.apache.lucene.search.BooleanClause newBooleanClause(org.apache.lucene.search.Query, org.apache.lucene.search.BooleanClause$Occur)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.search.Query q;
        org.apache.lucene.search.BooleanClause$Occur occur;
        org.apache.lucene.search.BooleanClause $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        q := @parameter0: org.apache.lucene.search.Query;
        occur := @parameter1: org.apache.lucene.search.BooleanClause$Occur;
        $r0 = new org.apache.lucene.search.BooleanClause;
        specialinvoke $r0.<org.apache.lucene.search.BooleanClause: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(q, occur);
        return $r0;
    }

    protected org.apache.lucene.search.Query newTermQuery(org.apache.lucene.index.Term)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.index.Term term;
        org.apache.lucene.search.TermQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        term := @parameter0: org.apache.lucene.index.Term;
        $r0 = new org.apache.lucene.search.TermQuery;
        specialinvoke $r0.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>(term);
        return $r0;
    }

    protected org.apache.lucene.search.PhraseQuery newPhraseQuery()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.search.PhraseQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = new org.apache.lucene.search.PhraseQuery;
        specialinvoke $r0.<org.apache.lucene.search.PhraseQuery: void <init>()>();
        return $r0;
    }

    protected org.apache.lucene.search.MultiPhraseQuery newMultiPhraseQuery()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.search.MultiPhraseQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = new org.apache.lucene.search.MultiPhraseQuery;
        specialinvoke $r0.<org.apache.lucene.search.MultiPhraseQuery: void <init>()>();
        return $r0;
    }

    protected org.apache.lucene.search.Query newPrefixQuery(org.apache.lucene.index.Term)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.index.Term prefix;
        org.apache.lucene.search.PrefixQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        prefix := @parameter0: org.apache.lucene.index.Term;
        $r0 = new org.apache.lucene.search.PrefixQuery;
        specialinvoke $r0.<org.apache.lucene.search.PrefixQuery: void <init>(org.apache.lucene.index.Term)>(prefix);
        return $r0;
    }

    protected org.apache.lucene.search.Query newFuzzyQuery(org.apache.lucene.index.Term, float, int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.index.Term term;
        float minimumSimilarity;
        int prefixLength;
        org.apache.lucene.search.FuzzyQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        term := @parameter0: org.apache.lucene.index.Term;
        minimumSimilarity := @parameter1: float;
        prefixLength := @parameter2: int;
        $r0 = new org.apache.lucene.search.FuzzyQuery;
        specialinvoke $r0.<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,float,int)>(term, minimumSimilarity, prefixLength);
        return $r0;
    }

    protected org.apache.lucene.search.Query newRangeQuery(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, part1, part2;
        boolean inclusive, $z0;
        org.apache.lucene.index.Term $r0, $r2;
        org.apache.lucene.search.RangeQuery $r1;
        java.text.Collator $r3, $r5;
        org.apache.lucene.search.ConstantScoreRangeQuery $r4;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        part1 := @parameter1: java.lang.String;
        part2 := @parameter2: java.lang.String;
        inclusive := @parameter3: boolean;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean useOldRangeQuery>;
        if $z0 == 0 goto label0;

        $r1 = new org.apache.lucene.search.RangeQuery;
        $r0 = new org.apache.lucene.index.Term;
        specialinvoke $r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, part1);
        $r2 = new org.apache.lucene.index.Term;
        specialinvoke $r2.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, part2);
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator>;
        specialinvoke $r1.<org.apache.lucene.search.RangeQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.index.Term,boolean,java.text.Collator)>($r0, $r2, inclusive, $r3);
        return $r1;

     label0:
        $r4 = new org.apache.lucene.search.ConstantScoreRangeQuery;
        $r5 = this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator>;
        specialinvoke $r4.<org.apache.lucene.search.ConstantScoreRangeQuery: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.text.Collator)>(field, part1, part2, inclusive, inclusive, $r5);
        return $r4;
    }

    protected org.apache.lucene.search.Query newMatchAllDocsQuery()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.search.MatchAllDocsQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $r0 = new org.apache.lucene.search.MatchAllDocsQuery;
        specialinvoke $r0.<org.apache.lucene.search.MatchAllDocsQuery: void <init>()>();
        return $r0;
    }

    protected org.apache.lucene.search.Query newWildcardQuery(org.apache.lucene.index.Term)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.index.Term t;
        org.apache.lucene.search.WildcardQuery $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        t := @parameter0: org.apache.lucene.index.Term;
        $r0 = new org.apache.lucene.search.WildcardQuery;
        specialinvoke $r0.<org.apache.lucene.search.WildcardQuery: void <init>(org.apache.lucene.index.Term)>(t);
        return $r0;
    }

    protected org.apache.lucene.search.Query getBooleanQuery(java.util.Vector) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.Vector clauses;
        org.apache.lucene.search.Query $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.Vector;
        $r0 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List,boolean)>(clauses, 0);
        return $r0;
    }

    protected org.apache.lucene.search.Query getBooleanQuery(java.util.List) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.List clauses;
        org.apache.lucene.search.Query $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.List;
        $r0 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List,boolean)>(clauses, 0);
        return $r0;
    }

    protected org.apache.lucene.search.Query getBooleanQuery(java.util.Vector, boolean) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.Vector clauses;
        boolean disableCoord;
        org.apache.lucene.search.Query $r0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.Vector;
        disableCoord := @parameter1: boolean;
        $r0 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List,boolean)>(clauses, disableCoord);
        return $r0;
    }

    protected org.apache.lucene.search.Query getBooleanQuery(java.util.List, boolean) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.util.List clauses;
        boolean disableCoord;
        org.apache.lucene.search.BooleanQuery query;
        int i, $i0, $i1;
        java.lang.Object $r0;
        org.apache.lucene.search.BooleanClause $r1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        clauses := @parameter0: java.util.List;
        disableCoord := @parameter1: boolean;
        $i0 = interfaceinvoke clauses.<java.util.List: int size()>();
        if $i0 != 0 goto label0;

        return null;

     label0:
        query = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanQuery newBooleanQuery(boolean)>(disableCoord);
        i = 0;

     label1:
        $i1 = interfaceinvoke clauses.<java.util.List: int size()>();
        if i >= $i1 goto label2;

        $r0 = interfaceinvoke clauses.<java.util.List: java.lang.Object get(int)>(i);
        $r1 = (org.apache.lucene.search.BooleanClause) $r0;
        virtualinvoke query.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.BooleanClause)>($r1);
        i = i + 1;
        goto label1;

     label2:
        return query;
    }

    protected org.apache.lucene.search.Query getWildcardQuery(java.lang.String, java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, termStr, $r0;
        org.apache.lucene.index.Term t, $r3;
        boolean $z0;
        org.apache.lucene.search.Query $r1;
        org.apache.lucene.queryParser.ParseException $r2;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        termStr := @parameter1: java.lang.String;
        $r0 = "*";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(field);
        if $z0 == 0 goto label0;

        $r0 = "*";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(termStr);
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newMatchAllDocsQuery()>();
        return $r1;

     label0:
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard>;
        if $z0 != 0 goto label2;

        $z0 = virtualinvoke termStr.<java.lang.String: boolean startsWith(java.lang.String)>("*");
        if $z0 != 0 goto label1;

        $z0 = virtualinvoke termStr.<java.lang.String: boolean startsWith(java.lang.String)>("?");
        if $z0 == 0 goto label2;

     label1:
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>("\'*\' or \'?\' not allowed as first character in WildcardQuery");
        throw $r2;

     label2:
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms>;
        if $z0 == 0 goto label3;

        termStr = virtualinvoke termStr.<java.lang.String: java.lang.String toLowerCase()>();

     label3:
        $r3 = new org.apache.lucene.index.Term;
        specialinvoke $r3.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, termStr);
        t = $r3;
        $r1 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newWildcardQuery(org.apache.lucene.index.Term)>(t);
        return $r1;
    }

    protected org.apache.lucene.search.Query getPrefixQuery(java.lang.String, java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, termStr;
        org.apache.lucene.index.Term t, $r1;
        boolean $z0;
        org.apache.lucene.queryParser.ParseException $r0;
        org.apache.lucene.search.Query $r2;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        termStr := @parameter1: java.lang.String;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard>;
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke termStr.<java.lang.String: boolean startsWith(java.lang.String)>("*");
        if $z0 == 0 goto label0;

        $r0 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r0.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>("\'*\' not allowed as first character in PrefixQuery");
        throw $r0;

     label0:
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms>;
        if $z0 == 0 goto label1;

        termStr = virtualinvoke termStr.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        $r1 = new org.apache.lucene.index.Term;
        specialinvoke $r1.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, termStr);
        t = $r1;
        $r2 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newPrefixQuery(org.apache.lucene.index.Term)>(t);
        return $r2;
    }

    protected org.apache.lucene.search.Query getFuzzyQuery(java.lang.String, java.lang.String, float) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, termStr;
        float minSimilarity;
        org.apache.lucene.index.Term t, $r0;
        boolean $z0;
        int $i0;
        org.apache.lucene.search.Query $r1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        termStr := @parameter1: java.lang.String;
        minSimilarity := @parameter2: float;
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms>;
        if $z0 == 0 goto label0;

        termStr = virtualinvoke termStr.<java.lang.String: java.lang.String toLowerCase()>();

     label0:
        $r0 = new org.apache.lucene.index.Term;
        specialinvoke $r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(field, termStr);
        t = $r0;
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int fuzzyPrefixLength>;
        $r1 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newFuzzyQuery(org.apache.lucene.index.Term,float,int)>(t, minSimilarity, $i0);
        return $r1;
    }

    private java.lang.String discardEscapeChar(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String input, $r1;
        char[] output;
        int length, codePoint, i, $i0, $i1;
        boolean lastCharWasEscapeChar;
        short codePointMultiplier;
        char curChar, $c2;
        org.apache.lucene.queryParser.ParseException $r0;
        long tid_discardEscapeChar;
        java.lang.Thread thread_discardEscapeChar;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        input := @parameter0: java.lang.String;
        thread_discardEscapeChar = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_discardEscapeChar = virtualinvoke thread_discardEscapeChar.<java.lang.Thread: long getId()>();
        $i0 = virtualinvoke input.<java.lang.String: int length()>();
        output = newarray (char)[$i0];
        length = 0;
        lastCharWasEscapeChar = 0;
        codePointMultiplier = 0;
        codePoint = 0;
        i = 0;

     label0:
        $i1 = virtualinvoke input.<java.lang.String: int length()>();
        if i >= $i1 goto label7;

        curChar = virtualinvoke input.<java.lang.String: char charAt(int)>(i);
        if codePointMultiplier <= 0 goto label1;

        $i1 = staticinvoke <org.apache.lucene.queryParser.QueryParser: int hexToInt(char)>(curChar);
        $i1 = $i1 * codePointMultiplier;
        codePoint = codePoint + $i1;
        codePointMultiplier = codePointMultiplier >>> 4;
        if codePointMultiplier != 0 goto label6;

        $i1 = length;
        length = length + 1;
        $c2 = (char) codePoint;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,char)>(output, 25, tid_discardEscapeChar, "org.apache.lucene.queryParser.QueryParser", 980, $i1, $c2);
        output[$i1] = $c2;
        codePoint = 0;
        goto label6;

     label1:
        if lastCharWasEscapeChar == 0 goto label4;

        if curChar != 117 goto label2;

        codePointMultiplier = 4096;
        goto label3;

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,char)>(output, 25, tid_discardEscapeChar, "org.apache.lucene.queryParser.QueryParser", 989, length, curChar);
        output[length] = curChar;
        length = length + 1;

     label3:
        lastCharWasEscapeChar = 0;
        goto label6;

     label4:
        if curChar != 92 goto label5;

        lastCharWasEscapeChar = 1;
        goto label6;

     label5:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,char)>(output, 25, tid_discardEscapeChar, "org.apache.lucene.queryParser.QueryParser", 997, length, curChar);
        output[length] = curChar;
        length = length + 1;

     label6:
        i = i + 1;
        goto label0;

     label7:
        if codePointMultiplier <= 0 goto label8;

        $r0 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r0.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>("Truncated unicode escape sequence.");
        throw $r0;

     label8:
        if lastCharWasEscapeChar == 0 goto label9;

        $r0 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r0.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>("Term can not end with escape character.");
        throw $r0;

     label9:
        $r1 = new java.lang.String;
        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(output, 0, length);
        return $r1;
    }

    private static final int hexToInt(char) throws org.apache.lucene.queryParser.ParseException
    {
        char c;
        java.lang.StringBuffer $r0;
        int $i0;
        org.apache.lucene.queryParser.ParseException $r1;
        java.lang.String $r2;

        c := @parameter0: char;
        if 48 > c goto label0;

        if c > 57 goto label0;

        $i0 = c - 48;
        return $i0;

     label0:
        if 97 > c goto label1;

        if c > 102 goto label1;

        $i0 = c - 97;
        $i0 = $i0 + 10;
        return $i0;

     label1:
        if 65 > c goto label2;

        if c > 70 goto label2;

        $i0 = c - 65;
        $i0 = $i0 + 10;
        return $i0;

     label2:
        $r1 = new org.apache.lucene.queryParser.ParseException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("None-hex character in unicode escape sequence: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>($r2);
        throw $r1;
    }

    public static java.lang.String escape(java.lang.String)
    {
        java.lang.String s, $r1;
        java.lang.StringBuffer $r0, sb;
        int i, $i0;
        char c;

        s := @parameter0: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        i = 0;

     label0:
        $i0 = virtualinvoke s.<java.lang.String: int length()>();
        if i >= $i0 goto label3;

        c = virtualinvoke s.<java.lang.String: char charAt(int)>(i);
        if c == 92 goto label1;

        if c == 43 goto label1;

        if c == 45 goto label1;

        if c == 33 goto label1;

        if c == 40 goto label1;

        if c == 41 goto label1;

        if c == 58 goto label1;

        if c == 94 goto label1;

        if c == 91 goto label1;

        if c == 93 goto label1;

        if c == 34 goto label1;

        if c == 123 goto label1;

        if c == 125 goto label1;

        if c == 126 goto label1;

        if c == 42 goto label1;

        if c == 63 goto label1;

        if c == 124 goto label1;

        if c != 38 goto label2;

     label1:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label2:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c);
        i = i + 1;
        goto label0;

     label3:
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] args;
        org.apache.lucene.analysis.SimpleAnalyzer $r0;
        org.apache.lucene.queryParser.QueryParser qp, $r2;
        org.apache.lucene.search.Query q;
        int $i0;
        java.io.PrintStream $r1;
        java.lang.String $r3;
        long tid_main;
        java.lang.Thread thread_main;

        args := @parameter0: java.lang.String[];
        thread_main = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_main = virtualinvoke thread_main.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void mainThreadStartRun(long,java.lang.String,java.lang.String[])>(tid_main, "org.apache.lucene.queryParser.QueryParser.main", args);
        $i0 = lengthof args;
        if $i0 != 0 goto label0;

        $r1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: java org.apache.lucene.queryParser.QueryParser <input>");
        staticinvoke <java.lang.System: void exit(int)>(0);

     label0:
        $r2 = new org.apache.lucene.queryParser.QueryParser;
        $r0 = new org.apache.lucene.analysis.SimpleAnalyzer;
        specialinvoke $r0.<org.apache.lucene.analysis.SimpleAnalyzer: void <init>()>();
        specialinvoke $r2.<org.apache.lucene.queryParser.QueryParser: void <init>(java.lang.String,org.apache.lucene.analysis.Analyzer)>("field", $r0);
        qp = $r2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>(args, 10, tid_main, "org.apache.lucene.queryParser.QueryParser", 1058, 0, $r3);
        $r3 = args[0];
        q = virtualinvoke qp.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query parse(java.lang.String)>($r3);
        $r1 = <java.lang.System: java.io.PrintStream out>;
        $r3 = virtualinvoke q.<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)>("field");
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void mainThreadStopRun(long,java.lang.String,java.lang.String[])>(tid_main, "org.apache.lucene.queryParser.QueryParser.main", args);
        return;
    }

    public final int Conjunction() throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        byte 'ret';
        int $i0, $i1;
        int[] $r1;
        org.apache.lucene.queryParser.ParseException $r2;
        long tid_Conjunction;
        java.lang.Thread thread_Conjunction;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_Conjunction = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_Conjunction = virtualinvoke thread_Conjunction.<java.lang.Thread: long getId()>();
        'ret' = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1066, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label0;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1066, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label1:
        lookupswitch($i0)
        {
            case 8: goto label2;
            case 9: goto label2;
            default: goto label8;
        };

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1069, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label3;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label4;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1069, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label4:
        lookupswitch($i0)
        {
            case 8: goto label5;
            case 9: goto label6;
            default: goto label7;
        };

     label5:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(8);
        'ret' = 1;
        goto label9;

     label6:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(9);
        'ret' = 2;
        goto label9;

     label7:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1079, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1079, 0, $i1);
        $r1[0] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label8:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1085, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_Conjunction, "org.apache.lucene.queryParser.QueryParser", 1085, 1, $i1);
        $r1[1] = $i1;

     label9:
        return 'ret';
    }

    public final int Modifiers() throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        byte 'ret';
        int $i0, $i1;
        int[] $r1;
        org.apache.lucene.queryParser.ParseException $r2;
        long tid_Modifiers;
        java.lang.Thread thread_Modifiers;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_Modifiers = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_Modifiers = virtualinvoke thread_Modifiers.<java.lang.Thread: long getId()>();
        'ret' = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1094, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label0;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1094, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label1:
        tableswitch($i0)
        {
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label9;
        };

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1098, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label3;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label4;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1098, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label4:
        tableswitch($i0)
        {
            case 10: goto label7;
            case 11: goto label5;
            case 12: goto label6;
            default: goto label8;
        };

     label5:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(11);
        'ret' = 11;
        goto label10;

     label6:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(12);
        'ret' = 10;
        goto label10;

     label7:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(10);
        'ret' = 10;
        goto label10;

     label8:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1112, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1112, 2, $i1);
        $r1[2] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label9:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1118, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_Modifiers, "org.apache.lucene.queryParser.QueryParser", 1118, 3, $i1);
        $r1[3] = $i1;

     label10:
        return 'ret';
    }

    public final org.apache.lucene.search.Query TopLevelQuery(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field;
        org.apache.lucene.search.Query q;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Query(java.lang.String)>(field);
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(0);
        return q;
    }

    public final org.apache.lucene.search.Query Query(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field;
        java.util.ArrayList $r0, clauses;
        org.apache.lucene.search.Query firstQuery, q, $r2;
        int mods, conj, $i0, $i1;
        int[] $r1;
        long tid_Query;
        java.lang.Thread thread_Query;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        thread_Query = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_Query = virtualinvoke thread_Query.<java.lang.Thread: long getId()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        clauses = $r0;
        firstQuery = null;
        mods = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: int Modifiers()>();
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Clause(java.lang.String)>(field);
        virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: void addClause(java.util.List,int,int,org.apache.lucene.search.Query)>(clauses, 0, mods, q);
        if mods != 0 goto label0;

        firstQuery = q;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Query, "org.apache.lucene.queryParser.QueryParser", 1145, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label1;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label2;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Query, "org.apache.lucene.queryParser.QueryParser", 1145, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label2:
        tableswitch($i0)
        {
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 14: goto label4;
            case 15: goto label4;
            case 16: goto label3;
            case 17: goto label4;
            case 18: goto label3;
            case 19: goto label3;
            case 20: goto label4;
            case 21: goto label3;
            case 22: goto label3;
            case 23: goto label3;
            case 24: goto label3;
            case 25: goto label3;
            default: goto label4;
        };

     label3:
        goto label5;

     label4:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Query, "org.apache.lucene.queryParser.QueryParser", 1163, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_Query, "org.apache.lucene.queryParser.QueryParser", 1163, 4, $i1);
        $r1[4] = $i1;
        goto label6;

     label5:
        conj = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: int Conjunction()>();
        mods = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: int Modifiers()>();
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Clause(java.lang.String)>(field);
        virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: void addClause(java.util.List,int,int,org.apache.lucene.search.Query)>(clauses, conj, mods, q);
        goto label0;

     label6:
        $i0 = interfaceinvoke clauses.<java.util.List: int size()>();
        if $i0 != 1 goto label7;

        if firstQuery == null goto label7;

        return firstQuery;

     label7:
        $r2 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List)>(clauses);
        return $r2;
    }

    public final org.apache.lucene.search.Query Clause(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, $r1, $r4;
        null_type fieldToken;
        org.apache.lucene.queryParser.Token boost, fieldToken;
        org.apache.lucene.search.Query q;
        float f;
        java.lang.Exception ignored, $r6;
        boolean $z0;
        int $i0, $i1;
        int[] $r2;
        org.apache.lucene.queryParser.ParseException $r3;
        java.lang.Float $r5;
        long tid_Clause;
        java.lang.Thread thread_Clause;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        thread_Clause = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_Clause = virtualinvoke thread_Clause.<java.lang.Thread: long getId()>();
        fieldToken = null;
        boost = null;
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_2_1(int)>(2);
        if $z0 == 0 goto label5;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1183, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label0;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1183, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label1:
        lookupswitch($i0)
        {
            case 16: goto label3;
            case 19: goto label2;
            default: goto label4;
        };

     label2:
        fieldToken = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(19);
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(15);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(fieldToken, 120, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1187, $r1);
        $r1 = fieldToken.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        field = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r1);
        goto label5;

     label3:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(16);
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(15);
        field = "*";
        goto label5;

     label4:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1195, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1195, 5, $i1);
        $r2[5] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r3 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r3.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r3;

     label5:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1202, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label6;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label7;

     label6:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1202, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label7:
        tableswitch($i0)
        {
            case 13: goto label9;
            case 14: goto label14;
            case 15: goto label14;
            case 16: goto label8;
            case 17: goto label14;
            case 18: goto label8;
            case 19: goto label8;
            case 20: goto label14;
            case 21: goto label8;
            case 22: goto label8;
            case 23: goto label8;
            case 24: goto label8;
            case 25: goto label8;
            default: goto label14;
        };

     label8:
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Term(java.lang.String)>(field);
        goto label15;

     label9:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(13);
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Query(java.lang.String)>(field);
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(14);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1217, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label10;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label11;

     label10:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1217, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label11:
        lookupswitch($i0)
        {
            case 17: goto label12;
            default: goto label13;
        };

     label12:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(17);
        boost = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        goto label15;

     label13:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1223, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1223, 6, $i1);
        $r2[6] = $i1;
        goto label15;

     label14:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1228, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1228, 7, $i1);
        $r2[7] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r3 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r3.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r3;

     label15:
        if boost == null goto label19;

        f = 1.0F;

     label16:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(boost, 120, tid_Clause, "org.apache.lucene.queryParser.QueryParser", 1235, $r4);
        $r4 = boost.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r4);
        f = virtualinvoke $r5.<java.lang.Float: float floatValue()>();
        virtualinvoke q.<org.apache.lucene.search.Query: void setBoost(float)>(f);

     label17:
        goto label19;

     label18:
        $r6 := @caughtexception;
        ignored = $r6;

     label19:
        return q;

        catch java.lang.Exception from label16 to label17 with label18;
    }

    public final org.apache.lucene.search.Query Term(java.lang.String) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        java.lang.String field, termImage, $r3, $r4, $r5, $r6, $r7, $r10;
        org.apache.lucene.queryParser.Token boost, fuzzySlop, term, goop1, goop2;
        boolean prefix, wildcard, fuzzy, rangein;
        org.apache.lucene.search.Query q;
        float fms, f;
        java.lang.Exception ignored, $r9, $r11, $r12;
        int s, $i0, $i1, $i2, $i4;
        int[] $r0;
        org.apache.lucene.queryParser.ParseException $r2;
        java.lang.Float $r8;
        byte $b3;
        long tid_Term;
        java.lang.Thread thread_Term;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        field := @parameter0: java.lang.String;
        thread_Term = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_Term = virtualinvoke thread_Term.<java.lang.Thread: long getId()>();
        boost = null;
        fuzzySlop = null;
        prefix = 0;
        wildcard = 0;
        fuzzy = 0;
        rangein = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1250, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label0;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1250, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label1:
        tableswitch($i0)
        {
            case 16: goto label2;
            case 17: goto label100;
            case 18: goto label85;
            case 19: goto label2;
            case 20: goto label100;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label35;
            case 24: goto label60;
            case 25: goto label2;
            default: goto label100;
        };

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1256, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label3;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label4;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1256, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label4:
        tableswitch($i0)
        {
            case 16: goto label6;
            case 17: goto label10;
            case 18: goto label10;
            case 19: goto label5;
            case 20: goto label10;
            case 21: goto label7;
            case 22: goto label8;
            case 23: goto label10;
            case 24: goto label10;
            case 25: goto label9;
            default: goto label10;
        };

     label5:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(19);
        goto label11;

     label6:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(16);
        wildcard = 1;
        goto label11;

     label7:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(21);
        prefix = 1;
        goto label11;

     label8:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(22);
        wildcard = 1;
        goto label11;

     label9:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        goto label11;

     label10:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1276, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1276, 8, $i1);
        $r0[8] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label11:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1280, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label12;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label13;

     label12:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1280, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label13:
        lookupswitch($i0)
        {
            case 20: goto label14;
            default: goto label15;
        };

     label14:
        fuzzySlop = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(20);
        fuzzy = 1;
        goto label16;

     label15:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1286, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1286, 9, $i1);
        $r0[9] = $i1;

     label16:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1289, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label17;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label18;

     label17:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1289, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label18:
        lookupswitch($i0)
        {
            case 17: goto label19;
            default: goto label24;
        };

     label19:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(17);
        boost = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1293, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label20;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label21;

     label20:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1293, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label21:
        lookupswitch($i0)
        {
            case 20: goto label22;
            default: goto label23;
        };

     label22:
        fuzzySlop = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(20);
        fuzzy = 1;
        goto label25;

     label23:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1299, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1299, 10, $i1);
        $r0[10] = $i1;
        goto label25;

     label24:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1304, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1304, 11, $i1);
        $r0[11] = $i1;

     label25:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(term, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1307, $r3);
        $r3 = term.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        termImage = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r3);
        if wildcard == 0 goto label26;

        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getWildcardQuery(java.lang.String,java.lang.String)>(field, termImage);
        goto label101;

     label26:
        if prefix == 0 goto label27;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(term, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1311, $r4);
        $r4 = term.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(term, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1311, $r5);
        $r5 = term.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();
        $i2 = $i2 - 1;
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $r6 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r4);
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getPrefixQuery(java.lang.String,java.lang.String)>(field, $r6);
        goto label101;

     label27:
        if fuzzy == 0 goto label34;

        fms = this.<org.apache.lucene.queryParser.QueryParser: float fuzzyMinSim>;

     label28:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(fuzzySlop, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1317, $r7);
        $r7 = fuzzySlop.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);
        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);
        fms = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

     label29:
        goto label31;

     label30:
        $r9 := @caughtexception;
        ignored = $r9;

     label31:
        $b3 = fms cmpg 0.0F;
        if $b3 < 0 goto label32;

        $b3 = fms cmpl 1.0F;
        if $b3 <= 0 goto label33;

     label32:
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)>("Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !");
        throw $r2;

     label33:
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFuzzyQuery(java.lang.String,java.lang.String,float)>(field, termImage, fms);
        goto label101;

     label34:
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String)>(field, termImage);
        goto label101;

     label35:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(23);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1329, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label36;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label37;

     label36:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1329, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label37:
        lookupswitch($i0)
        {
            case 28: goto label39;
            case 29: goto label38;
            default: goto label40;
        };

     label38:
        goop1 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(29);
        goto label41;

     label39:
        goop1 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(28);
        goto label41;

     label40:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1337, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1337, 12, $i1);
        $r0[12] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label41:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1341, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label42;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label43;

     label42:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1341, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label43:
        lookupswitch($i0)
        {
            case 26: goto label44;
            default: goto label45;
        };

     label44:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(26);
        goto label46;

     label45:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1346, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1346, 13, $i1);
        $r0[13] = $i1;

     label46:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1349, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label47;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label48;

     label47:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1349, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label48:
        lookupswitch($i0)
        {
            case 28: goto label50;
            case 29: goto label49;
            default: goto label51;
        };

     label49:
        goop2 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(29);
        goto label52;

     label50:
        goop2 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(28);
        goto label52;

     label51:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1357, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1357, 14, $i1);
        $r0[14] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label52:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(27);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1362, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label53;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label54;

     label53:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1362, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label54:
        lookupswitch($i0)
        {
            case 17: goto label55;
            default: goto label56;
        };

     label55:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(17);
        boost = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        goto label57;

     label56:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1368, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1368, 15, $i1);
        $r0[15] = $i1;

     label57:
        $i0 = goop1.<org.apache.lucene.queryParser.Token: int kind>;
        if $i0 != 28 goto label58;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1372, $r3);
        $r3 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1372, $r4);
        $r4 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();
        $i4 = $i4 - 1;
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1372, $r3);
        goop1.<org.apache.lucene.queryParser.Token: java.lang.String image> = $r3;

     label58:
        $i0 = goop2.<org.apache.lucene.queryParser.Token: int kind>;
        if $i0 != 28 goto label59;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1375, $r3);
        $r3 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1375, $r4);
        $r4 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();
        $i4 = $i4 - 1;
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1375, $r3);
        goop2.<org.apache.lucene.queryParser.Token: java.lang.String image> = $r3;

     label59:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1377, $r4);
        $r4 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r6 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1377, $r10);
        $r10 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r4 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r10);
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)>(field, $r6, $r4, 1);
        goto label101;

     label60:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(24);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1381, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label61;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label62;

     label61:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1381, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label62:
        lookupswitch($i0)
        {
            case 32: goto label64;
            case 33: goto label63;
            default: goto label65;
        };

     label63:
        goop1 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(33);
        goto label66;

     label64:
        goop1 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(32);
        goto label66;

     label65:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1389, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1389, 16, $i1);
        $r0[16] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label66:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1393, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label67;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label68;

     label67:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1393, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label68:
        lookupswitch($i0)
        {
            case 30: goto label69;
            default: goto label70;
        };

     label69:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(30);
        goto label71;

     label70:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1398, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1398, 17, $i1);
        $r0[17] = $i1;

     label71:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1401, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label72;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label73;

     label72:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1401, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label73:
        lookupswitch($i0)
        {
            case 32: goto label75;
            case 33: goto label74;
            default: goto label76;
        };

     label74:
        goop2 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(33);
        goto label77;

     label75:
        goop2 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(32);
        goto label77;

     label76:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1409, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1409, 18, $i1);
        $r0[18] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label77:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(31);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1414, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label78;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label79;

     label78:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1414, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label79:
        lookupswitch($i0)
        {
            case 17: goto label80;
            default: goto label81;
        };

     label80:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(17);
        boost = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        goto label82;

     label81:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1420, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1420, 19, $i1);
        $r0[19] = $i1;

     label82:
        $i0 = goop1.<org.apache.lucene.queryParser.Token: int kind>;
        if $i0 != 32 goto label83;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1424, $r3);
        $r3 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1424, $r4);
        $r4 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();
        $i4 = $i4 - 1;
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1424, $r3);
        goop1.<org.apache.lucene.queryParser.Token: java.lang.String image> = $r3;

     label83:
        $i0 = goop2.<org.apache.lucene.queryParser.Token: int kind>;
        if $i0 != 32 goto label84;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1427, $r3);
        $r3 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1427, $r4);
        $r4 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();
        $i4 = $i4 - 1;
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1427, $r3);
        goop2.<org.apache.lucene.queryParser.Token: java.lang.String image> = $r3;

     label84:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop1, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1430, $r4);
        $r4 = goop1.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r6 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(goop2, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1430, $r10);
        $r10 = goop2.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r4 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r10);
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)>(field, $r6, $r4, 0);
        goto label101;

     label85:
        term = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(18);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1434, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label86;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label87;

     label86:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1434, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label87:
        lookupswitch($i0)
        {
            case 20: goto label88;
            default: goto label89;
        };

     label88:
        fuzzySlop = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(20);
        goto label90;

     label89:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1439, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1439, 20, $i1);
        $r0[20] = $i1;

     label90:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1442, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;
        if $i0 != -1 goto label91;

        $i0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk()>();
        goto label92;

     label91:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1442, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk>;

     label92:
        lookupswitch($i0)
        {
            case 17: goto label93;
            default: goto label94;
        };

     label93:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(17);
        boost = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(25);
        goto label95;

     label94:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1448, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1448, 21, $i1);
        $r0[21] = $i1;

     label95:
        s = this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop>;
        if fuzzySlop == null goto label99;

     label96:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(fuzzySlop, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1455, $r7);
        $r7 = fuzzySlop.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);
        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);
        s = virtualinvoke $r8.<java.lang.Float: int intValue()>();

     label97:
        goto label99;

     label98:
        $r11 := @caughtexception;
        ignored = $r11;

     label99:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(term, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1459, $r4);
        $r4 = term.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(term, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1459, $r5);
        $r5 = term.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();
        $i2 = $i2 - 1;
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);
        $r6 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)>($r4);
        q = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String,int)>(field, $r6, s);
        goto label101;

     label100:
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1462, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1462, 22, $i1);
        $r0[22] = $i1;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)>(-1);
        $r2 = new org.apache.lucene.queryParser.ParseException;
        specialinvoke $r2.<org.apache.lucene.queryParser.ParseException: void <init>()>();
        throw $r2;

     label101:
        if boost == null goto label106;

        f = 1.0F;

     label102:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(boost, 120, tid_Term, "org.apache.lucene.queryParser.QueryParser", 1469, $r7);
        $r7 = boost.<org.apache.lucene.queryParser.Token: java.lang.String image>;
        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);
        f = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

     label103:
        goto label105;

     label104:
        $r12 := @caughtexception;
        ignored = $r12;

     label105:
        if q == null goto label106;

        virtualinvoke q.<org.apache.lucene.search.Query: void setBoost(float)>(f);

     label106:
        return q;

        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Exception from label96 to label97 with label98;
        catch java.lang.Exception from label102 to label103 with label104;
    }

    private boolean jj_2_1(int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int xla;
        org.apache.lucene.queryParser.Token $r0;
        boolean l2, l3, $z0;
        org.apache.lucene.queryParser.QueryParser$LookaheadSuccess ls, $r1;
        java.lang.Throwable l4, $r2;
        long tid_jj_2_1;
        java.lang.Thread thread_jj_2_1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        xla := @parameter0: int;
        thread_jj_2_1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_2_1 = virtualinvoke thread_jj_2_1.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_2_1, "org.apache.lucene.queryParser.QueryParser", 1487, xla);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_la> = xla;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_2_1, "org.apache.lucene.queryParser.QueryParser", 1487, $r0);
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_2_1, "org.apache.lucene.queryParser.QueryParser", 1487, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_2_1, "org.apache.lucene.queryParser.QueryParser", 1487, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos> = $r0;

     label0:
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_3_1()>();
        if $z0 != 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        l2 = $z0;
        goto label10;

     label3:
        return l2;

     label4:
        $r1 := @caughtexception;

     label5:
        ls = $r1;
        l3 = 1;
        goto label11;

     label6:
        return l3;

     label7:
        $r2 := @caughtexception;

     label8:
        l4 = $r2;
        goto label12;

     label9:
        throw l4;

     label10:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_save(int,int)>(0, xla);
        goto label3;

     label11:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_save(int,int)>(0, xla);
        goto label6;

     label12:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_save(int,int)>(0, xla);
        goto label9;

        catch org.apache.lucene.queryParser.QueryParser$LookaheadSuccess from label0 to label3 with label4;
        catch java.lang.Throwable from label0 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private boolean jj_3R_3()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_scan_token(int)>(16);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_scan_token(int)>(15);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean jj_3R_2()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean $z0;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_scan_token(int)>(19);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_scan_token(int)>(15);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean jj_3_1()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.Token xsp;
        boolean $z0;
        long tid_jj_3_1;
        java.lang.Thread thread_jj_3_1;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_jj_3_1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_3_1 = virtualinvoke thread_jj_3_1.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_3_1, "org.apache.lucene.queryParser.QueryParser", 1507, xsp);
        xsp = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_3R_2()>();
        if $z0 == 0 goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_3_1, "org.apache.lucene.queryParser.QueryParser", 1509, xsp);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = xsp;
        $z0 = specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_3R_3()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    private static void jj_la1_init_0()
    {
        int[] $r0;
        long tid_jj_la1_init_0;
        java.lang.Thread thread_jj_la1_init_0;

        thread_jj_la1_init_0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_la1_init_0 = virtualinvoke thread_jj_la1_init_0.<java.lang.Thread: long getId()>();
        nop;
        $r0 = newarray (int)[23];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 0, 768);
        $r0[0] = 768;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 1, 768);
        $r0[1] = 768;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 2, 7168);
        $r0[2] = 7168;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 3, 7168);
        $r0[3] = 7168;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 4, 65879808);
        $r0[4] = 65879808;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 5, 589824);
        $r0[5] = 589824;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 6, 131072);
        $r0[6] = 131072;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 7, 65871872);
        $r0[7] = 65871872;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 8, 40435712);
        $r0[8] = 40435712;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 9, 1048576);
        $r0[9] = 1048576;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 10, 1048576);
        $r0[10] = 1048576;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 11, 131072);
        $r0[11] = 131072;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 12, 805306368);
        $r0[12] = 805306368;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 13, 67108864);
        $r0[13] = 67108864;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 14, 805306368);
        $r0[14] = 805306368;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 15, 131072);
        $r0[15] = 131072;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 16, 0);
        $r0[16] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 17, 1073741824);
        $r0[17] = 1073741824;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 18, 0);
        $r0[18] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 19, 131072);
        $r0[19] = 131072;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 20, 1048576);
        $r0[20] = 1048576;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 21, 131072);
        $r0[21] = 131072;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_0, "org.apache.lucene.queryParser.QueryParser", 1533, 22, 65863680);
        $r0[22] = 65863680;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(125, tid_jj_la1_init_0, "org.apache.lucene.queryParserorg.apache.lucene.queryParser.QueryParser", 1533, $r0);
        <org.apache.lucene.queryParser.QueryParser: int[] jj_la1_0> = $r0;
        return;
    }

    private static void jj_la1_init_1()
    {
        int[] $r0;
        long tid_jj_la1_init_1;
        java.lang.Thread thread_jj_la1_init_1;

        thread_jj_la1_init_1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_la1_init_1 = virtualinvoke thread_jj_la1_init_1.<java.lang.Thread: long getId()>();
        nop;
        $r0 = newarray (int)[23];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 0, 0);
        $r0[0] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 1, 0);
        $r0[1] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 2, 0);
        $r0[2] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 3, 0);
        $r0[3] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 4, 0);
        $r0[4] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 5, 0);
        $r0[5] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 6, 0);
        $r0[6] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 7, 0);
        $r0[7] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 8, 0);
        $r0[8] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 9, 0);
        $r0[9] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 10, 0);
        $r0[10] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 11, 0);
        $r0[11] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 12, 0);
        $r0[12] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 13, 0);
        $r0[13] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 14, 0);
        $r0[14] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 15, 0);
        $r0[15] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 16, 3);
        $r0[16] = 3;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 17, 0);
        $r0[17] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 18, 3);
        $r0[18] = 3;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 19, 0);
        $r0[19] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 20, 0);
        $r0[20] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 21, 0);
        $r0[21] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_la1_init_1, "org.apache.lucene.queryParser.QueryParser", 1536, 22, 0);
        $r0[22] = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(126, tid_jj_la1_init_1, "org.apache.lucene.queryParserorg.apache.lucene.queryParser.QueryParser", 1536, $r0);
        <org.apache.lucene.queryParser.QueryParser: int[] jj_la1_1> = $r0;
        return;
    }

    public void <init>(org.apache.lucene.queryParser.CharStream)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.CharStream stream;
        org.apache.lucene.queryParser.QueryParser$Operator $r0;
        int i, $i0;
        java.util.Locale $r1;
        int[] $r2, $r8;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r3, $r9;
        org.apache.lucene.queryParser.QueryParser$LookaheadSuccess $r4;
        java.util.ArrayList $r5;
        org.apache.lucene.queryParser.QueryParserTokenManager $r6;
        org.apache.lucene.queryParser.Token $r7;
        org.apache.lucene.queryParser.QueryParser$JJCalls $r10;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        stream := @parameter0: org.apache.lucene.queryParser.CharStream;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator OR_OPERATOR>;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator> = $r0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms> = 1;
        this.<org.apache.lucene.queryParser.QueryParser: boolean useOldRangeQuery> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: float fuzzyMinSim> = 0.5F;
        this.<org.apache.lucene.queryParser.QueryParser: int fuzzyPrefixLength> = 0;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale> = $r1;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution dateResolution> = null;
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution> = null;
        this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator> = null;
        $r2 = newarray (int)[23];
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1> = $r2;
        $r3 = newarray (org.apache.lucene.queryParser.QueryParser$JJCalls)[1];
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns> = $r3;
        this.<org.apache.lucene.queryParser.QueryParser: boolean jj_rescan> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gc> = 0;
        $r4 = new org.apache.lucene.queryParser.QueryParser$LookaheadSuccess;
        specialinvoke $r4.<org.apache.lucene.queryParser.QueryParser$LookaheadSuccess: void <init>(org.apache.lucene.queryParser.QueryParser$1)>(null);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$LookaheadSuccess jj_ls> = $r4;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries> = $r5;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_kind> = -1;
        $r2 = newarray (int)[100];
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_lasttokens> = $r2;
        $r6 = new org.apache.lucene.queryParser.QueryParserTokenManager;
        specialinvoke $r6.<org.apache.lucene.queryParser.QueryParserTokenManager: void <init>(org.apache.lucene.queryParser.CharStream)>(stream);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source> = $r6;
        $r7 = new org.apache.lucene.queryParser.Token;
        specialinvoke $r7.<org.apache.lucene.queryParser.Token: void <init>()>();
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r7;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = 0;
        i = 0;

     label0:
        if i >= 23 goto label1;

        $r8 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        $r8[i] = -1;
        i = i + 1;
        goto label0;

     label1:
        i = 0;

     label2:
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $i0 = lengthof $r3;
        if i >= $i0 goto label3;

        $r9 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $r10 = new org.apache.lucene.queryParser.QueryParser$JJCalls;
        specialinvoke $r10.<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()>();
        $r9[i] = $r10;
        i = i + 1;
        goto label2;

     label3:
        return;
    }

    public void ReInit(org.apache.lucene.queryParser.CharStream)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.CharStream stream;
        int i, $i0;
        org.apache.lucene.queryParser.QueryParserTokenManager $r0;
        org.apache.lucene.queryParser.Token $r1;
        int[] $r2;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r3, $r4;
        org.apache.lucene.queryParser.QueryParser$JJCalls $r5;
        long tid_ReInit;
        java.lang.Thread thread_ReInit;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        stream := @parameter0: org.apache.lucene.queryParser.CharStream;
        thread_ReInit = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_ReInit = virtualinvoke thread_ReInit.<java.lang.Thread: long getId()>();
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        virtualinvoke $r0.<org.apache.lucene.queryParser.QueryParserTokenManager: void ReInit(org.apache.lucene.queryParser.CharStream)>(stream);
        $r1 = new org.apache.lucene.queryParser.Token;
        specialinvoke $r1.<org.apache.lucene.queryParser.Token: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1555, $r1);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1556, -1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1557, 0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = 0;
        i = 0;

     label0:
        if i >= 23 goto label1;

        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1558, i, -1);
        $r2[i] = -1;
        i = i + 1;
        goto label0;

     label1:
        i = 0;

     label2:
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $i0 = lengthof $r3;
        if i >= $i0 goto label3;

        $r4 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $r5 = new org.apache.lucene.queryParser.QueryParser$JJCalls;
        specialinvoke $r5.<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r4, 127, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1559, i, $r5);
        $r4[i] = $r5;
        i = i + 1;
        goto label2;

     label3:
        return;
    }

    public void <init>(org.apache.lucene.queryParser.QueryParserTokenManager)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.QueryParserTokenManager tm;
        org.apache.lucene.queryParser.QueryParser$Operator $r0;
        int i, $i0;
        java.util.Locale $r1;
        int[] $r2, $r7;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r3, $r8;
        org.apache.lucene.queryParser.QueryParser$LookaheadSuccess $r4;
        java.util.ArrayList $r5;
        org.apache.lucene.queryParser.Token $r6;
        org.apache.lucene.queryParser.QueryParser$JJCalls $r9;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        tm := @parameter0: org.apache.lucene.queryParser.QueryParserTokenManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator OR_OPERATOR>;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator operator> = $r0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean lowercaseExpandedTerms> = 1;
        this.<org.apache.lucene.queryParser.QueryParser: boolean useOldRangeQuery> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean allowLeadingWildcard> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: boolean enablePositionIncrements> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: int phraseSlop> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: float fuzzyMinSim> = 0.5F;
        this.<org.apache.lucene.queryParser.QueryParser: int fuzzyPrefixLength> = 0;
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Locale locale> = $r1;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution dateResolution> = null;
        this.<org.apache.lucene.queryParser.QueryParser: java.util.Map fieldToDateResolution> = null;
        this.<org.apache.lucene.queryParser.QueryParser: java.text.Collator rangeCollator> = null;
        $r2 = newarray (int)[23];
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1> = $r2;
        $r3 = newarray (org.apache.lucene.queryParser.QueryParser$JJCalls)[1];
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns> = $r3;
        this.<org.apache.lucene.queryParser.QueryParser: boolean jj_rescan> = 0;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gc> = 0;
        $r4 = new org.apache.lucene.queryParser.QueryParser$LookaheadSuccess;
        specialinvoke $r4.<org.apache.lucene.queryParser.QueryParser$LookaheadSuccess: void <init>(org.apache.lucene.queryParser.QueryParser$1)>(null);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$LookaheadSuccess jj_ls> = $r4;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries> = $r5;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_kind> = -1;
        $r2 = newarray (int)[100];
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_lasttokens> = $r2;
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source> = tm;
        $r6 = new org.apache.lucene.queryParser.Token;
        specialinvoke $r6.<org.apache.lucene.queryParser.Token: void <init>()>();
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r6;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = 0;
        i = 0;

     label0:
        if i >= 23 goto label1;

        $r7 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        $r7[i] = -1;
        i = i + 1;
        goto label0;

     label1:
        i = 0;

     label2:
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $i0 = lengthof $r3;
        if i >= $i0 goto label3;

        $r8 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $r9 = new org.apache.lucene.queryParser.QueryParser$JJCalls;
        specialinvoke $r9.<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()>();
        $r8[i] = $r9;
        i = i + 1;
        goto label2;

     label3:
        return;
    }

    public void ReInit(org.apache.lucene.queryParser.QueryParserTokenManager)
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.QueryParserTokenManager tm;
        int i, $i0;
        org.apache.lucene.queryParser.Token $r0;
        int[] $r1;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r2, $r3;
        org.apache.lucene.queryParser.QueryParser$JJCalls $r4;
        long tid_ReInit;
        java.lang.Thread thread_ReInit;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        tm := @parameter0: org.apache.lucene.queryParser.QueryParserTokenManager;
        thread_ReInit = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_ReInit = virtualinvoke thread_ReInit.<java.lang.Thread: long getId()>();
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source> = tm;
        $r0 = new org.apache.lucene.queryParser.Token;
        specialinvoke $r0.<org.apache.lucene.queryParser.Token: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1575, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1576, -1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1577, 0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = 0;
        i = 0;

     label0:
        if i >= 23 goto label1;

        $r1 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r1, 22, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1578, i, -1);
        $r1[i] = -1;
        i = i + 1;
        goto label0;

     label1:
        i = 0;

     label2:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $i0 = lengthof $r2;
        if i >= $i0 goto label3;

        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $r4 = new org.apache.lucene.queryParser.QueryParser$JJCalls;
        specialinvoke $r4.<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r3, 127, tid_ReInit, "org.apache.lucene.queryParser.QueryParser", 1579, i, $r4);
        $r3[i] = $r4;
        i = i + 1;
        goto label2;

     label3:
        return;
    }

    private org.apache.lucene.queryParser.Token jj_consume_token(int) throws org.apache.lucene.queryParser.ParseException
    {
        org.apache.lucene.queryParser.QueryParser this;
        int kind, i, $i0, $i1, $i2;
        org.apache.lucene.queryParser.Token oldToken, $r0, $r1, $r2;
        org.apache.lucene.queryParser.QueryParser$JJCalls c;
        org.apache.lucene.queryParser.QueryParserTokenManager $r3;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r5, $r6;
        org.apache.lucene.queryParser.ParseException $r7;
        long tid_jj_consume_token;
        java.lang.Thread thread_jj_consume_token;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        kind := @parameter0: int;
        thread_jj_consume_token = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_consume_token = virtualinvoke thread_jj_consume_token.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1584, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        oldToken = $r1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r1, 128, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1584, $r1);
        $r1 = $r1.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        if $r1 == null goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1584, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1584, $r2);
        $r2 = $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1584, $r2);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r2;
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1585, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        $r0 = virtualinvoke $r3.<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1585, $r0);
        $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1585, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r0;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1586, -1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1587, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        $i0 = $r1.<org.apache.lucene.queryParser.Token: int kind>;
        if $i0 != kind goto label7;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1588, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        $i1 = $i1 + 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1588, $i1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = $i1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 129, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1589, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gc>;
        $i2 = $i1 + 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 129, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1589, $i2);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gc> = $i2;
        if $i2 <= 100 goto label6;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 129, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1590, 0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gc> = 0;
        i = 0;

     label2:
        $r5 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        $i1 = lengthof $r5;
        if i >= $i1 goto label6;

        $r6 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r6, 127, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1592, i, c);
        c = $r6[i];

     label3:
        if c == null goto label5;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(c, 130, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1594, $i0);
        $i0 = c.<org.apache.lucene.queryParser.QueryParser$JJCalls: int gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1594, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        if $i0 >= $i1 goto label4;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(c, 131, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1594, null);
        c.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.Token first> = null;

     label4:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(c, 132, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1595, c);
        c = c.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.QueryParser$JJCalls next>;
        goto label3;

     label5:
        i = i + 1;
        goto label2;

     label6:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1599, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        return $r1;

     label7:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1601, oldToken);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = oldToken;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 133, tid_jj_consume_token, "org.apache.lucene.queryParser.QueryParser", 1602, kind);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_kind> = kind;
        $r7 = virtualinvoke this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.ParseException generateParseException()>();
        throw $r7;
    }

    private boolean jj_scan_token(int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int kind, i, $i0, $i1;
        org.apache.lucene.queryParser.Token $r0, tok, $r1, $r2, $r4, $r6;
        org.apache.lucene.queryParser.QueryParserTokenManager $r5;
        boolean $z0;
        org.apache.lucene.queryParser.QueryParser$LookaheadSuccess $r7;
        long tid_jj_scan_token;
        java.lang.Thread thread_jj_scan_token;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        kind := @parameter0: int;
        thread_jj_scan_token = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_scan_token = virtualinvoke thread_jj_scan_token.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1609, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1609, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos>;
        if $r1 != $r2 goto label1;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1610, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_la>;
        $i0 = $i0 - 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1610, $i0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_la> = $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1611, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r1, 128, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1611, $r1);
        $r1 = $r1.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        if $r1 != null goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1612, $r4);
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        $r5 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        $r0 = virtualinvoke $r5.<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r4, 128, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1612, $r0);
        $r4.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1612, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1612, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos> = $r0;
        goto label2;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1614, $r4);
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r4, 128, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1614, $r6);
        $r6 = $r4.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1614, $r6);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = $r6;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1614, $r6);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos> = $r6;
        goto label2;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1617, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1617, $r2);
        $r2 = $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1617, $r2);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = $r2;

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,boolean)>(this, 134, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1619, $z0);
        $z0 = this.<org.apache.lucene.queryParser.QueryParser: boolean jj_rescan>;
        if $z0 == 0 goto label5;

        i = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1620, tok);
        tok = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;

     label3:
        if tok == null goto label4;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1621, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        if tok == $r2 goto label4;

        i = i + 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(tok, 128, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1621, tok);
        tok = tok.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        goto label3;

     label4:
        if tok == null goto label5;

        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_add_error_token(int,int)>(kind, i);

     label5:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1624, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        $i1 = $r1.<org.apache.lucene.queryParser.Token: int kind>;
        if $i1 == kind goto label6;

        return 1;

     label6:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1625, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_la>;
        if $i1 != 0 goto label7;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1625, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_scan_token, "org.apache.lucene.queryParser.QueryParser", 1625, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos>;
        if $r1 != $r2 goto label7;

        $r7 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$LookaheadSuccess jj_ls>;
        throw $r7;

     label7:
        return 0;
    }

    public final org.apache.lucene.queryParser.Token getNextToken()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.Token $r0, $r1, $r2;
        org.apache.lucene.queryParser.QueryParserTokenManager $r3;
        int $i0;
        long tid_getNextToken;
        java.lang.Thread thread_getNextToken;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_getNextToken = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getNextToken = virtualinvoke thread_getNextToken.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1632, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r1, 128, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1632, $r1);
        $r1 = $r1.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        if $r1 == null goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1632, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1632, $r2);
        $r2 = $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1632, $r2);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r2;
        goto label1;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1633, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        $r0 = virtualinvoke $r3.<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1633, $r0);
        $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1633, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token> = $r0;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1634, -1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = -1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1635, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        $i0 = $i0 + 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1635, $i0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_gen> = $i0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getNextToken, "org.apache.lucene.queryParser.QueryParser", 1636, $r1);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        return $r1;
    }

    public final org.apache.lucene.queryParser.Token getToken(int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int index, i;
        org.apache.lucene.queryParser.Token t, $r0, $r1;
        org.apache.lucene.queryParser.QueryParserTokenManager $r2;
        long tid_getToken;
        java.lang.Thread thread_getToken;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        index := @parameter0: int;
        thread_getToken = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getToken = virtualinvoke thread_getToken.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_getToken, "org.apache.lucene.queryParser.QueryParser", 1641, t);
        t = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        i = 0;

     label0:
        if i >= index goto label3;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(t, 128, tid_getToken, "org.apache.lucene.queryParser.QueryParser", 1643, $r1);
        $r1 = t.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        if $r1 == null goto label1;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(t, 128, tid_getToken, "org.apache.lucene.queryParser.QueryParser", 1643, t);
        t = t.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        goto label2;

     label1:
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        $r0 = virtualinvoke $r2.<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(t, 128, tid_getToken, "org.apache.lucene.queryParser.QueryParser", 1644, $r0);
        t.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next> = $r0;
        t = $r0;

     label2:
        i = i + 1;
        goto label0;

     label3:
        return t;
    }

    private int jj_ntk()
    {
        org.apache.lucene.queryParser.QueryParser this;
        org.apache.lucene.queryParser.Token $r0, $r1, $r2;
        org.apache.lucene.queryParser.QueryParserTokenManager $r3;
        int $i0;
        long tid_jj_ntk;
        java.lang.Thread thread_jj_ntk;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_jj_ntk = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_ntk = virtualinvoke thread_jj_ntk.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1650, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1650, $r0);
        $r0 = $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 135, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1650, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_nt> = $r0;
        if $r0 != null goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1651, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParserTokenManager token_source>;
        $r1 = virtualinvoke $r3.<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>($r2, 128, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1651, $r1);
        $r2.<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token next> = $r1;
        $i0 = $r1.<org.apache.lucene.queryParser.Token: int kind>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1651, $i0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = $i0;
        return $i0;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 135, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1653, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_nt>;
        $i0 = $r2.<org.apache.lucene.queryParser.Token: int kind>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 118, tid_jj_ntk, "org.apache.lucene.queryParser.QueryParser", 1653, $i0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_ntk> = $i0;
        return $i0;
    }

    private void jj_add_error_token(int, int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int kind, pos, $i0, i, $i1, $i2, $i3, $i4;
        java.util.Iterator it;
        int[] oldentry, $r0, $r2, $r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        long tid_jj_add_error_token;
        java.lang.Thread thread_jj_add_error_token;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        kind := @parameter0: int;
        pos := @parameter1: int;
        thread_jj_add_error_token = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_add_error_token = virtualinvoke thread_jj_add_error_token.<java.lang.Thread: long getId()>();
        if pos < 100 goto label0;

        return;

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1664, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos>;
        $i1 = $i1 + 1;
        if pos != $i1 goto label1;

        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_lasttokens>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1665, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos>;
        $i2 = $i0 + 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1665, $i2);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos> = $i2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1665, $i0, kind);
        $r0[$i0] = kind;
        goto label10;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1666, $i3);
        $i3 = this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos>;
        if $i3 == 0 goto label10;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1667, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos>;
        $r2 = newarray (int)[$i1];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1667, $r2);
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry> = $r2;
        i = 0;

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1668, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos>;
        if i >= $i1 goto label3;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1669, $r0);
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_lasttokens>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r3, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1669, i, $i4);
        $i4 = $r3[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1669, i, $i4);
        $r0[i] = $i4;
        i = i + 1;
        goto label2;

     label3:
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        it = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r5 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        $r0 = (int[]) $r5;
        oldentry = (int[]) $r0;
        $i3 = lengthof oldentry;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1673, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        $i1 = lengthof $r2;
        if $i3 != $i1 goto label8;

        i = 0;

     label5:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1674, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        $i1 = lengthof $r2;
        if i >= $i1 goto label7;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>(oldentry, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1675, i, $i3);
        $i3 = oldentry[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1675, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1675, i, $i1);
        $i1 = $r2[i];
        if $i3 == $i1 goto label6;

        goto label4;

     label6:
        i = i + 1;
        goto label5;

     label7:
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1679, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);
        goto label9;

     label8:
        goto label4;

     label9:
        if pos == 0 goto label10;

        $r0 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_lasttokens>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1683, pos);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos> = pos;
        $i1 = pos - 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r0, 22, tid_jj_add_error_token, "org.apache.lucene.queryParser.QueryParser", 1683, $i1, kind);
        $r0[$i1] = kind;

     label10:
        return;
    }

    public org.apache.lucene.queryParser.ParseException generateParseException()
    {
        org.apache.lucene.queryParser.QueryParser this;
        boolean[] la1tokens;
        int i, j, $i0, $i1;
        int[][] exptokseq;
        java.lang.String[] $r0;
        java.util.List $r1, $r4, $r5;
        int[] $r2, $r3, $r7;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.lucene.queryParser.ParseException $r8;
        org.apache.lucene.queryParser.Token $r9;
        long tid_generateParseException;
        java.lang.Thread thread_generateParseException;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_generateParseException = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_generateParseException = virtualinvoke thread_generateParseException.<java.lang.Thread: long getId()>();
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        interfaceinvoke $r1.<java.util.List: void clear()>();
        la1tokens = newarray (boolean)[34];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 133, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1691, $i0);
        $i0 = this.<org.apache.lucene.queryParser.QueryParser: int jj_kind>;
        if $i0 < 0 goto label0;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 133, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1692, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_kind>;
        la1tokens[$i1] = 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 133, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1693, -1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_kind> = -1;

     label0:
        i = 0;

     label1:
        if i >= 23 goto label6;

        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_la1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1696, i, $i0);
        $i0 = $r2[i];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1696, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        if $i0 != $i1 goto label5;

        j = 0;

     label2:
        if j >= 32 goto label5;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(125, tid_generateParseException, "org.apache.lucene.queryParserorg.apache.lucene.queryParser.QueryParser", 1698, $r2);
        $r2 = <org.apache.lucene.queryParser.QueryParser: int[] jj_la1_0>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1698, i, $i0);
        $i0 = $r2[i];
        $i1 = 1 << j;
        $i0 = $i0 & $i1;
        if $i0 == 0 goto label3;

        la1tokens[j] = 1;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(126, tid_generateParseException, "org.apache.lucene.queryParserorg.apache.lucene.queryParser.QueryParser", 1701, $r2);
        $r2 = <org.apache.lucene.queryParser.QueryParser: int[] jj_la1_1>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1701, i, $i0);
        $i0 = $r2[i];
        $i1 = 1 << j;
        $i0 = $i0 & $i1;
        if $i0 == 0 goto label4;

        $i1 = 32 + j;
        la1tokens[$i1] = 1;

     label4:
        j = j + 1;
        goto label2;

     label5:
        i = i + 1;
        goto label1;

     label6:
        i = 0;

     label7:
        if i >= 34 goto label9;

        $z0 = la1tokens[i];
        if $z0 == 0 goto label8;

        $r3 = newarray (int)[1];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1709, $r3);
        this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry> = $r3;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1710, $r2);
        $r2 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,int)>($r2, 22, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1710, 0, i);
        $r2[0] = i;
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 137, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1711, $r3);
        $r3 = this.<org.apache.lucene.queryParser.QueryParser: int[] jj_expentry>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label8:
        i = i + 1;
        goto label7;

     label9:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 136, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1714, 0);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_endpos> = 0;
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_rescan_token()>();
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: void jj_add_error_token(int,int)>(0, 0);
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        exptokseq = newarray (int[])[$i0];
        i = 0;

     label10:
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if i >= $i1 goto label11;

        $r5 = this.<org.apache.lucene.queryParser.QueryParser: java.util.List jj_expentries>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i);
        $r7 = (int[]) $r6;
        $r7 = (int[]) $r7;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>(exptokseq, 40, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1719, i, $r7);
        exptokseq[i] = $r7;
        i = i + 1;
        goto label10;

     label11:
        $r8 = new org.apache.lucene.queryParser.ParseException;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_generateParseException, "org.apache.lucene.queryParser.QueryParser", 1721, $r9);
        $r9 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        $r0 = <org.apache.lucene.queryParser.QueryParser: java.lang.String[] tokenImage>;
        specialinvoke $r8.<org.apache.lucene.queryParser.ParseException: void <init>(org.apache.lucene.queryParser.Token,int[][],java.lang.String[])>($r9, exptokseq, $r0);
        return $r8;
    }

    public final void enable_tracing()
    {
        org.apache.lucene.queryParser.QueryParser this;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        return;
    }

    public final void disable_tracing()
    {
        org.apache.lucene.queryParser.QueryParser this;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        return;
    }

    private void jj_rescan_token()
    {
        org.apache.lucene.queryParser.QueryParser this;
        int i, $i0, $i1;
        org.apache.lucene.queryParser.QueryParser$JJCalls p;
        org.apache.lucene.queryParser.Token $r0;
        org.apache.lucene.queryParser.QueryParser$LookaheadSuccess ls, $r2;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r1;
        long tid_jj_rescan_token;
        java.lang.Thread thread_jj_rescan_token;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        thread_jj_rescan_token = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_rescan_token = virtualinvoke thread_jj_rescan_token.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 134, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1733, 1);
        this.<org.apache.lucene.queryParser.QueryParser: boolean jj_rescan> = 1;
        i = 0;

     label0:
        if i >= 1 goto label8;

     label1:
        $r1 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r1, 127, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1736, i, p);
        p = $r1[i];

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(p, 130, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1738, $i0);
        $i0 = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: int gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1738, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        if $i0 <= $i1 goto label4;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(p, 138, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1739, $i1);
        $i1 = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: int arg>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1739, $i1);
        this.<org.apache.lucene.queryParser.QueryParser: int jj_la> = $i1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 131, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1739, $r0);
        $r0 = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.Token first>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1739, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_scanpos> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1739, $r0);
        this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_lastpos> = $r0;
        lookupswitch(i)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke this.<org.apache.lucene.queryParser.QueryParser: boolean jj_3_1()>();

     label4:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 132, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1744, p);
        p = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.QueryParser$JJCalls next>;
        if p != null goto label2;

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;
        ls = $r2;

     label7:
        i = i + 1;
        goto label0;

     label8:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 134, tid_jj_rescan_token, "org.apache.lucene.queryParser.QueryParser", 1748, 0);
        this.<org.apache.lucene.queryParser.QueryParser: boolean jj_rescan> = 0;
        return;

        catch org.apache.lucene.queryParser.QueryParser$LookaheadSuccess from label1 to label5 with label6;
    }

    private void jj_save(int, int)
    {
        org.apache.lucene.queryParser.QueryParser this;
        int index, xla, $i0, $i1, $i2;
        org.apache.lucene.queryParser.QueryParser$JJCalls p, $r1, $r2;
        org.apache.lucene.queryParser.QueryParser$JJCalls[] $r0;
        org.apache.lucene.queryParser.Token $r4;
        long tid_jj_save;
        java.lang.Thread thread_jj_save;

        this := @this: org.apache.lucene.queryParser.QueryParser;
        index := @parameter0: int;
        xla := @parameter1: int;
        thread_jj_save = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_jj_save = virtualinvoke thread_jj_save.<java.lang.Thread: long getId()>();
        $r0 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$JJCalls[] jj_2_rtns>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r0, 127, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1752, index, p);
        p = $r0[index];

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(p, 130, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1753, $i0);
        $i0 = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: int gen>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1753, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        if $i0 <= $i1 goto label2;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 132, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1754, $r1);
        $r1 = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.QueryParser$JJCalls next>;
        if $r1 != null goto label1;

        $r2 = new org.apache.lucene.queryParser.QueryParser$JJCalls;
        specialinvoke $r2.<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 132, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1754, $r2);
        p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.QueryParser$JJCalls next> = $r2;
        p = $r2;
        goto label2;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 132, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1755, p);
        p = p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.QueryParser$JJCalls next>;
        goto label0;

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, $i1);
        $i1 = this.<org.apache.lucene.queryParser.QueryParser: int jj_gen>;
        $i1 = $i1 + xla;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 121, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, $i2);
        $i2 = this.<org.apache.lucene.queryParser.QueryParser: int jj_la>;
        $i1 = $i1 - $i2;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(p, 130, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, $i1);
        p.<org.apache.lucene.queryParser.QueryParser$JJCalls: int gen> = $i1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, $r4);
        $r4 = this.<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token token>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(p, 131, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, $r4);
        p.<org.apache.lucene.queryParser.QueryParser$JJCalls: org.apache.lucene.queryParser.Token first> = $r4;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(p, 138, tid_jj_save, "org.apache.lucene.queryParser.QueryParser", 1757, xla);
        p.<org.apache.lucene.queryParser.QueryParser$JJCalls: int arg> = xla;
        return;
    }

    static void <clinit>()
    {
        org.apache.lucene.queryParser.QueryParser$Operator $r0;

        $r0 = <org.apache.lucene.queryParser.QueryParser$Operator: org.apache.lucene.queryParser.QueryParser$Operator AND>;
        <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator AND_OPERATOR> = $r0;
        $r0 = <org.apache.lucene.queryParser.QueryParser$Operator: org.apache.lucene.queryParser.QueryParser$Operator OR>;
        <org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.QueryParser$Operator OR_OPERATOR> = $r0;
        staticinvoke <org.apache.lucene.queryParser.QueryParser: void jj_la1_init_0()>();
        staticinvoke <org.apache.lucene.queryParser.QueryParser: void jj_la1_init_1()>();
        return;
    }
}
