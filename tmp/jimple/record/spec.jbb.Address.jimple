public class spec.jbb.Address extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    private java.lang.String street1;
    private java.lang.String street2;
    private java.lang.String city;
    private java.lang.String state;
    private java.lang.String zip;

    public void <init>()
    {
        spec.jbb.Address this;

        this := @this: spec.jbb.Address;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void setUsingRandom(java.util.Random)
    {
        spec.jbb.Address this;
        java.util.Random r;
        java.lang.String $r0;
        char[] $r1;
        long tid_setUsingRandom;
        java.lang.Thread thread_setUsingRandom;

        this := @this: spec.jbb.Address;
        r := @parameter0: java.util.Random;
        thread_setUsingRandom = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setUsingRandom = virtualinvoke thread_setUsingRandom.<java.lang.Thread: long getId()>();
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,java.util.Random)>(10, 20, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_setUsingRandom, "spec.jbb.Address", 34, $r0);
        this.<spec.jbb.Address: java.lang.String street1> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,java.util.Random)>(10, 20, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_setUsingRandom, "spec.jbb.Address", 35, $r0);
        this.<spec.jbb.Address: java.lang.String street1> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,java.util.Random)>(10, 20, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 126, tid_setUsingRandom, "spec.jbb.Address", 36, $r0);
        this.<spec.jbb.Address: java.lang.String street2> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,java.util.Random)>(10, 20, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 127, tid_setUsingRandom, "spec.jbb.Address", 37, $r0);
        this.<spec.jbb.Address: java.lang.String city> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,java.util.Random)>(2, 2, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 128, tid_setUsingRandom, "spec.jbb.Address", 38, $r0);
        this.<spec.jbb.Address: java.lang.String state> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_n_string(int,int,java.util.Random)>(9, 9, r);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 129, tid_setUsingRandom, "spec.jbb.Address", 39, $r0);
        this.<spec.jbb.Address: java.lang.String zip> = $r0;
        return;
    }

    public void setUsingRandom(short)
    {
        spec.jbb.Address this;
        short warehouseId;
        java.lang.String $r0;
        char[] $r1;
        long tid_setUsingRandom;
        java.lang.Thread thread_setUsingRandom;

        this := @this: spec.jbb.Address;
        warehouseId := @parameter0: short;
        thread_setUsingRandom = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setUsingRandom = virtualinvoke thread_setUsingRandom.<java.lang.Thread: long getId()>();
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,short)>(10, 20, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_setUsingRandom, "spec.jbb.Address", 43, $r0);
        this.<spec.jbb.Address: java.lang.String street1> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,short)>(10, 20, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_setUsingRandom, "spec.jbb.Address", 45, $r0);
        this.<spec.jbb.Address: java.lang.String street1> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,short)>(10, 20, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 126, tid_setUsingRandom, "spec.jbb.Address", 47, $r0);
        this.<spec.jbb.Address: java.lang.String street2> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,short)>(10, 20, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 127, tid_setUsingRandom, "spec.jbb.Address", 49, $r0);
        this.<spec.jbb.Address: java.lang.String city> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_a_string(int,int,short)>(2, 2, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 128, tid_setUsingRandom, "spec.jbb.Address", 50, $r0);
        this.<spec.jbb.Address: java.lang.String state> = $r0;
        $r0 = new java.lang.String;
        $r1 = staticinvoke <spec.jbb.JBButil: char[] create_random_n_string(int,int,short)>(9, 9, warehouseId);
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 129, tid_setUsingRandom, "spec.jbb.Address", 51, $r0);
        this.<spec.jbb.Address: java.lang.String zip> = $r0;
        return;
    }

    public void display()
    {
        spec.jbb.Address this;
        java.io.PrintStream $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;
        long tid_display;
        java.lang.Thread thread_display;

        this := @this: spec.jbb.Address;
        thread_display = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_display = virtualinvoke thread_display.<java.lang.Thread: long getId()>();
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("****** ADDRESS display *********************");
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("     Street 1 is  ");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_display, "spec.jbb.Address", 56, $r2);
        $r2 = this.<spec.jbb.Address: java.lang.String street1>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("     Street 2 is  ");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 126, tid_display, "spec.jbb.Address", 57, $r2);
        $r2 = this.<spec.jbb.Address: java.lang.String street2>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("    City name is  ");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 127, tid_display, "spec.jbb.Address", 58, $r2);
        $r2 = this.<spec.jbb.Address: java.lang.String city>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("   State name is  ");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 128, tid_display, "spec.jbb.Address", 59, $r2);
        $r2 = this.<spec.jbb.Address: java.lang.String state>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("     Zip code is  ");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 129, tid_display, "spec.jbb.Address", 60, $r2);
        $r2 = this.<spec.jbb.Address: java.lang.String zip>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("********************************************");
        return;
    }

    public java.lang.String getStreet1()
    {
        spec.jbb.Address this;
        java.lang.String temp;
        long tid_getStreet1;
        java.lang.Thread thread_getStreet1;

        this := @this: spec.jbb.Address;
        thread_getStreet1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getStreet1 = virtualinvoke thread_getStreet1.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 125, tid_getStreet1, "spec.jbb.Address", 65, temp);
        temp = this.<spec.jbb.Address: java.lang.String street1>;
        return temp;
    }

    public java.lang.String getStreet2()
    {
        spec.jbb.Address this;
        java.lang.String temp;
        long tid_getStreet2;
        java.lang.Thread thread_getStreet2;

        this := @this: spec.jbb.Address;
        thread_getStreet2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getStreet2 = virtualinvoke thread_getStreet2.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 126, tid_getStreet2, "spec.jbb.Address", 70, temp);
        temp = this.<spec.jbb.Address: java.lang.String street2>;
        return temp;
    }

    public java.lang.String getCity()
    {
        spec.jbb.Address this;
        java.lang.String temp;
        long tid_getCity;
        java.lang.Thread thread_getCity;

        this := @this: spec.jbb.Address;
        thread_getCity = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getCity = virtualinvoke thread_getCity.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 127, tid_getCity, "spec.jbb.Address", 75, temp);
        temp = this.<spec.jbb.Address: java.lang.String city>;
        return temp;
    }

    public java.lang.String getState()
    {
        spec.jbb.Address this;
        java.lang.String temp;
        long tid_getState;
        java.lang.Thread thread_getState;

        this := @this: spec.jbb.Address;
        thread_getState = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getState = virtualinvoke thread_getState.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 128, tid_getState, "spec.jbb.Address", 80, temp);
        temp = this.<spec.jbb.Address: java.lang.String state>;
        return temp;
    }

    public java.lang.String getZip()
    {
        spec.jbb.Address this;
        java.lang.String temp;
        long tid_getZip;
        java.lang.Thread thread_getZip;

        this := @this: spec.jbb.Address;
        thread_getZip = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getZip = virtualinvoke thread_getZip.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 129, tid_getZip, "spec.jbb.Address", 85, temp);
        temp = this.<spec.jbb.Address: java.lang.String zip>;
        return temp;
    }
}
