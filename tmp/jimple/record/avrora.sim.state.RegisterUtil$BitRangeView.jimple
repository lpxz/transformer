public class avrora.sim.state.RegisterUtil$BitRangeView extends java.lang.Object implements avrora.sim.state.RegisterView
{
    protected final avrora.sim.state.RegisterView reg;
    protected final byte low;
    protected final byte width;
    protected final int mask;

    public void <init>(avrora.sim.state.RegisterView, byte, byte)
    {
        avrora.sim.state.RegisterUtil$BitRangeView this;
        avrora.sim.state.RegisterView r;
        byte l, h, $b1;
        int $i0;

        this := @this: avrora.sim.state.RegisterUtil$BitRangeView;
        r := @parameter0: avrora.sim.state.RegisterView;
        l := @parameter1: byte;
        h := @parameter2: byte;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<avrora.sim.state.RegisterUtil$BitRangeView: byte low> = l;
        $i0 = staticinvoke <cck.util.Arithmetic: int getBitRangeMask(int,int)>(l, h);
        this.<avrora.sim.state.RegisterUtil$BitRangeView: int mask> = $i0;
        $i0 = h - l;
        $i0 = $i0 + 1;
        $b1 = (byte) $i0;
        this.<avrora.sim.state.RegisterUtil$BitRangeView: byte width> = $b1;
        this.<avrora.sim.state.RegisterUtil$BitRangeView: avrora.sim.state.RegisterView reg> = r;
        return;
    }

    public int getWidth()
    {
        avrora.sim.state.RegisterUtil$BitRangeView this;
        byte $b0;

        this := @this: avrora.sim.state.RegisterUtil$BitRangeView;
        $b0 = this.<avrora.sim.state.RegisterUtil$BitRangeView: byte width>;
        return $b0;
    }

    public int getValue()
    {
        avrora.sim.state.RegisterUtil$BitRangeView this;
        avrora.sim.state.RegisterView $r0;
        int $i0, $i1;
        byte $b2;

        this := @this: avrora.sim.state.RegisterUtil$BitRangeView;
        $r0 = this.<avrora.sim.state.RegisterUtil$BitRangeView: avrora.sim.state.RegisterView reg>;
        $i0 = interfaceinvoke $r0.<avrora.sim.state.RegisterView: int getValue()>();
        $i1 = this.<avrora.sim.state.RegisterUtil$BitRangeView: int mask>;
        $i0 = $i0 & $i1;
        $b2 = this.<avrora.sim.state.RegisterUtil$BitRangeView: byte low>;
        $i0 = $i0 >> $b2;
        return $i0;
    }

    public void setValue(int)
    {
        avrora.sim.state.RegisterUtil$BitRangeView this;
        int val, $i0, $i1, $i3;
        avrora.sim.state.RegisterView $r0, $r1;
        byte $b2;

        this := @this: avrora.sim.state.RegisterUtil$BitRangeView;
        val := @parameter0: int;
        $r0 = this.<avrora.sim.state.RegisterUtil$BitRangeView: avrora.sim.state.RegisterView reg>;
        $r1 = this.<avrora.sim.state.RegisterUtil$BitRangeView: avrora.sim.state.RegisterView reg>;
        $i0 = interfaceinvoke $r1.<avrora.sim.state.RegisterView: int getValue()>();
        $i1 = this.<avrora.sim.state.RegisterUtil$BitRangeView: int mask>;
        $i1 = $i1 ^ -1;
        $i0 = $i0 & $i1;
        $b2 = this.<avrora.sim.state.RegisterUtil$BitRangeView: byte low>;
        $i1 = val << $b2;
        $i3 = this.<avrora.sim.state.RegisterUtil$BitRangeView: int mask>;
        $i1 = $i1 & $i3;
        $i0 = $i0 | $i1;
        interfaceinvoke $r0.<avrora.sim.state.RegisterView: void setValue(int)>($i0);
        return;
    }
}
