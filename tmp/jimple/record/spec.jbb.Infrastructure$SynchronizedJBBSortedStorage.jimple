class spec.jbb.Infrastructure$SynchronizedJBBSortedStorage extends spec.jbb.Infrastructure$SynchronizedJBBDataStorage implements spec.jbb.JBBSortedStorage
{

    void <init>(spec.jbb.JBBSortedStorage)
    {
        spec.jbb.Infrastructure$SynchronizedJBBSortedStorage this;
        spec.jbb.JBBSortedStorage s;

        this := @this: spec.jbb.Infrastructure$SynchronizedJBBSortedStorage;
        s := @parameter0: spec.jbb.JBBSortedStorage;
        specialinvoke this.<spec.jbb.Infrastructure$SynchronizedJBBDataStorage: void <init>(spec.jbb.JBBDataStorage)>(s);
        return;
    }

    public java.lang.Object removeFirstElem()
    {
        spec.jbb.Infrastructure$SynchronizedJBBSortedStorage this;
        spec.jbb.JBBDataStorage l1, $r0;
        spec.jbb.JBBSortedStorage $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        long tid_removeFirstElem;
        java.lang.Thread thread_removeFirstElem;

        this := @this: spec.jbb.Infrastructure$SynchronizedJBBSortedStorage;
        thread_removeFirstElem = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_removeFirstElem = virtualinvoke thread_removeFirstElem.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        l1 = $r0;
        entermonitor $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>($r0, 2, tid_removeFirstElem);

     label0:
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        $r1 = (spec.jbb.JBBSortedStorage) $r0;
        $r2 = interfaceinvoke $r1.<spec.jbb.JBBSortedStorage: java.lang.Object removeFirstElem()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l1, 2, tid_removeFirstElem);
        exitmonitor l1;

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l1, 2, tid_removeFirstElem);
        exitmonitor l1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean deleteFirstEntities(int)
    {
        spec.jbb.Infrastructure$SynchronizedJBBSortedStorage this;
        int quant;
        spec.jbb.JBBDataStorage l2, $r0;
        spec.jbb.JBBSortedStorage $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        long tid_deleteFirstEntities;
        java.lang.Thread thread_deleteFirstEntities;

        this := @this: spec.jbb.Infrastructure$SynchronizedJBBSortedStorage;
        quant := @parameter0: int;
        thread_deleteFirstEntities = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_deleteFirstEntities = virtualinvoke thread_deleteFirstEntities.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        l2 = $r0;
        entermonitor $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>($r0, 2, tid_deleteFirstEntities);

     label0:
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        $r1 = (spec.jbb.JBBSortedStorage) $r0;
        $z0 = interfaceinvoke $r1.<spec.jbb.JBBSortedStorage: boolean deleteFirstEntities(int)>(quant);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l2, 2, tid_deleteFirstEntities);
        exitmonitor l2;

     label1:
        return $z0;

     label2:
        $r2 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l2, 2, tid_deleteFirstEntities);
        exitmonitor l2;

     label4:
        throw $r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public boolean deleteFirstEntities()
    {
        spec.jbb.Infrastructure$SynchronizedJBBSortedStorage this;
        spec.jbb.JBBDataStorage l1, $r0;
        spec.jbb.JBBSortedStorage $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        long tid_deleteFirstEntities;
        java.lang.Thread thread_deleteFirstEntities;

        this := @this: spec.jbb.Infrastructure$SynchronizedJBBSortedStorage;
        thread_deleteFirstEntities = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_deleteFirstEntities = virtualinvoke thread_deleteFirstEntities.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        l1 = $r0;
        entermonitor $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>($r0, 2, tid_deleteFirstEntities);

     label0:
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        $r1 = (spec.jbb.JBBSortedStorage) $r0;
        $z0 = interfaceinvoke $r1.<spec.jbb.JBBSortedStorage: boolean deleteFirstEntities()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l1, 2, tid_deleteFirstEntities);
        exitmonitor l1;

     label1:
        return $z0;

     label2:
        $r2 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l1, 2, tid_deleteFirstEntities);
        exitmonitor l1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object getMedianValue(java.lang.Object, java.lang.Object)
    {
        spec.jbb.Infrastructure$SynchronizedJBBSortedStorage this;
        java.lang.Object firstKey, lastKey, $r2;
        spec.jbb.JBBDataStorage l3, $r0;
        spec.jbb.JBBSortedStorage $r1;
        java.lang.Throwable $r3;
        long tid_getMedianValue;
        java.lang.Thread thread_getMedianValue;

        this := @this: spec.jbb.Infrastructure$SynchronizedJBBSortedStorage;
        firstKey := @parameter0: java.lang.Object;
        lastKey := @parameter1: java.lang.Object;
        thread_getMedianValue = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getMedianValue = virtualinvoke thread_getMedianValue.<java.lang.Thread: long getId()>();
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        l3 = $r0;
        entermonitor $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>($r0, 2, tid_getMedianValue);

     label0:
        $r0 = this.<spec.jbb.Infrastructure$SynchronizedJBBSortedStorage: spec.jbb.JBBDataStorage s>;
        $r1 = (spec.jbb.JBBSortedStorage) $r0;
        $r2 = interfaceinvoke $r1.<spec.jbb.JBBSortedStorage: java.lang.Object getMedianValue(java.lang.Object,java.lang.Object)>(firstKey, lastKey);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l3, 2, tid_getMedianValue);
        exitmonitor l3;

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(l3, 2, tid_getMedianValue);
        exitmonitor l3;

     label4:
        throw $r3;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
