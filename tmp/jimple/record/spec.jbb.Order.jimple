public class spec.jbb.Order extends java.lang.Object
{
    static final java.lang.String COPYRIGHT;
    private spec.jbb.Company company;
    private spec.jbb.Customer customerPtr;
    private spec.jbb.Orderline[] orderlineList;
    private java.math.BigDecimal totalAmount;
    private java.math.BigDecimal customerDiscountRate;
    private java.math.BigDecimal districtTax;
    private java.math.BigDecimal warehouseTax;
    private java.util.Date entryDateTime;
    private int orderId;
    private short customerId;
    private short carrierId;
    private short orderLineCount;
    private byte districtId;
    private short warehouseId;
    private boolean allLocal;

    public void <init>(spec.jbb.Company, int, byte, short, short, spec.jbb.Customer, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal)
    {
        spec.jbb.Order this;
        spec.jbb.Company inCompany;
        int inOrderId;
        byte inDistrictId;
        short inWarehouseId, inCustomerId;
        spec.jbb.Customer inCustomerPtr;
        java.math.BigDecimal inDistrictTaxRate, inWarehouseTaxRate, inCustomerDiscountRate;

        this := @this: spec.jbb.Order;
        inCompany := @parameter0: spec.jbb.Company;
        inOrderId := @parameter1: int;
        inDistrictId := @parameter2: byte;
        inWarehouseId := @parameter3: short;
        inCustomerId := @parameter4: short;
        inCustomerPtr := @parameter5: spec.jbb.Customer;
        inDistrictTaxRate := @parameter6: java.math.BigDecimal;
        inWarehouseTaxRate := @parameter7: java.math.BigDecimal;
        inCustomerDiscountRate := @parameter8: java.math.BigDecimal;
        specialinvoke this.<java.lang.Object: void <init>()>();
        virtualinvoke this.<spec.jbb.Order: void initOrder(spec.jbb.Company,int,byte,short,short,spec.jbb.Customer,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)>(inCompany, inOrderId, inDistrictId, inWarehouseId, inCustomerId, inCustomerPtr, inDistrictTaxRate, inWarehouseTaxRate, inCustomerDiscountRate);
        return;
    }

    public void initOrder(spec.jbb.Company, int, byte, short, short, spec.jbb.Customer, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal)
    {
        spec.jbb.Order this;
        spec.jbb.Company inCompany;
        int inOrderId, $i0;
        byte inDistrictId;
        short inWarehouseId, inCustomerId;
        spec.jbb.Customer inCustomerPtr;
        java.math.BigDecimal inDistrictTaxRate, inWarehouseTaxRate, inCustomerDiscountRate;
        spec.jbb.Orderline[] $r0, $r4;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        java.util.Date $r6;
        long tid_initOrder;
        java.lang.Thread thread_initOrder;

        this := @this: spec.jbb.Order;
        inCompany := @parameter0: spec.jbb.Company;
        inOrderId := @parameter1: int;
        inDistrictId := @parameter2: byte;
        inWarehouseId := @parameter3: short;
        inCustomerId := @parameter4: short;
        inCustomerPtr := @parameter5: spec.jbb.Customer;
        inDistrictTaxRate := @parameter6: java.math.BigDecimal;
        inWarehouseTaxRate := @parameter7: java.math.BigDecimal;
        inCustomerDiscountRate := @parameter8: java.math.BigDecimal;
        thread_initOrder = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_initOrder = virtualinvoke thread_initOrder.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 110, tid_initOrder, "spec.jbb.Order", 68, inCompany);
        this.<spec.jbb.Order: spec.jbb.Company company> = inCompany;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 111, tid_initOrder, "spec.jbb.Order", 69, inOrderId);
        this.<spec.jbb.Order: int orderId> = inOrderId;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>(this, 112, tid_initOrder, "spec.jbb.Order", 70, inDistrictId);
        this.<spec.jbb.Order: byte districtId> = inDistrictId;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_initOrder, "spec.jbb.Order", 71, inWarehouseId);
        this.<spec.jbb.Order: short warehouseId> = inWarehouseId;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 114, tid_initOrder, "spec.jbb.Order", 72, inCustomerId);
        this.<spec.jbb.Order: short customerId> = inCustomerId;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 115, tid_initOrder, "spec.jbb.Order", 73, inCustomerPtr);
        this.<spec.jbb.Order: spec.jbb.Customer customerPtr> = inCustomerPtr;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 116, tid_initOrder, "spec.jbb.Order", 74, 0);
        this.<spec.jbb.Order: short orderLineCount> = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,int)>(76, tid_initOrder, "spec.jbbspec.jbb.Order", 75, $i0);
        $i0 = <spec.jbb.Transaction: int aveOrderlines>;
        $i0 = $i0 + 10;
        $r0 = newarray (spec.jbb.Orderline)[$i0];
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_initOrder, "spec.jbb.Order", 75, $r0);
        this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList> = $r0;
        $r1 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r2 = <java.util.logging.Level: java.util.logging.Level FINEST>;
        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);
        if $z0 == 0 goto label0;

        $r1 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Order::initOrder  orderlineList=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_initOrder, "spec.jbb.Order", 78, $r4);
        $r4 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r1.<java.util.logging.Logger: void finest(java.lang.String)>($r5);

     label0:
        $r6 = new java.util.Date;
        specialinvoke $r6.<java.util.Date: void <init>()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 118, tid_initOrder, "spec.jbb.Order", 80, $r6);
        this.<spec.jbb.Order: java.util.Date entryDateTime> = $r6;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 119, tid_initOrder, "spec.jbb.Order", 81, 0);
        this.<spec.jbb.Order: short carrierId> = 0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 120, tid_initOrder, "spec.jbb.Order", 82, 1);
        this.<spec.jbb.Order: boolean allLocal> = 1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 121, tid_initOrder, "spec.jbb.Order", 83, inDistrictTaxRate);
        this.<spec.jbb.Order: java.math.BigDecimal districtTax> = inDistrictTaxRate;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_initOrder, "spec.jbb.Order", 84, inWarehouseTaxRate);
        this.<spec.jbb.Order: java.math.BigDecimal warehouseTax> = inWarehouseTaxRate;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_initOrder, "spec.jbb.Order", 85, inCustomerDiscountRate);
        this.<spec.jbb.Order: java.math.BigDecimal customerDiscountRate> = inCustomerDiscountRate;
        return;
    }

    public boolean processLines(spec.jbb.Warehouse, short, boolean)
    {
        spec.jbb.Order this;
        spec.jbb.Warehouse inWarehousePtr;
        short number_of_orderlines, LineNumber, supplyWarehouseId, $s2, $s3, $s5, $s6;
        boolean rollback, processLinesResult, $z0;
        java.math.BigDecimal amount, subtotal, $r4, $r7, $r8, $r9;
        spec.jbb.Orderline newOrderline, $r0;
        spec.jbb.Company $r1, $r2, $r3;
        int $i0, $i4, $i7;
        byte $b1;
        spec.jbb.Orderline[] $r5;
        long tid_processLines;
        java.lang.Thread thread_processLines;

        this := @this: spec.jbb.Order;
        inWarehousePtr := @parameter0: spec.jbb.Warehouse;
        number_of_orderlines := @parameter1: short;
        rollback := @parameter2: boolean;
        thread_processLines = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_processLines = virtualinvoke thread_processLines.<java.lang.Thread: long getId()>();
        processLinesResult = 1;
        amount = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(0L, 2);
        LineNumber = 1;
        goto label6;

     label0:
        $r0 = new spec.jbb.Orderline;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 110, tid_processLines, "spec.jbb.Order", 94, $r1);
        $r1 = this.<spec.jbb.Order: spec.jbb.Company company>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 111, tid_processLines, "spec.jbb.Order", 94, $i0);
        $i0 = this.<spec.jbb.Order: int orderId>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>(this, 112, tid_processLines, "spec.jbb.Order", 95, $b1);
        $b1 = this.<spec.jbb.Order: byte districtId>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_processLines, "spec.jbb.Order", 95, $s2);
        $s2 = this.<spec.jbb.Order: short warehouseId>;
        specialinvoke $r0.<spec.jbb.Orderline: void <init>(spec.jbb.Company,int,byte,short,short,short,boolean)>($r1, $i0, $b1, $s2, LineNumber, number_of_orderlines, rollback);
        newOrderline = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_processLines, "spec.jbb.Order", 97, supplyWarehouseId);
        supplyWarehouseId = this.<spec.jbb.Order: short warehouseId>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_processLines, "spec.jbb.Order", 98, $s3);
        $s3 = this.<spec.jbb.Order: short warehouseId>;
        $i4 = staticinvoke <spec.jbb.JBButil: int random(int,int,short)>(1, 100, $s3);
        if $i4 != 1 goto label3;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 110, tid_processLines, "spec.jbb.Order", 99, $r2);
        $r2 = this.<spec.jbb.Order: spec.jbb.Company company>;
        $s5 = virtualinvoke $r2.<spec.jbb.Company: short getMaxWarehouses()>();
        if $s5 <= 1 goto label3;

        goto label2;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 110, tid_processLines, "spec.jbb.Order", 102, $r3);
        $r3 = this.<spec.jbb.Order: spec.jbb.Company company>;
        $s6 = virtualinvoke $r3.<spec.jbb.Company: short getMaxWarehouses()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_processLines, "spec.jbb.Order", 103, $s3);
        $s3 = this.<spec.jbb.Order: short warehouseId>;
        $i4 = staticinvoke <spec.jbb.JBButil: int random(int,int,short)>(1, $s6, $s3);
        supplyWarehouseId = (short) $i4;

     label2:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 113, tid_processLines, "spec.jbb.Order", 101, $s6);
        $s6 = this.<spec.jbb.Order: short warehouseId>;
        if supplyWarehouseId == $s6 goto label1;

        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 120, tid_processLines, "spec.jbb.Order", 105, 0);
        this.<spec.jbb.Order: boolean allLocal> = 0;

     label3:
        virtualinvoke newOrderline.<spec.jbb.Orderline: void setSupplyWarehouse(short)>(supplyWarehouseId);
        $z0 = virtualinvoke newOrderline.<spec.jbb.Orderline: boolean validateAndProcess(spec.jbb.Warehouse)>(inWarehousePtr);
        if $z0 == 0 goto label4;

        $r4 = virtualinvoke newOrderline.<spec.jbb.Orderline: java.math.BigDecimal getAmount()>();
        amount = virtualinvoke amount.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_processLines, "spec.jbb.Order", 110, $r5);
        $r5 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_processLines, "spec.jbb.Order", 110, $s6);
        $s6 = this.<spec.jbb.Order: short orderLineCount>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r5, 86, tid_processLines, "spec.jbb.Order", 110, $s6, newOrderline);
        $r5[$s6] = newOrderline;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_processLines, "spec.jbb.Order", 111, $s6);
        $s6 = this.<spec.jbb.Order: short orderLineCount>;
        $i7 = $s6 + 1;
        $s6 = (short) $i7;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_processLines, "spec.jbb.Order", 111, $s6);
        this.<spec.jbb.Order: short orderLineCount> = $s6;
        goto label5;

     label4:
        processLinesResult = 0;

     label5:
        $i4 = LineNumber + 1;
        LineNumber = (short) $i4;

     label6:
        if LineNumber <= number_of_orderlines goto label0;

        $r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, 0);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 123, tid_processLines, "spec.jbb.Order", 118, $r7);
        $r7 = this.<spec.jbb.Order: java.math.BigDecimal customerDiscountRate>;
        $r4 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r7);
        $r8 = virtualinvoke amount.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r4);
        subtotal = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);
        $r7 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(1L, 0);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 122, tid_processLines, "spec.jbb.Order", 121, $r9);
        $r9 = this.<spec.jbb.Order: java.math.BigDecimal warehouseTax>;
        $r7 = virtualinvoke $r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r9);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 121, tid_processLines, "spec.jbb.Order", 121, $r9);
        $r9 = this.<spec.jbb.Order: java.math.BigDecimal districtTax>;
        $r7 = virtualinvoke $r7.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r9);
        $r4 = virtualinvoke subtotal.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
        $r4 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_processLines, "spec.jbb.Order", 120, $r4);
        this.<spec.jbb.Order: java.math.BigDecimal totalAmount> = $r4;
        return processLinesResult;
    }

    public void dateOrderlines(java.util.Date)
    {
        spec.jbb.Order this;
        java.util.Date orderdate;
        java.util.logging.Logger $r0;
        java.util.logging.Level $r1;
        int i;
        spec.jbb.Orderline orderline;
        boolean $z0;
        java.lang.StringBuilder $r2;
        spec.jbb.Orderline[] $r3, $r5;
        short $s0, $s1;
        java.lang.String $r4;
        long tid_dateOrderlines;
        java.lang.Thread thread_dateOrderlines;

        this := @this: spec.jbb.Order;
        orderdate := @parameter0: java.util.Date;
        thread_dateOrderlines = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_dateOrderlines = virtualinvoke thread_dateOrderlines.<java.lang.Thread: long getId()>();
        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r1 = <java.util.logging.Level: java.util.logging.Level FINEST>;
        $z0 = virtualinvoke $r0.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        if $z0 == 0 goto label0;

        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Order::dateOrderlines  orderlineList=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_dateOrderlines, "spec.jbb.Order", 131, $r3);
        $r3 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" orderlineCount=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_dateOrderlines, "spec.jbb.Order", 132, $s0);
        $s0 = this.<spec.jbb.Order: short orderLineCount>;
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.util.logging.Logger: void finest(java.lang.String)>($r4);

     label0:
        i = 0;
        goto label3;

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_dateOrderlines, "spec.jbb.Order", 135, $r5);
        $r5 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeArrayElem(java.lang.Object,int,long,java.lang.String,int,int,java.lang.Object)>($r5, 86, tid_dateOrderlines, "spec.jbb.Order", 135, i, orderline);
        orderline = $r5[i];
        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r1 = <java.util.logging.Level: java.util.logging.Level FINEST>;
        $z0 = virtualinvoke $r0.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        if $z0 == 0 goto label2;

        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" orderline=");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(orderline);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" orderline#=");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.util.logging.Logger: void finest(java.lang.String)>($r4);

     label2:
        virtualinvoke orderline.<spec.jbb.Orderline: void setDeliveryTime(java.util.Date)>(orderdate);
        i = i + 1;

     label3:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_dateOrderlines, "spec.jbb.Order", 134, $s1);
        $s1 = this.<spec.jbb.Order: short orderLineCount>;
        if i < $s1 goto label1;

        return;
    }

    public int getId()
    {
        spec.jbb.Order this;
        int temp;
        long tid_getId;
        java.lang.Thread thread_getId;

        this := @this: spec.jbb.Order;
        thread_getId = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getId = virtualinvoke thread_getId.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 111, tid_getId, "spec.jbb.Order", 146, temp);
        temp = this.<spec.jbb.Order: int orderId>;
        return temp;
    }

    public spec.jbb.Customer getCustomerPtr()
    {
        spec.jbb.Order this;
        spec.jbb.Customer temp;
        long tid_getCustomerPtr;
        java.lang.Thread thread_getCustomerPtr;

        this := @this: spec.jbb.Order;
        thread_getCustomerPtr = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getCustomerPtr = virtualinvoke thread_getCustomerPtr.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 115, tid_getCustomerPtr, "spec.jbb.Order", 151, temp);
        temp = this.<spec.jbb.Order: spec.jbb.Customer customerPtr>;
        return temp;
    }

    public java.math.BigDecimal getTotalAmount()
    {
        spec.jbb.Order this;
        java.math.BigDecimal temp;
        long tid_getTotalAmount;
        java.lang.Thread thread_getTotalAmount;

        this := @this: spec.jbb.Order;
        thread_getTotalAmount = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getTotalAmount = virtualinvoke thread_getTotalAmount.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 124, tid_getTotalAmount, "spec.jbb.Order", 156, temp);
        temp = this.<spec.jbb.Order: java.math.BigDecimal totalAmount>;
        return temp;
    }

    public java.util.Date getEntryTime()
    {
        spec.jbb.Order this;
        java.util.Date temp;
        long tid_getEntryTime;
        java.lang.Thread thread_getEntryTime;

        this := @this: spec.jbb.Order;
        thread_getEntryTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getEntryTime = virtualinvoke thread_getEntryTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 118, tid_getEntryTime, "spec.jbb.Order", 161, temp);
        temp = this.<spec.jbb.Order: java.util.Date entryDateTime>;
        return temp;
    }

    public void setCarrierId(short)
    {
        spec.jbb.Order this;
        short inCarrierId;
        long tid_setCarrierId;
        java.lang.Thread thread_setCarrierId;

        this := @this: spec.jbb.Order;
        inCarrierId := @parameter0: short;
        thread_setCarrierId = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setCarrierId = virtualinvoke thread_setCarrierId.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 119, tid_setCarrierId, "spec.jbb.Order", 166, inCarrierId);
        this.<spec.jbb.Order: short carrierId> = inCarrierId;
        return;
    }

    public short getCarrierId()
    {
        spec.jbb.Order this;
        short temp;
        long tid_getCarrierId;
        java.lang.Thread thread_getCarrierId;

        this := @this: spec.jbb.Order;
        thread_getCarrierId = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getCarrierId = virtualinvoke thread_getCarrierId.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 119, tid_getCarrierId, "spec.jbb.Order", 170, temp);
        temp = this.<spec.jbb.Order: short carrierId>;
        return temp;
    }

    public spec.jbb.Orderline[] getOrderlineList()
    {
        spec.jbb.Order this;
        java.util.logging.Logger $r0;
        java.util.logging.Level $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        spec.jbb.Orderline[] $r3, $r5;
        java.lang.String $r4;
        long tid_getOrderlineList;
        java.lang.Thread thread_getOrderlineList;

        this := @this: spec.jbb.Order;
        thread_getOrderlineList = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getOrderlineList = virtualinvoke thread_getOrderlineList.<java.lang.Thread: long getId()>();
        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r1 = <java.util.logging.Level: java.util.logging.Level FINEST>;
        $z0 = virtualinvoke $r0.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);
        if $z0 == 0 goto label0;

        $r0 = staticinvoke <spec.jbb.JBButil: java.util.logging.Logger getLog()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Order::getOrderlineList  orderlineList=");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_getOrderlineList, "spec.jbb.Order", 177, $r3);
        $r3 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r0.<java.util.logging.Logger: void finest(java.lang.String)>($r4);

     label0:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 117, tid_getOrderlineList, "spec.jbb.Order", 179, $r5);
        $r5 = this.<spec.jbb.Order: spec.jbb.Orderline[] orderlineList>;
        return $r5;
    }

    public short getOrderlineCount()
    {
        spec.jbb.Order this;
        short temp;
        long tid_getOrderlineCount;
        java.lang.Thread thread_getOrderlineCount;

        this := @this: spec.jbb.Order;
        thread_getOrderlineCount = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getOrderlineCount = virtualinvoke thread_getOrderlineCount.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,short)>(this, 116, tid_getOrderlineCount, "spec.jbb.Order", 183, temp);
        temp = this.<spec.jbb.Order: short orderLineCount>;
        return temp;
    }

    public void setAllLocal(boolean)
    {
        spec.jbb.Order this;
        boolean inAllLocal;
        long tid_setAllLocal;
        java.lang.Thread thread_setAllLocal;

        this := @this: spec.jbb.Order;
        inAllLocal := @parameter0: boolean;
        thread_setAllLocal = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setAllLocal = virtualinvoke thread_setAllLocal.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,boolean)>(this, 120, tid_setAllLocal, "spec.jbb.Order", 188, inAllLocal);
        this.<spec.jbb.Order: boolean allLocal> = inAllLocal;
        return;
    }

    public void setEntryDateTime(java.util.Date)
    {
        spec.jbb.Order this;
        java.util.Date inEntryDateTime;
        long tid_setEntryDateTime;
        java.lang.Thread thread_setEntryDateTime;

        this := @this: spec.jbb.Order;
        inEntryDateTime := @parameter0: java.util.Date;
        thread_setEntryDateTime = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_setEntryDateTime = virtualinvoke thread_setEntryDateTime.<java.lang.Thread: long getId()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,java.lang.Object)>(this, 118, tid_setEntryDateTime, "spec.jbb.Order", 192, inEntryDateTime);
        this.<spec.jbb.Order: java.util.Date entryDateTime> = inEntryDateTime;
        return;
    }
}
