public class avrora.arch.ArchitectureRegistry extends java.lang.Object
{
    private static cck.util.ClassMap archMap;

    public void <init>()
    {
        avrora.arch.ArchitectureRegistry this;

        this := @this: avrora.arch.ArchitectureRegistry;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void addArchitectures()
    {
        cck.util.ClassMap $r0, $r1;
        cck.help.HelpCategory hc, $r5;
        avrora.arch.legacy.LegacyArchitecture $r2;
        avrora.arch.avr.AVRArchitecture $r3;
        avrora.arch.msp430.MSP430Architecture $r4;
        java.lang.Class locallockaddArchitectures;
        java.lang.Throwable throwableLocal19;
        long tid_addArchitectures;
        java.lang.Thread thread_addArchitectures;

        thread_addArchitectures = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_addArchitectures = virtualinvoke thread_addArchitectures.<java.lang.Thread: long getId()>();
        nop;
        locallockaddArchitectures = class "avrora/arch/ArchitectureRegistry";

     label0:
        entermonitor locallockaddArchitectures;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void enterMonitorAfter(java.lang.Object,int,long)>(locallockaddArchitectures, 1, tid_addArchitectures);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 55, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        if $r0 != null goto label1;

        $r0 = new cck.util.ClassMap;
        specialinvoke $r0.<cck.util.ClassMap: void <init>(java.lang.String,java.lang.Class)>("Architecture", class "avrora/arch/AbstractArchitecture");
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 56, $r0);
        <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap> = $r0;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 58, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        $r2 = <avrora.arch.legacy.LegacyArchitecture: avrora.arch.legacy.LegacyArchitecture INSTANCE>;
        virtualinvoke $r0.<cck.util.ClassMap: void addInstance(java.lang.String,java.lang.Object)>("avr", $r2);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 59, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        $r3 = <avrora.arch.avr.AVRArchitecture: avrora.arch.avr.AVRArchitecture INSTANCE>;
        virtualinvoke $r0.<cck.util.ClassMap: void addInstance(java.lang.String,java.lang.Object)>("avr-new", $r3);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 60, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        $r4 = <avrora.arch.msp430.MSP430Architecture: avrora.arch.msp430.MSP430Architecture INSTANCE>;
        virtualinvoke $r0.<cck.util.ClassMap: void addInstance(java.lang.String,java.lang.Object)>("msp430", $r4);
        $r5 = new cck.help.HelpCategory;
        specialinvoke $r5.<cck.help.HelpCategory: void <init>(java.lang.String,java.lang.String)>("architectures", "Help for supported instruction set architectures.");
        hc = $r5;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 64, $r1);
        $r1 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        virtualinvoke hc.<cck.help.HelpCategory: void addOptionValueSection(java.lang.String,java.lang.String,java.lang.String,cck.util.ClassMap)>("ARCHITECTURES", "When running a simulation or other program analysis tool, Avrora derives information about the CPU architecture from an internal specification. In order to select the appropriate architecture, each one is named and can be selected with command line options.", "-arch", $r1);
        staticinvoke <avrora.Defaults: void addMainCategory(cck.help.HelpCategory)>(hc);
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_addArchitectures, "avrora.archavrora.arch.ArchitectureRegistry", 70, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        staticinvoke <avrora.Defaults: void addSubCategories(cck.util.ClassMap)>($r0);

     label1:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(locallockaddArchitectures, 1, tid_addArchitectures);
        exitmonitor locallockaddArchitectures;
        goto label2;

     label2:
        return;

     label3:
        throwableLocal19 := @caughtexception;

     label4:
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void exitMonitorBefore(java.lang.Object,int,long)>(locallockaddArchitectures, 1, tid_addArchitectures);
        exitmonitor locallockaddArchitectures;

     label5:
        throw throwableLocal19;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static avrora.arch.AbstractArchitecture getArchitecture(java.lang.String)
    {
        java.lang.String s;
        cck.util.ClassMap $r0;
        java.lang.Object $r1;
        avrora.arch.AbstractArchitecture $r2;
        long tid_getArchitecture;
        java.lang.Thread thread_getArchitecture;

        s := @parameter0: java.lang.String;
        thread_getArchitecture = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_getArchitecture = virtualinvoke thread_getArchitecture.<java.lang.Thread: long getId()>();
        staticinvoke <avrora.arch.ArchitectureRegistry: void addArchitectures()>();
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeStatic(int,long,java.lang.String,int,java.lang.Object)>(190, tid_getArchitecture, "avrora.archavrora.arch.ArchitectureRegistry", 76, $r0);
        $r0 = <avrora.arch.ArchitectureRegistry: cck.util.ClassMap archMap>;
        $r1 = virtualinvoke $r0.<cck.util.ClassMap: java.lang.Object getObjectOfClass(java.lang.String)>(s);
        $r2 = (avrora.arch.AbstractArchitecture) $r1;
        return $r2;
    }
}
