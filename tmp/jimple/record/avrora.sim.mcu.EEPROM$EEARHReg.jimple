public class avrora.sim.mcu.EEPROM$EEARHReg extends avrora.sim.RWRegister
{
    final avrora.sim.mcu.EEPROM this$0;

    protected void <init>(avrora.sim.mcu.EEPROM)
    {
        avrora.sim.mcu.EEPROM$EEARHReg this;
        avrora.sim.mcu.EEPROM l1;

        this := @this: avrora.sim.mcu.EEPROM$EEARHReg;
        l1 := @parameter0: avrora.sim.mcu.EEPROM;
        this.<avrora.sim.mcu.EEPROM$EEARHReg: avrora.sim.mcu.EEPROM this$0> = l1;
        specialinvoke this.<avrora.sim.RWRegister: void <init>()>();
        return;
    }

    public void write(byte)
    {
        avrora.sim.mcu.EEPROM$EEARHReg this;
        byte val, $b2;
        avrora.sim.mcu.EEPROM $r0, $r1;
        boolean $z0;
        int $i0, $i1;
        long tid_write;
        java.lang.Thread thread_write;

        this := @this: avrora.sim.mcu.EEPROM$EEARHReg;
        val := @parameter0: byte;
        thread_write = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_write = virtualinvoke thread_write.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.mcu.EEPROM$EEARHReg: avrora.sim.mcu.EEPROM this$0>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,boolean)>($r0, 94, tid_write, "avrora.sim.mcu.EEPROM$EEARHReg", 124, $z0);
        $z0 = $r0.<avrora.sim.mcu.EEPROM: boolean writeEnable>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<avrora.sim.mcu.EEPROM$EEARHReg: avrora.sim.mcu.EEPROM this$0>;
        $i0 = $r1.<avrora.sim.mcu.EEPROM: int EEPROM_SIZE>;
        $i0 = $i0 >> 8;
        $i0 = $i0 - 1;
        $i1 = val & $i0;
        $b2 = (byte) $i1;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,byte)>(this, 17, tid_write, "avrora.sim.mcu.EEPROM$EEARHReg", 126, $b2);
        this.<avrora.sim.mcu.EEPROM$EEARHReg: byte value> = $b2;
        return;
    }
}
