public class avrora.sim.mcu.ADC extends avrora.sim.mcu.AtmelInternalDevice
{
    public static final float VBG_LEVEL;
    public static final float GND_LEVEL;
    private final avrora.sim.mcu.ADC$ADCInput VBG_INPUT;
    private static final avrora.sim.mcu.ADC$ADCInput GND_INPUT;
    final avrora.sim.mcu.ADC$MUXRegister ADMUX_reg;
    final avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg;
    final avrora.sim.RWRegister ADCH_reg;
    final avrora.sim.RWRegister ADCL_reg;
    final int channels;
    final int interruptNum;
    final avrora.sim.mcu.ADC$ADCInput[] connectedDevices;
    float voltageRef;
    static final byte[] SINGLE_ENDED_INPUT;
    static final short[] GAIN;
    static final byte[] POS_INPUT;
    static final byte[] NEG_INPUT;
    static final short[] PRESCALER;

    public void <init>(avrora.sim.mcu.AtmelMicrocontroller, int)
    {
        avrora.sim.mcu.ADC this;
        avrora.sim.mcu.AtmelMicrocontroller m;
        int channels, $i0, $i1;
        avrora.sim.mcu.ADC$1 $r0;
        avrora.sim.mcu.ADC$MUXRegister $r1, $r8;
        avrora.sim.mcu.ADC$ControlRegister $r2, $r10;
        avrora.sim.RWRegister $r3, $r9;
        avrora.sim.mcu.ADC$ADCInput[] $r4, $r5;
        avrora.sim.mcu.ADC$ADCInput $r6;
        avrora.sim.mcu.MCUProperties $r7;
        avrora.sim.AtmelInterpreter $r11;
        avrora.sim.InterruptTable $r12;

        this := @this: avrora.sim.mcu.ADC;
        m := @parameter0: avrora.sim.mcu.AtmelMicrocontroller;
        channels := @parameter1: int;
        specialinvoke this.<avrora.sim.mcu.AtmelInternalDevice: void <init>(java.lang.String,avrora.sim.mcu.AtmelMicrocontroller)>("adc", m);
        $r0 = new avrora.sim.mcu.ADC$1;
        specialinvoke $r0.<avrora.sim.mcu.ADC$1: void <init>(avrora.sim.mcu.ADC)>(this);
        this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput VBG_INPUT> = $r0;
        $r1 = new avrora.sim.mcu.ADC$MUXRegister;
        specialinvoke $r1.<avrora.sim.mcu.ADC$MUXRegister: void <init>(avrora.sim.mcu.ADC)>(this);
        this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg> = $r1;
        $r2 = new avrora.sim.mcu.ADC$ControlRegister;
        specialinvoke $r2.<avrora.sim.mcu.ADC$ControlRegister: void <init>(avrora.sim.mcu.ADC)>(this);
        this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg> = $r2;
        $r3 = new avrora.sim.RWRegister;
        specialinvoke $r3.<avrora.sim.RWRegister: void <init>()>();
        this.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCH_reg> = $r3;
        $r3 = new avrora.sim.RWRegister;
        specialinvoke $r3.<avrora.sim.RWRegister: void <init>()>();
        this.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCL_reg> = $r3;
        this.<avrora.sim.mcu.ADC: float voltageRef> = 1.0F;
        this.<avrora.sim.mcu.ADC: int channels> = channels;
        $i0 = channels + 2;
        $r4 = newarray (avrora.sim.mcu.ADC$ADCInput)[$i0];
        this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices> = $r4;
        $r5 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;
        $r6 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput VBG_INPUT>;
        $r5[channels] = $r6;
        $r5 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;
        $i0 = channels + 1;
        $r6 = <avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput GND_INPUT>;
        $r5[$i0] = $r6;
        $r7 = virtualinvoke m.<avrora.sim.mcu.AtmelMicrocontroller: avrora.sim.mcu.MCUProperties getProperties()>();
        $i0 = virtualinvoke $r7.<avrora.sim.mcu.MCUProperties: int getInterrupt(java.lang.String)>("ADC");
        this.<avrora.sim.mcu.ADC: int interruptNum> = $i0;
        $r8 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$MUXRegister ADMUX_reg>;
        virtualinvoke this.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADMUX", $r8);
        $r9 = this.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCH_reg>;
        virtualinvoke this.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCH", $r9);
        $r9 = this.<avrora.sim.mcu.ADC: avrora.sim.RWRegister ADCL_reg>;
        virtualinvoke this.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCL", $r9);
        $r10 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg>;
        virtualinvoke this.<avrora.sim.mcu.ADC: void installIOReg(java.lang.String,avrora.sim.ActiveRegister)>("ADCSRA", $r10);
        $r11 = this.<avrora.sim.mcu.ADC: avrora.sim.AtmelInterpreter interpreter>;
        $r12 = virtualinvoke $r11.<avrora.sim.AtmelInterpreter: avrora.sim.InterruptTable getInterruptTable()>();
        $r2 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ControlRegister ADCSRA_reg>;
        $i1 = this.<avrora.sim.mcu.ADC: int interruptNum>;
        virtualinvoke $r12.<avrora.sim.InterruptTable: void registerInternalNotification(avrora.sim.InterruptTable$Notification,int)>($r2, $i1);
        return;
    }

    public void setVoltageRef(float)
    {
        avrora.sim.mcu.ADC this;
        float vref;

        this := @this: avrora.sim.mcu.ADC;
        vref := @parameter0: float;
        this.<avrora.sim.mcu.ADC: float voltageRef> = vref;
        return;
    }

    public float getVoltageRef()
    {
        avrora.sim.mcu.ADC this;
        float $f0;

        this := @this: avrora.sim.mcu.ADC;
        $f0 = this.<avrora.sim.mcu.ADC: float voltageRef>;
        return $f0;
    }

    public void connectADCInput(avrora.sim.mcu.ADC$ADCInput, int)
    {
        avrora.sim.mcu.ADC this;
        avrora.sim.mcu.ADC$ADCInput input;
        int num;
        avrora.sim.mcu.ADC$ADCInput[] $r0;

        this := @this: avrora.sim.mcu.ADC;
        input := @parameter0: avrora.sim.mcu.ADC$ADCInput;
        num := @parameter1: int;
        $r0 = this.<avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput[] connectedDevices>;
        $r0[num] = input;
        return;
    }

    static void <clinit>()
    {
        avrora.sim.mcu.ADC$2 $r0;
        byte[] $r1;
        short[] $r2;

        $r0 = new avrora.sim.mcu.ADC$2;
        specialinvoke $r0.<avrora.sim.mcu.ADC$2: void <init>()>();
        <avrora.sim.mcu.ADC: avrora.sim.mcu.ADC$ADCInput GND_INPUT> = $r0;
        $r1 = newarray (byte)[32];
        $r1[0] = 0;
        $r1[1] = 1;
        $r1[2] = 2;
        $r1[3] = 3;
        $r1[4] = 4;
        $r1[5] = 5;
        $r1[6] = 6;
        $r1[7] = 7;
        $r1[8] = -1;
        $r1[9] = -1;
        $r1[10] = -1;
        $r1[11] = -1;
        $r1[12] = -1;
        $r1[13] = -1;
        $r1[14] = -1;
        $r1[15] = -1;
        $r1[16] = -1;
        $r1[17] = -1;
        $r1[18] = -1;
        $r1[19] = -1;
        $r1[20] = -1;
        $r1[21] = -1;
        $r1[22] = -1;
        $r1[23] = -1;
        $r1[24] = -1;
        $r1[25] = -1;
        $r1[26] = -1;
        $r1[27] = -1;
        $r1[28] = -1;
        $r1[29] = -1;
        $r1[30] = 8;
        $r1[31] = 9;
        <avrora.sim.mcu.ADC: byte[] SINGLE_ENDED_INPUT> = $r1;
        $r2 = newarray (short)[32];
        $r2[0] = -1;
        $r2[1] = -1;
        $r2[2] = -1;
        $r2[3] = -1;
        $r2[4] = -1;
        $r2[5] = -1;
        $r2[6] = -1;
        $r2[7] = -1;
        $r2[8] = 10;
        $r2[9] = 10;
        $r2[10] = 200;
        $r2[11] = 200;
        $r2[12] = 10;
        $r2[13] = 10;
        $r2[14] = 200;
        $r2[15] = 200;
        $r2[16] = 1;
        $r2[17] = 1;
        $r2[18] = 1;
        $r2[19] = 1;
        $r2[20] = 1;
        $r2[21] = 1;
        $r2[22] = 1;
        $r2[23] = 1;
        $r2[24] = 1;
        $r2[25] = 1;
        $r2[26] = 1;
        $r2[27] = 1;
        $r2[28] = 1;
        $r2[29] = 1;
        $r2[30] = -1;
        $r2[31] = -1;
        <avrora.sim.mcu.ADC: short[] GAIN> = $r2;
        $r1 = newarray (byte)[32];
        $r1[0] = -1;
        $r1[1] = -1;
        $r1[2] = -1;
        $r1[3] = -1;
        $r1[4] = -1;
        $r1[5] = -1;
        $r1[6] = -1;
        $r1[7] = -1;
        $r1[8] = 0;
        $r1[9] = 1;
        $r1[10] = 0;
        $r1[11] = 1;
        $r1[12] = 2;
        $r1[13] = 3;
        $r1[14] = 2;
        $r1[15] = 3;
        $r1[16] = 0;
        $r1[17] = 1;
        $r1[18] = 2;
        $r1[19] = 3;
        $r1[20] = 4;
        $r1[21] = 5;
        $r1[22] = 6;
        $r1[23] = 7;
        $r1[24] = 0;
        $r1[25] = 1;
        $r1[26] = 2;
        $r1[27] = 3;
        $r1[28] = 4;
        $r1[29] = 5;
        $r1[30] = -1;
        $r1[31] = -1;
        <avrora.sim.mcu.ADC: byte[] POS_INPUT> = $r1;
        $r1 = newarray (byte)[32];
        $r1[0] = -1;
        $r1[1] = -1;
        $r1[2] = -1;
        $r1[3] = -1;
        $r1[4] = -1;
        $r1[5] = -1;
        $r1[6] = -1;
        $r1[7] = -1;
        $r1[8] = 0;
        $r1[9] = 0;
        $r1[10] = 0;
        $r1[11] = 0;
        $r1[12] = 2;
        $r1[13] = 2;
        $r1[14] = 2;
        $r1[15] = 2;
        $r1[16] = 1;
        $r1[17] = 1;
        $r1[18] = 1;
        $r1[19] = 1;
        $r1[20] = 1;
        $r1[21] = 1;
        $r1[22] = 1;
        $r1[23] = 1;
        $r1[24] = 2;
        $r1[25] = 2;
        $r1[26] = 2;
        $r1[27] = 2;
        $r1[28] = 2;
        $r1[29] = 2;
        $r1[30] = -1;
        $r1[31] = -1;
        <avrora.sim.mcu.ADC: byte[] NEG_INPUT> = $r1;
        $r2 = newarray (short)[8];
        $r2[0] = 2;
        $r2[1] = 2;
        $r2[2] = 4;
        $r2[3] = 8;
        $r2[4] = 16;
        $r2[5] = 32;
        $r2[6] = 64;
        $r2[7] = 128;
        <avrora.sim.mcu.ADC: short[] PRESCALER> = $r2;
        return;
    }
}
