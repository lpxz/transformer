public class avrora.sim.FiniteStateMachine$TransitionEvent extends java.lang.Object implements avrora.sim.Simulator$Event
{
    protected int oldState;
    protected int newState;
    final avrora.sim.FiniteStateMachine this$0;

    protected void <init>(avrora.sim.FiniteStateMachine)
    {
        avrora.sim.FiniteStateMachine$TransitionEvent this;
        avrora.sim.FiniteStateMachine l1;

        this := @this: avrora.sim.FiniteStateMachine$TransitionEvent;
        l1 := @parameter0: avrora.sim.FiniteStateMachine;
        this.<avrora.sim.FiniteStateMachine$TransitionEvent: avrora.sim.FiniteStateMachine this$0> = l1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void fire()
    {
        avrora.sim.FiniteStateMachine$TransitionEvent this;
        avrora.sim.FiniteStateMachine $r0;
        int $i0, $i1;
        avrora.sim.FiniteStateMachine$State[] $r1;
        avrora.sim.FiniteStateMachine$State $r2;
        avrora.sim.util.MulticastFSMProbe $r3;
        long tid_fire;
        java.lang.Thread thread_fire;

        this := @this: avrora.sim.FiniteStateMachine$TransitionEvent;
        thread_fire = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        tid_fire = virtualinvoke thread_fire.<java.lang.Thread: long getId()>();
        $r0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: avrora.sim.FiniteStateMachine this$0>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 21, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 103, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int newState>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void writeBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>($r0, 19, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 103, $i0);
        $r0.<avrora.sim.FiniteStateMachine: int curState> = $i0;
        $r0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: avrora.sim.FiniteStateMachine this$0>;
        $r1 = $r0.<avrora.sim.FiniteStateMachine: avrora.sim.FiniteStateMachine$State[] states>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 20, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 105, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int oldState>;
        $r2 = $r1[$i0];
        $r3 = $r2.<avrora.sim.FiniteStateMachine$State: avrora.sim.util.MulticastFSMProbe probes>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 20, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 105, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int oldState>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 21, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 105, $i1);
        $i1 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int newState>;
        staticinvoke <avrora.sim.FiniteStateMachine: void access$000(avrora.sim.util.MulticastFSMProbe,int,int)>($r3, $i0, $i1);
        $r0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: avrora.sim.FiniteStateMachine this$0>;
        $r1 = $r0.<avrora.sim.FiniteStateMachine: avrora.sim.FiniteStateMachine$State[] states>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 21, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 106, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int newState>;
        $r2 = $r1[$i0];
        $r3 = $r2.<avrora.sim.FiniteStateMachine$State: avrora.sim.util.MulticastFSMProbe probes>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 20, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 106, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int oldState>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 21, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 106, $i1);
        $i1 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int newState>;
        staticinvoke <avrora.sim.FiniteStateMachine: void access$000(avrora.sim.util.MulticastFSMProbe,int,int)>($r3, $i0, $i1);
        $r0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: avrora.sim.FiniteStateMachine this$0>;
        $r3 = $r0.<avrora.sim.FiniteStateMachine: avrora.sim.util.MulticastFSMProbe globalProbe>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 20, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 107, $i0);
        $i0 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int oldState>;
        staticinvoke <edu.hkust.leap.monitor.RecordMonitor: void readBeforeInstance(java.lang.Object,int,long,java.lang.String,int,int)>(this, 21, tid_fire, "avrora.sim.FiniteStateMachine$TransitionEvent", 107, $i1);
        $i1 = this.<avrora.sim.FiniteStateMachine$TransitionEvent: int newState>;
        staticinvoke <avrora.sim.FiniteStateMachine: void access$000(avrora.sim.util.MulticastFSMProbe,int,int)>($r3, $i0, $i1);
        return;
    }
}
