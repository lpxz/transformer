public class avrora.sim.platform.LED extends java.lang.Object implements avrora.sim.mcu.Microcontroller$Pin$Output
{
    public avrora.sim.Simulator sim;
    public final int colornum;
    public final java.lang.String color;
    public final avrora.sim.FiniteStateMachine state;
    protected final avrora.sim.platform.LED$LEDProbe probe;
    private static final java.lang.String[] modeName;
    private static final double[] modeAmpere;
    private static final int startMode;

    protected void <init>(avrora.sim.Simulator, int, java.lang.String)
    {
        avrora.sim.platform.LED this;
        avrora.sim.Simulator s, $r1, $r7;
        int n;
        java.lang.String c;
        avrora.sim.clock.MainClock clk;
        java.lang.String[] $r0;
        avrora.sim.FiniteStateMachine $r2, $r6;
        avrora.sim.platform.LED$LEDProbe $r3;
        avrora.sim.energy.Energy $r4;
        double[] $r5;
        avrora.sim.Simulation $r8;
        avrora.sim.energy.EnergyControl $r9;

        this := @this: avrora.sim.platform.LED;
        s := @parameter0: avrora.sim.Simulator;
        n := @parameter1: int;
        c := @parameter2: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<avrora.sim.platform.LED: avrora.sim.Simulator sim> = s;
        this.<avrora.sim.platform.LED: int colornum> = n;
        this.<avrora.sim.platform.LED: java.lang.String color> = c;
        $r1 = this.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;
        clk = virtualinvoke $r1.<avrora.sim.Simulator: avrora.sim.clock.MainClock getClock()>();
        $r2 = new avrora.sim.FiniteStateMachine;
        $r0 = <avrora.sim.platform.LED: java.lang.String[] modeName>;
        specialinvoke $r2.<avrora.sim.FiniteStateMachine: void <init>(avrora.sim.clock.Clock,int,java.lang.String[],int)>(clk, 0, $r0, 0);
        this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state> = $r2;
        $r3 = new avrora.sim.platform.LED$LEDProbe;
        specialinvoke $r3.<avrora.sim.platform.LED$LEDProbe: void <init>(avrora.sim.platform.LED)>(this);
        this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe> = $r3;
        $r4 = new avrora.sim.energy.Energy;
        $r5 = <avrora.sim.platform.LED: double[] modeAmpere>;
        $r6 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        $r7 = this.<avrora.sim.platform.LED: avrora.sim.Simulator sim>;
        $r8 = virtualinvoke $r7.<avrora.sim.Simulator: avrora.sim.Simulation getSimulation()>();
        $r9 = virtualinvoke $r8.<avrora.sim.Simulation: avrora.sim.energy.EnergyControl getEnergyControl()>();
        specialinvoke $r4.<avrora.sim.energy.Energy: void <init>(java.lang.String,double[],avrora.sim.FiniteStateMachine,avrora.sim.energy.EnergyControl)>(c, $r5, $r6, $r9);
        return;
    }

    public void write(boolean)
    {
        avrora.sim.platform.LED this;
        boolean level;
        byte snum, $b0;
        avrora.sim.FiniteStateMachine $r0;

        this := @this: avrora.sim.platform.LED;
        level := @parameter0: boolean;
        if level == 0 goto label0;

        $b0 = 0;
        goto label1;

     label0:
        $b0 = 1;

     label1:
        snum = $b0;
        $r0 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        virtualinvoke $r0.<avrora.sim.FiniteStateMachine: void transition(int)>(snum);
        return;
    }

    public void enablePrinting()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $r0;
        avrora.sim.platform.LED$LEDProbe $r1;

        this := @this: avrora.sim.platform.LED;
        $r0 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        $r1 = this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;
        virtualinvoke $r0.<avrora.sim.FiniteStateMachine: void insertProbe(avrora.sim.FiniteStateMachine$Probe)>($r1);
        return;
    }

    public void disablePrinting()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $r0;
        avrora.sim.platform.LED$LEDProbe $r1;

        this := @this: avrora.sim.platform.LED;
        $r0 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        $r1 = this.<avrora.sim.platform.LED: avrora.sim.platform.LED$LEDProbe probe>;
        virtualinvoke $r0.<avrora.sim.FiniteStateMachine: void removeProbe(avrora.sim.FiniteStateMachine$Probe)>($r1);
        return;
    }

    public int getState()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $r0;
        int $i0;

        this := @this: avrora.sim.platform.LED;
        $r0 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        $i0 = virtualinvoke $r0.<avrora.sim.FiniteStateMachine: int getCurrentState()>();
        return $i0;
    }

    public avrora.sim.FiniteStateMachine getFSM()
    {
        avrora.sim.platform.LED this;
        avrora.sim.FiniteStateMachine $r0;

        this := @this: avrora.sim.platform.LED;
        $r0 = this.<avrora.sim.platform.LED: avrora.sim.FiniteStateMachine state>;
        return $r0;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $r0;

        nop;
        $r0 = <avrora.sim.platform.LED: java.lang.String[] modeName>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        double[] $r1;

        $r0 = newarray (java.lang.String)[2];
        $r0[0] = "off";
        $r0[1] = "on";
        <avrora.sim.platform.LED: java.lang.String[] modeName> = $r0;
        $r1 = newarray (double)[2];
        $r1[0] = 0.0;
        $r1[1] = 0.0022;
        <avrora.sim.platform.LED: double[] modeAmpere> = $r1;
        return;
    }
}
